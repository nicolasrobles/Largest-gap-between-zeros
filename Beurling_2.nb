(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    415352,       8497]
NotebookOptionsPosition[    408043,       8277]
NotebookOutlinePosition[    408389,       8292]
CellTagsIndexPosition[    408346,       8289]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"u", ",", "a", ",", "b", ",", "d", ",", "S", ",", "B", ",", "t"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"B", "[", "z_", "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{"2", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", " ", "z"}], "]"}], "\[Pi]"], ")"}], "2"], 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", "z"], "-", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"n", "=", "1"}], "\[Infinity]"], 
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"n", "+", "z"}], ")"}], "2"]]}]}], ")"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6670476120413713`*^9, 3.667047682602565*^9}, {
  3.667047795222919*^9, 3.667047845715372*^9}, {3.6675705886649303`*^9, 
  3.667570589193331*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"S1", "[", 
    RowBox[{"d_", ",", "b_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"d", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "b"}], "-", "z"}], ")"}]}], "]"}], "+", 
      RowBox[{"B", "[", 
       RowBox[{"d", 
        RowBox[{"(", 
         RowBox[{"z", "-", "b"}], ")"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"S2", "[", 
     RowBox[{"d_", ",", "b_", ",", "z_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"B", "[", 
        RowBox[{"d", 
         RowBox[{"(", 
          RowBox[{"b", "+", "z"}], ")"}]}], "]"}], "+", 
       RowBox[{"B", "[", 
        RowBox[{"d", 
         RowBox[{"(", 
          RowBox[{"b", "-", "z"}], ")"}]}], "]"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"char", "[", 
     RowBox[{"b_", ",", "x_"}], "]"}], " ", ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "b"}], "<", "x", "<", "b"}], ",", "1", ",", "0"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"S1hat", "[", 
     RowBox[{"d_", ",", " ", "b_", ",", " ", "x_"}], "]"}], " ", ":=", "  ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"S1", "[", 
        RowBox[{"d", ",", " ", "b", ",", "t"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Pi]", " ", "t", " ", "x"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "200"}], ",", "200"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"S2hat", "[", 
     RowBox[{"d_", ",", " ", "b_", ",", " ", "x_"}], "]"}], " ", ":=", "  ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"S2", "[", 
        RowBox[{"d", ",", " ", "b", ",", "t"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "\[Pi]", " ", "t", " ", "x"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "200"}], ",", "200"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "n_", "]"}], " ", ":=", " ", 
    FractionBox[
     RowBox[{"Log", "[", "n", "]"}], 
     RowBox[{"2", "\[Pi]"}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"id", "[", 
     RowBox[{"b_", ",", "d_"}], "]"}], " ", ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"S1hat", "[", 
        RowBox[{"d", ",", "b", ",", " ", 
         RowBox[{"x", "[", "5", "]"}]}], "]"}], " ", "\[GreaterEqual]", " ", 
       "0"}], " ", ",", "1.0", " ", ",", " ", 
      RowBox[{"-", "1.0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Shat0S1", "[", 
     RowBox[{"b_", ",", "d_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"2", "b"}], " ", "-", " ", 
     FractionBox["1", "d"]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Shat0S2", "[", 
     RowBox[{"b_", ",", "d_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"2", "b"}], " ", "+", " ", 
     FractionBox["1", "d"]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"digammaintegralS1", "[", 
     RowBox[{"b_", ",", "d_", ",", " ", "x_", ",", " ", "y_"}], "]"}], ":=", 
    " ", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"Gamma", "'"}], "[", 
           RowBox[{
            FractionBox["1", "4"], "+", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "r"}], "2"], "+", "x", "+", 
            RowBox[{"y", " ", "\[ImaginaryI]"}]}], " ", "]"}], 
          RowBox[{"Gamma", "[", 
           RowBox[{
            FractionBox["1", "4"], "+", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "r"}], "2"], "+", "x", "+", 
            RowBox[{"y", " ", "\[ImaginaryI]"}]}], " ", "]"}]], 
         RowBox[{"S1", "[", 
          RowBox[{"d", ",", "b", ",", "r"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"-", "200"}], ",", "200"}], "}"}]}], "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"Log", "[", "\[Pi]", "]"}], 
      RowBox[{"Shat0S1", "[", 
       RowBox[{"b", ",", "d"}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"digammaintegralS2", "[", 
    RowBox[{"b_", ",", "d_", ",", " ", "x_", ",", " ", "y_"}], "]"}], ":=", 
   " ", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"Gamma", "'"}], "[", 
          RowBox[{
           FractionBox["1", "4"], "+", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "r"}], "2"], "+", "x", "+", 
           RowBox[{"y", " ", "\[ImaginaryI]"}]}], " ", "]"}], 
         RowBox[{"Gamma", "[", 
          RowBox[{
           FractionBox["1", "4"], "+", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "r"}], "2"], "+", "x", "+", 
           RowBox[{"y", " ", "\[ImaginaryI]"}]}], " ", "]"}]], 
        RowBox[{"S2", "[", 
         RowBox[{"d", ",", "b", ",", "r"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"-", "200"}], ",", "200"}], "}"}]}], "]"}], "]"}], "-", 
    RowBox[{
     RowBox[{"Log", "[", "\[Pi]", "]"}], 
     RowBox[{"Shat0S2", "[", 
      RowBox[{"b", ",", "d"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eta", "[", 
     RowBox[{"b_", ",", " ", "d_"}], "]"}], " ", ":=", 
    RowBox[{"digammaintegralS1", "[", 
     RowBox[{"b", ",", "d", ",", " ", "0", ",", " ", "0"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6670480114181767`*^9, 3.667048013617117*^9}, {
   3.6670482748758287`*^9, 3.667048308257929*^9}, {3.6670483466987743`*^9, 
   3.667048527721767*^9}, {3.667049282321763*^9, 3.667049284944456*^9}, {
   3.667049347679956*^9, 3.6670493504960413`*^9}, {3.6670496083893127`*^9, 
   3.6670496332864*^9}, {3.66704967005993*^9, 3.667049785941904*^9}, {
   3.667050017834449*^9, 3.667050023397047*^9}, {3.667051638906693*^9, 
   3.667051663568714*^9}, {3.6670520635765553`*^9, 3.667052090414955*^9}, {
   3.667052125559317*^9, 3.667052213742152*^9}, {3.667052249397622*^9, 
   3.6670523124127827`*^9}, {3.6671171684542837`*^9, 3.6671171752035*^9}, {
   3.667126946868658*^9, 3.667126965077454*^9}, {3.667570621519842*^9, 
   3.667570622642468*^9}, {3.667570663320944*^9, 3.667570694371903*^9}, {
   3.668798108344022*^9, 3.6687981480875397`*^9}, 3.668798213506191*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"delta", " ", "=", " ", 
   RowBox[{"x", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"beta", " ", "=", " ", "22.36"}], ";"}]}], "Input",
 CellChangeTimes->{3.6687982198892107`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S1", "[", 
        RowBox[{"delta", ",", "beta", ",", "x"}], "]"}], ",", " ", 
       RowBox[{"S2", "[", 
        RowBox[{"delta", ",", "beta", ",", "x"}], "]"}], ",", " ", 
       RowBox[{"char", "[", 
        RowBox[{"beta", ",", " ", "x"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "35"}], ",", "35"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S1hat", "[", 
        RowBox[{"delta", ",", "beta", ",", "x"}], "]"}], ",", " ", 
       RowBox[{"S2hat", "[", 
        RowBox[{"delta", ",", "beta", ",", "x"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"Log", "[", "3", "]"}], 
         RowBox[{"2", "\[Pi]"}]]}], ",", 
       FractionBox[
        RowBox[{"Log", "[", "3", "]"}], 
        RowBox[{"2", "\[Pi]"}]]}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.15"}], ",", "0.15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "12"}], ",", "40"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"p1", ",", "p2"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6687979381528516`*^9, 3.6687979629535294`*^9}, {
  3.668797993897895*^9, 3.6687980244018655`*^9}, {3.6687981032499437`*^9, 
  3.6687981036892476`*^9}, {3.6687982449545536`*^9, 3.6687982544156265`*^9}, {
  3.66879830388033*^9, 3.6687983055358715`*^9}, {3.6687987171351695`*^9, 
  3.6687987315474586`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.668800004589285*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwcmnc81d8fx2UlkT1CxrWvLZt8joy0pb6RJCurQpKQjMgmK6MQIiVk7zrH
LZtCFCVUZsYVkSj9Tr+/ejwf53zOeJ/3eL3dxOw9zC/Q0tDQzNPT0Pz7N45M
/+NvkAGy/W4+xnwvGUrFX/MBNw0QzdvHhE9cMnzxfWo92N8AiapQ/cyCk+FS
XcefbdcMUHCA4kdzx2QYJaQbvN8Lz6/XaLvxXzIkBRfThnrgcUsbPh6TZHjq
wJ3t9G54/a61nnuSyXChiCbayNkAjYuZEpHcyTB8lxfLbUcDhBQiyDO0ybBu
8BQH43m834mYyW2jSVDIUUCQ6RQer+nbUxaXBKvbYrJMT+D9jm+aGfkmwWNy
f0SijuH9Ugb6zeyTYPDymATzQfw9e9fpd2pJ8GtwgSKLvgHKWfB3LH2bCIuy
lPezyxggkMVmHPkrARpuy3tlJonXq/1mKzKSAEccuQ4kkvB6j5CSwYsEuEt+
7TDnHry/VE09OSQBXmlo/I+bE7PDnBbalgC13pu48v8GiEakx+nNaBxsZT+X
INoLUPCXT807uKOg463jU5I9AIFbpvt/NUZCuh8GenKdeLzmXbWrQyQE76Vm
1F/h75/uYpoui4ANWUvE4To8Py/mLfOBcFhCDqNey8HzjX+Pr1wIhSlGT491
eWKmKwsbNbwBVWuy8nsvYxZ7dSbmjj/sk07YGHTD67GXxvOP+MFdO689Gnf8
t9/FDj5fXxjZp7+1aonHb6bKRj6/Bm/Y9JeIGuBx5kDKhThPKND7ik5KH4/L
qg/bjXrAOoPaM3K6mFsyn0wXuMMfEpkMGuqYZ+yvnDC4BN3nLpw7LIvZ3dj5
TokzZDlnWWkmhdnYsSUpxQk+fX1ox2lxzKkvch4FX4Az5UrVtnswryuTEl0c
oL3vLxYfDsy9b2vfrdnATAHThZJdmF36M9/onYODTak9kzsxm73lSIk7C023
qcX/x4iZ+eafi2aWMOThLfc4OsynuK6vUk7DBuO+Yy00mK38gjUM/oNW3J+E
3dYIRMNS7tRpZw57LP3HhpcwL5slJ9GfgCCLL+fgHObYXwO/nI9DKSlzMdlx
zKLW9fuvHoIZbtTP6R8wW8v5PRA1hSzPYvOYBjH3hqZyzBrD75pt4jMdmG2P
mNH1GEDHAMcJi1eYlT9b9fUT8B3aVtD2AnOOXdM5Yz14kOHBBc36f/z68p1l
Ldh0UE+qsBLz0E/5gx/VoVL88BRvKWbTG82XaPbCvH6fwvDHmOtOfv9grwx5
+Lhd1vL+rf/82xSjPIw8Wy7jlIUZcI7ItkrDzQfHZgfTMKPJZ9oMEtB9Yu6J
cdI/lqJ50yIKx2Wi3KpjMQc//EJwCcGTl6XkJCP+fe+rgfL5YGv5y7mUEMw0
TV+DDbmh1pptMX0A5nHyudFlDvhUZ+uSt8//7+OlVMMOhYPuK0x4/pt/Xqwl
gR0mvtRaPHnx3358rt9uc0B6pnelLy/8G/8tMJHOBX2OXPXYa/vPXlYlS928
cDaBXfmh1b/9o1hNJQWh9WDJEud/mMte18WZi8LXuw+X3zr+j/+721koDg1s
Zq4sH8Rslqc7nywNq/Juq9ob/fu+sCiYXx5KT5NW+vT/7S/IE3VfGd6TQ5UG
2v/eS+pesu9eyOp5zrt8L2YXOiWxfA0YXLWhJqb47z5Zot+FdeDKetpqggzm
dliBZvdBp33qNTTimB9fii6gNYCHWz00x/kwT1xRrE83hi+YWdePc/6bz3fx
uZgpVD5eVAdZMAsNp0UPHIK8QxPaD7b9+/72RQ9rM5wvb23s+q2PaEpvgqjV
E/C3rUhj4Bpmeh8RtfyT8MvsGT2bOcy+7cNf9lvA/xR//u6ZxOwuz6a19wxs
90p5vm8cc7fyH6R9FpZsvtbfM/jv+9bbO6LPQ19WI4ORF5j1F963ZTlCzszt
y871mGmq01m/XcD5pCtvpRLzLZYjMQbO8MsBc/qdTzDXCEtf5nSDR27Ztmkn
66PgrxLZNcKecIpdwrclDrOYIoxZ9oQhD6ZlTkTi+VY2vRrdV2BNk3u0y008
7i2vJ5N4FYr+DDia5oy5/3OpiP112HAbbJHsMVuc5T16wRf+x03/rNQaf//T
yCTQ3Q9Gq8Swt57A43NGvH+TbsAfFzPe/tDVx/lSRtafMxi2j1efMWfH83/r
q3zVvA3tPfyYR5n1EaqlSb757Tb880ev0ZUBc/wzt7054VBV8JVQyMY+RHOy
emqFOxJm/tc/9mxiHwpu3zjaLx4DPTsXL7DW70O2jqmqvnMJkPlMBW9GJZ7f
ZaxecC4RFkxfa5MoxazhUX6uLxF+oP8jo/dwHxpvP3jC/XkSNCJ2zrvF7UOI
NVnqZ2EK5KuS9mq3w/NjrrnXtqTDJpuFjk9n8frnQ/asnM2A9jsqxVb+w1yv
Pze7kgFLbfT79hzC3++2ef9X5j402vGf8lVV/L1EyLHIwizoaXNrcQ/dPtR7
cjt/l18u7GT65HY1Xw+hhMyH3haF0LMyjxKZrYc8NzsC5BoLIY+Ni0B2uh4S
PfUShIk8hraVKx3tsXpovNbmI/u3x/DnOWZZ4Wt6KCe27IdpeBGUqNScbjfG
612hkc0bKoE3zyU5CE/rYv/lkvjrVAEtXdl70z/rova6/HuSmRVQ7Vq8HteI
LiqLKXjt0FcB52OjeZj68Lg5fY+oXiW0arrV9r1BF4GYg+OXOaughuBVuZZ4
XZT+cZ/sa1QNF4dOrlzU0EW9lSXsiK8edk70nZ9S1kWeRwvtHY/Uw4Kl4922
cnh8cnf3RHA9tGY6UvCfKD7PTFHhlVk8X9PIgmDWRTmU9IMhdQ3wUapaI+eo
Dqp7Vcj94EgTPH+KJ7T+tg7ytLlkVrgPQpOAu6nPg3TQEqly6+RlCOXzeYqa
/XQQEMmLD8uEcGOFp6/jsg7ij1ftv/ALwpRkXpEP/+mgWNZOgUunEbzRmKo6
elwHtc9O5MleQtD+K6/Jl4M6iLvkVFJWCIJKe/kuf9uH91eaHs17imBnP1/j
hqQOyucprN7YRLBsI+31logOqkqRoDFka4ZpJP4vtAI6qMxlv7gGqRk6evHv
2LkLr6c0r8R3oBn+5dhtIbimjbrJ82KZsc1wSjvDTWQJc070ImdWM+y22x0o
/k0b8Wfs2S1b0gzvle8ukBvVRlUSh98pdDdDtRMCK7qt2sh3X4zBFQYKFPC7
h6ujNkLD1IONnBS4LVdAwKhBG72aPO6QIUKBr5cEDI6U4u8Ly9RZtCiwmv/+
KbPHeP2922SyDSkwEwi6nMrTRvKljNkvjlGga4LgHetUbSQz9utugQMFmtXd
z7NN0EaZKy1nXS9ToMa4YI1jtDZqd9+jUONDgXuYMjtcwrTR/LaHz6KDKJBe
WejTpUBt5OgTEz0ZQYHfLDKXPH21kadvkVPLHQrsCxKiv+aF97cKWpRJo8Ds
N0JyN520Uf6zxcpr+RQY9jNTP8RWG7HEnjpuXUSBF0X2mN+20kbrF0XNm59R
oPmBrAtRp/D+Nt88HlZRoJbHHr+4Y9pIj3O/zbZ6ChRJy4pNNNVGapaNA8NN
FMgI9+Tc3f/v/huxcogC56eyKjP0tBF9QvP+VQoFvt0l3JaloY0sRTcr1Vso
sEEj+0OuMt7PsD1nrpUCc2yEFwvI2iidI7aLp50CI8KztxVJYPuzrq9XYHYv
FeYpFdZGLuf5l5oxn3qXLVPBj+f/PO9vgFl3S1ivhlMblRVWOSi3USBJ6sHx
BhZtVKxwwz8O78d0TMThBaM2miE/vGPxkgJ5UYvTKA32B46/fffxeSVUL7lt
bWghtW4nabPnFKiaz+kuvKqFfjPc8L2K72vAW39Fn6qFRB84ltFX4/eKPH/N
ZlYLHTkw1kRbRoE2Gwx+gV+1kAunUfwlbM9Ll4oDsj9pIaEfyXwG2N7+o+bB
L95rIRqZW8eCsigw0uxX6GifFopMCZSTSqXANMqDiK0uLTTAgp6oxVPgIzWT
GOFWvH/MsbYntymw6tF8vD7SQuPHWW+HBVAghT85yaZBC/n+eDX10osCe6O1
UwOrtFCxvcKKkwsFLriHZ714rIX0jIfUB05Q4O9x+dzRPDx/4U5kpjEFMp98
m7+VqYW0yGsvXmF/ldIULdZP1EJVbYMqKnsoUO1J6zObGC0UTPvq4dVdFGgo
eLky8LYW4tc/58j5txna/q1veOGH2Ubd1m60GbpfsX0xelULyfzimmPraYYB
XxkpW5e1kOefRQe+xmaY0XayQ99eC7W7kCYU7jbD/jsL718c0kI5h1kNHAya
4fi2lI+jRlooXbva5CW5GS5e1Rnb0tdCE8kjwj5czXCnZcSU/l683qDTzb4v
CBqJiq2+ENRCAUM1hkf8EDRPalsf5cH2PSbOrXwOQTt6999bbFqI6U9YuB1A
MHCmgY6g10JNvT+3PaVHsLbsFCec10RDhPGupB0QtpI2ecamNBFTBOkvd+sL
OJCSu/vvuCYa565tJYe8gEu+i6LEoCZKMCnet3PlOSQbRCrB55ooPZftdGRL
E8zsazwC4/F8qzDTtxINcDxf4IJRlCZ6/IDwP9JbDyV8/W52hGoiZXHxF4H+
9bBEWLP0rS9mtnemrF118MXFCrYZe01kuWTt32VdC8cZnvSza2oiMKIj/HR/
FZQY3j53V0UTsT9fv/JguBK6FDvRCcprIhe+eeHDHpXwu7mEmqQY3s+KtL0j
tQLS5jy4q71TE5kZnZd1fFcGJXRSLe3HNJCtuFdzqXIRdGFd9Zwe1kBmVeYc
L9SfwOLxk1GXBjQQzWmnABOtx1A9gqPBp0MDBbeOSrepP4ImA7GCMZV4vqJd
QBFnHnRxDx2tjNBAOQciSb5FSbA4z9ORQVkDAedCa865ZOJ3Yp84N1kDofqH
ejOVqcThENWvJAm8/n8lMkK3Mohv53/YAX4NlJB1RCdE8QEhvcf3/A0aDRRJ
K8Ss6VBA5KUFWX3vVUennKvzVxrKiPTYeLNPV9RRwkWlTNfK50SoT7FedaUa
Sr93IlzXvIdgamthly1VQ6LrjTsCX/UQ8XxjE5mP1ZDtE62xHZqvifQ6jriw
LDX0+Ba586fQG6J0w+fTyQg1pH55TZrWp5cYCjQIXLZSQ4TogfDuQ/2EQsQ7
qESrhooFTrIIM74j3qfRGBaZ7UXxjfPazemfiDBVsF3n8F5014qDvPT2E6Hc
E9TVYbwXdTkfvc/FNkpE0/49OauzF53NPSajfnuU0L/8x1FGci+yTBjie+M5
RjzavxH+6JcqsvzWmmebN074LKx05uWposR0w0m3y18I8ci9d1SzVBHt8DTP
g6gvRC/p6klKmir6HVFbSSn4QpAtlz9+jlVFAwdaVt99+kKMUpbmRa+roitr
5lPko18Jk/SFXQ8Oq6I9qb5P9WQmCB7DafP7P1RQ/BE5A4bXk8TrXzIvqhZV
kKIt+g/NThLhZW6yr2dU0HTEfoNzDFPE2p7FvzSfVBBzkNd5Xb0p4t36j2Kn
FhUUGRehF/x4ikgtpd2umqqC3CIulsz5TxP8AsKN7ZoqKNTa18SHYZbo7T0v
9UVFBeXds/CeEJolIiNyEzflVFCFY62TvNossf5DwkVRVAUd0Qr+aGo/Swy9
keNJYVJBJY4krmdNs0TGbW2P88PKSIbhcS2L2zdC4Psp8TV/ZSTVbCEi9WiO
YNpx/KH3Ncy3NNSO1M4Ra6IHxVc8lFGx6qfCo+1zRL/ZPvElR2X0Z3Tk1pfZ
OSK6TFL82zFlNOpxYvdJuXliw2ONNEpSRlF2JxkPF84TMxFLedZ7lFHorls/
xWvmiXcPvpE+8imjkrEPdEOv5omKN6OkIRZlxNvs7tf3eZ4YsIk3zl9QQvC4
9ilmgQWi+pOScexdJVTDOq5zL3SBSGKVMI6KVkL3yLcGpBMWCPd9/MbhQUpI
9I07R2LmAiGVRWMc7KqEFA0ny9eqFohU6z4j731KKEaj4zz7xALh89HLyHpS
EbVQBBzjdRcJ853ORmc+KKKQfUb9o8aLhKLuWaPTbxRRHa8dmcVskZi6Z2hk
Vq+IvspE0G45LBKnrbiNjOIU0bM5dRuD6EVCY7jaUF5dEYmZmQK73kVCxqA0
UU9WETFXeB3WG14kBJ48GjuyRxH176l1W/q8SPz1TbtxmUERlS9o5EwsLxLt
/H6VpYMKKF6QqkDLRSUagq9sgx0KSFKMVfCpAJUonnE9/ua5ApJt+lCgSKIS
iXVWc9QCBbTbLN+5VZlKWFnqiav4KKDcpL4o/SNU4ghSu2LgpoBcX/AdpZhT
CX0ZBXjCRgGp0N11Ip2hEuLre856mSig5+vmt30vUIn5tL9JlbwKiCdQc/VW
AJUY/ftz/CWzAoqZmZmhhlCJXuclxYEtebTps49HN4JKVGt+7vwxJY8ilMy5
LydSicD3FFqNWnnkkpBYYZJPJTyJRjOTp/LIU+DZ5eLHVMK+sDL79AN5tIfW
22W5mEocuJ6vcz1CHv06JkEWraYSOmOZkRE35FHSoUFfpnoqIX/g7rs0D3lk
oVbJ299EJdj5wr3qLOQRY5zXKeZXVII2KBC1H8ac/TDIr41K/Jjy2TVMyCMW
/fvsXZ1UYrjGueiXtDyir1sO5O2jEnmnD37RWZdDgtafz58eoRIpLwyUD8/L
oYwv26PGR6lEuJRO4NlxOfTb4o7F8c9U4uIaWSCgXQ7RfPvCPDJJJWxsxF1i
m+RQYcuN0I1pKmHWKliTWSaH5nfv6NiapRJqqSzmz9Pl0DultMn6BSohtUWf
04OV2sHhEPMrVCrB7/Rn4VMw5gNKdWzfqQTz61XdRW85dL1Eyv7uMpX4o74Y
teUih0xzJDJpf1CJpayp97vOyaFqcf4Ki1Uq8YVhTFLkhBxynRNZSlmjEq2D
b5oJbTlEx/OKp2OdSjD1cy9FKMgh2Ukho6ZfVOLg6zPCvWJyKNneKStjg0pE
d2Yf4efF5+8952a3SSW6W7/62zLLIbHlkRWu31Ri10uZJ4+3yKjA7/2tcszH
4eX3S8tk9Oi6pa3OHyqR0FjBoD1NRrFvggZLMffX/twb8pGMHHOD5Ni2qAR3
lZ59xxsysmnOeHoW839lIQkcr8jIX2HPgxTMqcWtL87UkRE1yOF4A+ahxzsX
covJaJvXa4YezAIFZoLfcsgo/FDLzn9snXv3oOpdMvJKrSj6Nz8768N1/ygy
Qju2yadiHssQeUS5SUbKlbuHz2MWTXUcYPYio+dqdpt8mO2TntCedCKjq0bq
Iy/wefPjF5XvW5GRusm3V6cwT0XvPf/1GBm962nfGsb3lYnwjZMzJKMZlZ1v
j2F2DX3eeFWTjMrEPkZXYnsVBdF+a5QjIznV4x5MmOdvHOCnFyWjVzdcOo5i
+yr6xpoc4Saj3arsX0Kx/T28+7xTmMgo1ZCH9il+n+VLZ/skvsuitPuf/Xvw
+6m55vy9NCmLRoVKHTvw+167MKlQPSyL7jd/ul6L33/9nEe0MUUWSR4c07mI
/UPHqqourkYWCSSG+6tg/7lx+tfUYJEsGtHSpJvD/rV1LNTQKVkW/RZwZdXG
/scA0n6HO8oiroyaDlPsryZ6I+Q3lrJoN1MMXzn250gtsTN8R2WRgezJiV0T
VIJF5Wl1obosOtIPOIrHqQQnCbq3M8qizRe8B7yHqcQpYfos9k0Z5DH4Uijh
PZW4K3Cwy5Iqgy5FK6U9HMT+zfVWeva9DNo+7RtRgeNNmH56fMcTGaQUiR5c
76ASclO7Th4+jFkhYOB9LX7//FdF54AMEuOKD6jC8R/u4E/rqS6DmPSabeMq
qcT4+GR5iogM0mewz1d7hv3nYxP76Io0YmnquGbzCMd/n9trz0xpNM2syHQw
hUp8aGw9mLoghebOZz6r8sD38w/IffxFCim4sTh5XaYS6tqqvxreS6GPSoEf
VS5if67JejzWLIWSd2el1zhh+5R7b5dNlUKm3A8sPp6jEhWPSC2N+lJIsuj3
8TKcT20vDAm93iuFbozOh987RCVYJeK9x2Wk0M4TzVmRplTCJfeXOAOXFLo0
evCrpxG+f2bvrWPTkqhux/Y/3npUIioxEHy+I4mujURYOijg/BypNcUYJomo
KreFvORwfgtajpH3lUTcbT1OEbJUIv2S0/vrtpKoqjqaplWSSjw6cMx9l4ok
Eu/NMkwVphJu+kzcapKSaNb9lvaIEPY/dUr9md2SKMVzZ5SsIM7PJA2Ggm2S
iMVaLOkDH5V49WdPpm6/BDrZ9LsinQPb58d7A7tWCWThYfpZkB2fZy5xOrxB
AmV/1ucs3EUl3g4x7O3Pk0CsraqvBnfi/FO50OFyVQLVPfmim8qIz1NU6BHv
LIEu2HVYnGXA8ZJrx1N1VgLV84SsytDj/BU/aPvXEI+frpz9tI1K/HV9/vMu
twRinHq0/uzPIkGxvZ7VyCSBVMwFLzb8XiTCLVQMP/8WR6MHQ6t7NheJXcYF
8fKT4mjxwsnvuzYWiX7d82rmw+IofouypPdrkbiruvvD9R5xpJiiMXF1fZEQ
Eo2TfFktjkY4Apt+ry0S47wHumaeiCPdQd+iY5jzWbdd2ZUtjnjp2rKfrC4S
LvSNvGpJ4qj8fkAmK2a5Te+mM+HiqGWU55H/j0Vi8buifZC/OFrV9n2+tLJI
VMzMbC9wF0ddeitfPTDrvLM+uXRaHEltRdlG4fq91c37i+ewONq0t60Rx0x5
2ZutS4ijwPZWgbbv+H4N0UZ2e8VRlZti7FXMB8uNvoVLiyObbl8mWcwsj7fu
FAuKo+nX67HTS4tEb3adej+bOBp7fZX3GeaUu14ff9KJI/cWUm4QZstY+ZA9
6yR0071S5gxmodApKcN5EnK4evCxLuYxv5xul3ES8r4XJCCNOc/Tyit+gIR+
bLj4CWJ2cubmr2onIRX1pBf8mMk2r58PN5HQ42e0X4UxL56KdPhbRkJz7/eN
KWCuOLx/h2QBCe10MXpqjPna/t+lhzJISLLsrr4T5vxNqUCdeBIKa9gVHYt5
oOrEUXIoXr+0+2IDZnr3ACEBXxKqdGv4SMWsJl04t+MyCa36O/bJ4/s7jvc1
/LIjIXmWDcMrmJMzfkfNniah3Omj5OeYKebSZ4YPk1C2+3t/dmzf5Z3mMh2A
hL6nV8pdxExqCfhZp05CaasFqj2YTwQWtj4mk9Dvkt23NfB7lS39dozkJiHV
rZvjwvh9x59Iq/nuICEjmZT+LMxsDuZ0Llti6MKM7xdx7A/ug4W5B2bEkHGJ
DdkY+092fL+n5icxxPtkznQcc8+BP4R0vxjaPGZnfuvnIiHfYD7K2CSGDi5V
UD9gf7S+erNkrUwM2Rc8dE7E/hor/zhgqkAMDRQ/TjqG/Xku+49A6x0x1Dbx
qXUE+7uApcy36jAxpDbyurwEx8MhjpP1BX5iCK1acN3G8VIU+tjitoMYErYq
2jD5i/3X5WSKkaYYovnZFs9Dh/OFWKCDmrwYqpWdcOTH8df24bGqhJgYMt/o
lBPD8Sl1dKuXbqcYik2xNTLaTiUmVJ6wvhwVRW9qKNmvcXzbbW6FG4SLonsl
xzS+8uD8WCV7WuWGKOqrTdmvh/MHunxKUsxTFB1qXGC6x4/r7fiTlzRWomjE
v8rDAeeb0VenaJCCKNr3lNNMToxKVAn9txJQJIK85/n3BeB8B/5WKIQmiaCj
DyV0tJWoRNdndpcofxHUvO8/iQ2sX7886h65e0gE9QiZHo5QoxIcKkatpd+E
Ebdq0dMuXSrhbrw3Y5wsjBybOqq+4Pwr7c5BGD0VQq0nYmavu+F8bebhdyhZ
CDG6lAz5XsJ6d29PpdkNIfTGZ2nDz51KnF6PlDl3WAhNt7U5BHhRibBbNJw+
c4LI44VnRqA/rjep1IlCOUHUZqubdj6aStyDPdE7i3cj76m51AGsX191vrod
krIbBXLujMsqohKLg43BPwN2oxrHAH8HrGcN55/4fD26G90zrv06ievVPH+4
fSOVH70jwtIpNfg8Xvo6F/fyozQaUmXHS1wvbqqrfxbkR1rphRcsW6hEUqS8
sgU9P3Jtk+/90kolprMFpAwH+dA2JceIb7h+JnStcQhe50PeVkuPXr7B9pJ4
NtvZwIvU1AtW4z/g+q38aAI85EVfLLay+z5SCQ3drLGaGF7UtDOfle0TlYg5
ETOYZ82LND+k7/Afw/oj0LnZf4sHBd0O1mDD9d8myqZpaYoHSTnpU6T+6YOU
/2qd3vAgtqvF9VpTVOJTkWGJeQ4PeifzX8vhGVyv34tkkPfzoADvMAuFeSpR
9oU3JYfMgwJf0JrwYf3xYYH1Di8XD/prg6w3MSvR/w6jneBGuT2L0+VYr1ix
rQT5dnOjzVNNx8OW8HsIfPNfrOJGIT23Ws2wvhlSHvL8cJsb8SSkd73H+odW
781FM3dupB2x2yxphUooHGh1aj3NjVp71t6YYL1061yVdYU0N8r5sasiC+sp
uegE0+gOLuSoEVJAi/WXooBrakolF7LTjkkNxaxcZDCRncWF0myua/7FrNa5
HFR5hQuNGercnsL6TcOqq+f5WS60r3FE2RzrO61vDwXbjbmQX916VB1mPeb/
akd2c6GBQEHja1gP6t9TYJim40JP+nc87sIMyIwnvy9wImIXaBDCenJ/w2jO
5ntOdJ5rOMAFs9Gh2kUGCic6bqD6vRSzyYc7euzFnGhEbY5/CbOpm0u0QCon
AvGTq3JYrx7aAEMSwZyotsQo2h7zkejdUkpunOixx+WhZMzHBJavap/iRJaz
DF8hZrOizmZDfU7UJrhaPIXZXOch2zEZTiTxxF6bCevjU503zllycqKu8JoY
CcynrU49tf/NgbqL0gt1MVt+k/91aYoDhdYtJRzFbOXPcOB6LwcSfjJ52Oqf
PmceTQlp4EBHPD+N2GG2uVfzJSafA5UWBJg6YrYl31FOjedAE6KPkv+N2zc4
B+b4ciCXNP+XZzA7HgLdRfYcSGuf5acjmJ0+8AtUH+FA0lYfpnQwu7h9d4Ya
HIhpZmhSHLPbRkd1hygH7rdcxrdjvhSdRzfAzIFYNt+P/Lufu8CNE6M/2NGv
hcrPCLNn0ckHM6PsaMCasnoXs5eO/MJyOzvKE6YXdcLs3Umv+6eCHW2nqXJW
wexj9SlyexY7sncxGfiJ7e/7rfodRwQ7yml2uVyPOYDZ2UvqLDvaDRSMFTEH
3iOQsjE7uvdrf8pn/N7BZP5dukrsaEfba+UEzGGHOp4cp2NHAi3R18awv7BU
G1IrP7ChbKsvSsGY2Qd/RLeXsiG2ij9nhTDv5rGgfD/NhrTcOJQPYP8TVmey
YZRjQ/xn384NYv8k/Vf/S+DvLhRAPwdsMZPvCqoYFe5CMRJD484/cX/AM/4g
9ScrmkL+UkbY//XVE3WfdrEihetnPpTh+Nj/3/738AErYjCfDtqN+dDd/F2z
B1iR+njxm1EcX1Y8rjd101nQE+5nQzo4Hmt55E5kubCg80Xh+n44Xrl5FyT+
arGgXn7y6cpFKvGa90o3ZXgnmg0zGhXA8b2f30/wkOBOFJpiql6P+2FZwah6
y+wdSPFNecP+LzhfCB6Oa3DfgXi6JWKMcH/9RZDVTojYgT70zSkb4n4jUyiR
aXyMCfUq8x3WxP04u3CGhbMYE1K73jz9G/cf66JPVq/lMyJC/HEKG+4v/hO7
2PHemxHxXXqtMoPzYYWYQpa2MSPSPS43/+I19g9SudGfSQZUXv2I1bkb53fx
+uQwaQZ0SL3QKr8N10epDpXkIjoUlPPx5+Rz3F/Iz14uK6NBXIdHKoVwfs/T
cJ/WCaNBuXnXA3/i/P8MrNi2WNCghwc5N/oLcT5+slFY9ecvzNwtaRpbQCV+
/CJ5M93bgmuyY7zMuVSi8d5VlrL+TSgjpLQC0qnEQOnNv6/8NmGIPHe6Yhqu
D5SI5WHRTRhAdK/sScXvPXd/iM5jA0Y+Lmalxf3MLd1X+RY7f0FxFy2fz3fw
e41w7/truAate5wYmSOphMOSsDL33Co8d06HXyAC+ye9rLhs0ipU97nbIR9O
JUrl9+04Of4DsldvElZhuJ+7eWHwUcAKtB4SnXoXjPNjokd7o/gKjAwYO/8n
COejAr/G3s5lWF7IMiaF2acnLneDfxmWtDrsCb2J8/memsvHqpdg+PemT3a4
Xq6oIFsH6yV4mhhvy/XD/m3SedKXbglGxbFzTvri84w0XTV6uAjXqWZL167j
+niTlWX+4xxsZT+90OyN469AbJmHPAfr2/ct78H8qEd9CAcdvDnsU3DzKpVg
FrbJT+aehToPRHRMcb3uf1Gqp3t0CoZLm23f6UklfsnFSn/NnoSfFXS3ReJ+
TzTDlTNmaQJuIqmXTJg9rkrMfEj+ClVTW+p5cP1PHd/29tbkF6jLemYzF/eD
L46OPSdrfoEqU8XCqphZZO4l+38Yh02X2Ek2WD/svXs9kCQ/DodHLFg3cL9Y
RV/Un7I5CqsrXi9lYD5RLxKotn8Ebq27VE1i/ZGT/OFk2OQHSMnnyk7EvHj5
ruxA5DCUg5tJBpijSTsHr755B62mNZ+VuOL69rul6KXXINTtOTvqiln6fXAw
F+8AXLtuLUPG7FOue9qhvh/OcKQlLLpg/RGzJldp3QcTfysL1GLmdCrfRkfT
C62K+dpDMTcHD5UWmPTAoXCarFOYbdSPWRnHdcKOly73ZTFvzL5kmHzbBnXN
7rbQYk7L1i4PE2iB96qS9ow74/p38pm1hB0Frv5WK2jGnMt2iD3yOISS+Xw2
hZg/+Ko7t43Uw70hWQcTMXN/EX3B6FYF7WqXXIIw30vlJ8culsCux7TPr2Bm
daW+Z97xEObNxZi4YKa5HruT60ACfGXAwuiA2SWBz+EFmw/Bmty5afdvf4J/
3/Kx+wTp24D0BczSR6s9N2IfE5+u0kRfwmy1z+PzvvpyQiZkVswXs+hAaPSW
XC0RHLOyGIF52i19L8xuIjZ0Dy7dx/w++PQiZGomRr1HJKow63SP7xelvCTa
zznF9GLO4ruYFnyjlfjPy5n0/d/5HFbnxtU6CNdk6RkebB/H0iBgsNhFDArU
fNDH3PZrx93cwtfE5++zPy9ivkvq/BFc1kssPbHbl4X5gCmbiAprP8GWHvq4
H3NRcsbVxNYB4sayycRB/J7W9aNZBuLviMofmaUxmFnHxNu/B70ndHMZk/ow
e5JLhcy1PxDMf3ffdcX+QjJbMaFN/UhcmWksbsQ8cE3rSsXyCEE1te/hwP6n
2Uxp4SweI55fMOPrxOy9QudrFzZO1L0c1pDH/ns0XCquXvUzYXZk7nAS5r9P
L9a63vlC5G5/D9ywv9v/XN3ZaTpJzC94lpvieBliGgQLDFOETqr37wHMRwWq
rrG/nCJA9Ez1BRxvWvu8xk7vmyGOuNQdT7mCzx+6WPFVZY5Qnc5nl8Txeyul
Z5qROkdMGPZR3mJeLygWIhfPE6EwMDn8Gs737W7hnlKLxPDeYw7rPtgeESvF
gXFLxB35T147cT7hZXc4wD6/RNRws/YNY+5L7/+ce+g78Wl2Y/7pDayPisp5
W7YvE98Gf8icxflIpccjeOetFeIB+ZTyBM5njFzzJ9N91oiXtfVVyTg/Nt8/
uyg7uEYsTAXrpkXhfCTRFdm49ydxX902MQvr++/qRc9Hl34Sp79edK6IpRIj
li7Skhd/EdtLL33aSKAS5dkTG+XnfxOMIYaOPzOwfry72HtBYhuolfJLECjB
8487rN822wZoctICiVIc38xDIo8CtoHzF116HLH+nwxqdp8a2AYu7nM+WFaO
65tbCovzbVpAH+w2aor7AWagY+oyRQeaT1sFXoFUom6j1COSkx5ELlVdS0FY
D1WLpz3WpweUcy6NNc34PmTWqZlUejDzcWB+HfcPvjzjoa4HGECH+V4Gr3bs
/99uQ7fHjKCk5hOTDK6PKQUbU9EDjEBR4+2QZj+uz7Yeu57SbAfuIhWTxm+p
RPag5bk5y+3gRILOVetBrP+Q3ObFHUzge5xt7BVcb1/d7dO47LYDUDu+X1TA
9drLzMQmLnUHuGlXZ7Eb13PRnY23Syg7gPHx8zdpv1KJG8H5AwsCzKDiW7tW
N+4nVC9e93LvYgYvGTvbdHG/kAP2lHrIswCGxwmXArF+WBUIydpvzQKYnLYf
N8H64tDqRCxPLAvoWBIY3YH1x48nxRcb51hAyOrQi1DcDxwMYz8bL8gKHupf
oWpjvZJt433I7jArWOUKi57DfIBLT3b7U1YQXOKPANY3mQsP+D98YAUXJaT1
Jv79Pb2NjqmEeReQSv/89RbWR/cCuqbM3XaB2k+vbpSv4Xw9aZWfLcsGrmp7
a/djfWWIXiRfOcMGWBWYg49iPZZ+jxRqFMUG1Mi/Ql5iNjj+ze7bDBs4HPQ4
7AHWb13chY9tWNhB90DwJQas/1a3nRE1lWAHXd+/frqw+a9+N7EJnmIHb1Sf
KPJi/ejd4R5Bf4kdZEj4/ryA+UGN6N+FUHawX6JEqAxz58N+n/f32YHTc5j8
A/OPhLBFVMkOctV8zPdivSocqOFU1MUOtA2njl3CfPDizKfkr+zgSN+1oAf/
9K3lvf9ubrIDruGPH7oxZxsf6XHi4gCPZkUtf2BuV90yMpPjAJ2sOYs8WE+v
iJQ1aRtygGKH7akqmIVZ7dXEz3IAxj5LkwOYTTe4ilmucgD22m8/T2P2mm4R
X4vmACciXR7aYs4auH5/LI8DCPu+Nfin/9ubZbk6GjgAhSO0+5/+Xy79GF3R
zwHQG8l9//S/UGYcbeY3DsDf1Bx3CPOBKML/Ni0ncFiuqlP/t77P9+/uApzA
RqumTgBzpsNDV0tVTuAaOBj5C5+/1ey/zwaHOIGjU4BEP+bv+7afkbPnBNda
3SPyMQvJ1fdy++P5Al0lnphN+C+abiVyghzanSka//oDhj1o+gkn+FZKp7mG
7Xt/+bVmXzMn+HVyKvkZ5tax4GcNw5zAOgo8tse81K0qnf8dz6/+fYUNs0DD
RHbcDi5g5mxPrcbva1yYyntdjAuwPeUVOY35XsgGw6ETXKBtfSAxFPvHK/fi
m3tduYDbhb9v2TFTz9qsCoVwgULfhtY07E9GGpQJahkX+KSugZKw/7mLe1sP
t3MBn0tsHYyY09mlBijjXIDOvyjcG+v9hW9RL++yc4OLM1dl9mH/9X2W588m
ww1IUg/E72P/pvduVIkiuEHtdBrfCvZ/oT/zDwLcucGcq9fPBNw/H2EzC3Do
5gZOy7NMt3G8Db112fvpKzdQYFXQqcTx6Jge8u30JjdgeXYm8iOO1xtilZaH
yDyg4Y9Eyj+9X7SXV10lkgcUOzOTT2K9r7GuOF/0gAfoLDylOYnjndJ04KFE
LQ9IS6tUPDpNJYaN/Tj4p3gAfUd3lfIklWCyHFnYMuQFTwePXa/G+t8pIO9R
919ekJ/63hG+w/4CGs+Z8PGB+NqfGa44PwUyDHAjRT4QWKn7adcArr/xDKGV
5/hApcCNtkM4373KcTl/r5EPbFPt7YnqohLiLYr8Ltf5gR3bL6iK8+s4a2MU
HXU3cOeKrSl7iPPj0eWFGXoBcPpyWP4frNdN42TNXwsIgAJOITPTHCpRxpIu
kGEiAH4Fecu9z8T93c5rTxWzBQDXNf6dn+7i/LdDqefMUUHgd1S68h7W37b0
D9nLngqBAenQaXdcr7mNPnjfbRYCjeoaz+9hPdAeyjHs/14I7Kj6Md/qRCWU
6YJzjen2gHrryipRB6w/aM+pfrTaA14d2bIZOYvz5V/eU4zMwmBJb5Q18iiV
+LwRnWbtIgL4pa5smali/dRZf14wWARs52sOTlTG/pkxI/0hTQT8zqJrG1TE
62mb1Fm0iQD2jynsbnJU4k5j8CVZLlFg3Jjy5JUElTAXT+9lEhEFzp3D56TE
cf2NeaY2QxYF1xpI1bFiOF9Yjf5+tB/PLwusdxamEiW/dOMkvESBRfMrJit+
HD92J7/TBYqCxYmHLV95sX7rcPvva5QokL9qsOHFQyWa0jP25OWKAqNMA5U8
TirRrfmzRKRPFGzz0k8zYcX904NdnH9HRMGKlefA1k4qcWq7lM/ojChIfn7A
7Dkzlfj47pR+Fo0YMFcMsj/KRCW+Xat4LaCMWcDqehMd7m8+dahu6IoBnoBh
lSe0OF8Yf04dPiAGOAYyxzO34f6Am/18+nkxoEk77pHxd5FoCpB+ef2iGEgL
pfPP21okgif0pS2uiwHDbc+6Kv4sEkxVl6k8d8TA043dd2c3F4luwdsnV++J
AV37ir3smBNCM2sHHomBonMhzvobiwTfya6g5Bdi4NZnu6Hy9UXiQ8OXr16d
mO8d1f75c5HIJm0cMH8nBkoExa4bYZZalmHnWBQDJys/dK+tLhLfzgDvpV9i
4K23K4M15tJmi6E3DCQgv0/RuuPHIuEl66H3jIMETIKujOtjVk8Mz4nfQwIx
7ay5TSuLxPp6Fr27LAlwAvfi/ZibbKtdjqqTgJdMHHvfMr5fe3e3vAEJzDsu
f3DGbKQ8ocxylAR0aCv4t2NmSt9MmbPE61Pc3pV+x/f9y/mr05EE8p8aiZ7H
nOBMPlfkSQJFmdRt/JhPvTFojgogga7PueHDS4sEv+YZSddIEmDs5a1/iHkk
2zPKNIUEZuzjHvpgzmGMXJDOIQG70dbj5pgd3B+c2F5MAsHeDG0amBu4TGKF
akmgm8OAWRIzZ/18qwqFBFIrbRn+/T7hZpO87UAPCSTdbPj/7xMUOh096yES
WNMBev9+nxB4Mu5z5SsJrPoEhsph9joWUR6+SALJ6fczAObOFYX5+79IYIzG
IvQcZlLGgFQ5vTi4L89kfAuzv/4Nu1Y2cXB9KOtLKeb+r2KZHwXEQYVM1vmv
/34PiWp/tyQpDmLfikIRfP9bih4cjCriYOLYEJ0j5g9veY4I6okD8W3blcsw
q/o1hSsfEAfc10KN6bF9o4Udmo3NxYFzYo2xLeYvL3f8tjonDrr676m8wqzj
Wqbh6SIODKIbdyjj90vaZXHl9lVxsENY7fVDzPvP5E89ixIHjQFOAg/x+9/b
OiTWkiIOdH6J5ihif1l++P3shwfi4OnxvbsomHMX9fvoa/B5P3rco8H+tp48
uVOgWRwEmv2teIrZTDvWRKlbHEQNPntsg/2VJmy48cwXcXDtvbLgyK9Fwna3
96PSXRLgzfaOBDUcD3UvBD6/3C0BIp6X7BDG8cLu2Cw4LCEBtGi37WXD8YRK
dyXS6UoAJJFxnQnHm4jRkxuWzhJAp0ew/z8G3L/OHq+57CUBHM0sPt5gpBKv
49eWbt2UAKxCdQefbMf5fNjQqSRZAqw1/JESwPE+6j5qRoskgJ7t9SBzNlxP
uG/H8HVJgF/15BMV7FQivl6uVf6dBIAk0z27cT7Rp/fTtZiXACLtsxc2uXG+
yuCSKuaXBH+voAl2QSpx7pXp5n9XJEG/Qa2ZhwyuL4N5/+0NkAQNt8WsFci4
vk79fsYeIQl8AxeXl3B+DGYqd+zKlARC73lcI5WoRN6R3a9BuyRIHNf8tqpB
JaYGZnPkRKTAWcvyo9UmOP9NRpts65EC8mrzI39wfvddm8gZfS8FtHzvqGjj
fixkO7HZ+EUKlC6HOfrgfitJduWZz7oUyNo+27eK+6eqy2d3z4tLA2XgV0SP
+5tfq3Lz7/ylwdebd1aJONxPMfYkFsvIAA57Hy0G3D94j5GyfdRkgJT6X07r
SirhXOdbBIAM8Po43Vlajeu5m8TLAQsZEJHnNWTSQCV4Xt/48TtcBmT3ePrp
4H6BqbCPpi1JBsxGSJ5wbaESG0HSrInZMqC/6AJjUhu2v8pbSckaGdDFPLOt
F9fPx3fJFkcnZcD22dDlNdwv3HMPduD7LgNkH8+7L+B6HHfgncfn3zLgpjln
2cf3OP/+Com8xi0L7lSkXM7+SCV0zw3XZxnKAtk3Q/rVuF9Q1FBqdT4uC1zd
547Y4/5AlO12v8pZWVCZ1vWdfgrrlWbluRYvWaDic/+rLNYTryUihRZz8fwC
ieRvWH+gP59k6kpkwRsJndt6WK9UvturfqteFhge03kTgvuD9Mixo7x9suCH
sM+BSaxvou3UrcZH8Pr5/l9psR4K0IlxKpqRBQuAppIT6yW7eY0gfRoyuD9r
1rod66tTLbExTCxkoNP6wGces0n2l7R+PjJglgrYS8H6TOu6Vn6mOBnU3Bis
iMT6jWwWX+akRAb6mYFFBNZ7QrITTcq6ZFCpotw7hZmNVqdjw4QMdivFDN/E
epH2453BV+Zk8PaIYAA91p8/Kic/x9uQgX/Imcv+//4/SqzuoqUbGZy+VWo/
hnnoQuIGyYcM+A9c49iL9W+n/jTjQggZlMX9UbyG+TnfPq7aODLwdYj3LMBc
tpQkEpJBBovLzjEvMed1zMgdLiCDjeQOtTeYU/L0tXjKyWBzZkGsHXP4jRSj
sSYySOvkZCrF7Hvqm9mTdjKQ9fHPDMZ8UQGcuzpABqzxl1OIf3/fZ0x13TdO
Brdp9Qu+/ft9YWzu2vZ5MhgtOxgWgnl/ncGtvp9k4Eb3Z4oOs1piWvx9OjmQ
GDV46wq+v5Tbwr0LbHKgI9ORtRPbZ7ehYaGSoBzwoDfXY8Wcc0YmWklKDqz5
8sQdxPaV8mS9rKQiB47ImXd4YfsXhy8fV9KTA8PrU1WR+H1Us96rKh2QA3k3
urhisB6uq2ziUTKXAwYTHEV++H2Jztx1xXNy4A/drO4p/P5Hfl58oXhVDjy6
kO3QjfvFftYTuYqBcuDpmN8tV+w/ZyQ0whSj5EDc8YnS71j/Op2gOaT4QA74
7F01pMxTiXnnSXnFIjnAu9iuwTxHJa4GdrIpVsuBu5tRh/WwvwY/TRlU6JID
Xxn4vp/D+paR4len8E4OMHPdZD2K++O4IZv7Cp/lgGkzk4Mk7qfvMcjaKfyU
A5by294mjOB4ENplpEArD27/KvcX/0AlClVXpBRY5UGxFLdPNo6vqvPP5+XF
5YFBNf3tI7if1/HJeyOvKA9ujDyXDnpDJZpjIyrkteXBw+YQvYxuHD/1J3zl
j8sDx1b7T7daqcQM1xSd/A150MM1+UOyHuc/cteUXLg8cPG/KRyP88cqKOuQ
S8Tz20TpR3C+oXX3vyNXKA9OxVxWlCnC/t2+S1DurTzwuuKnH5CB/Wt05Q95
VB7UHIy4zYL1sOzq0Dh5Vh6EDt+cDk7A+Zv08BH5rzwoepGsyoP1sVmApipZ
TgE4tVf4TnlRiXdJQjxkDQWwRFRKJ+H8eO7JtnVZAwXgOcfkKorzqdu7ruey
FgrgC8vNqa/WVCJM2fagbKgCGJK+grYZ4/eeiLSV+agAcvawiXjheiHz0nWV
e1oBDGbknk/B9SU991D0thUFcO1MyNsEXK/8bFiqPjArgpW5K/F8VFx/h+5s
j9NRBEVsNqwW3YtEUY1npp+JIvBqc31g/BLri7snVJzMFUGXb8UcS8MisXmC
6yzhpgismzsYJAux3upKLf2eoQjGstYrfIIWCfmi64ajBYogWV4gTOraIpEZ
aTnUWa4IptgOdJW4LRI3jQVo8zsUgbbEUfL+/xYJfZj13+lfikDKss4hUAbX
04r83w2WSiD1kGiGbNsCoZx4O7HQUQlUZwYVGTQsEDkeTlIpnkpA0L7NUqlk
gQiRlzG7HKkEDnl+1YxJWiD2P3r6UKROCfDSiMzvP7tAfDlyRpKyUxnESzMv
50/ME47AtlvqojKYnaU+2fZ+jnA6xk9b56kMmHNduqgtc4SLda/mQR9lcEjs
iGdd1Rxx2Rc8vBiiDOKEEzyHE+cInzJR/7I0ZeD0RqP87KE5IkL0s7TOK2Ww
cvmIvkfVN6KIxj706B4VsENtR5bn5VmieJdA/ShJBaQb5DEMWswSpUL9ix4y
KiDgzfNN3v2zRIXWfqukvSogka5CTo13lmj0JKm8P6gCUg4nMg01zRDd419G
bX1UwHXltZk5uhmCihx0vN+ogNCpQxy5/lNEZ9hq0OyACohiK05Ospsi8k0j
Wmw+qIAjtzrEXU2nCKveIrODkypgryKvbSvPFPFq7LuT8KYKUDtewWn6bJJI
3wpKbpdSBfEaA4M5nyYIoJc5LxSoCqq+SRjEyn4lEmoHslvk94J9P6tfXRUe
I9yevthfUqgGuJ1T1h0PvSbol+927y1RA47idiIGQz1Eltbl0w0VaiDAX7nl
glMP0dsi6Nb2XA2s8YaS40O7CY1x38TPb9XA1KjkoVvNnQQtz95xHhp1IMRi
ky97tI3ICCy8GWipDiR0rwdkFSNCtSVwO4ONOgij420VNkFE987TiTEO6iDf
uiRFHEFiK52+IN1dHbjQlks+JL8gHCvtuivC1EHsihr9M+ZGQnlGUHC6TB2Y
+T8a/bReRbSfSKg7vkMDrA81QkHNh8TpgAv3j7BpgBm2tUv6zbnE5COdwIM8
GkDU5+jjHcdyCNrfE4aGYhogoYpnxHzsHqH7SPuNhjYe78kYGz16hyjd+DK5
x1UDBF/frczyxwfqSda1C3hoAJqB9CeCBcGw63jcU75rmLPPumqg23AmX/MK
R4gGQHrq5W/e3oFix2N/02fg70+RmOtqM2DKQ3Wu+XY8zrNWySf0CJJeM6/N
vNYAS2eb+Ss0CmH5+tjQ5IAG8NwxPHPo2GP4+mh09tg4Pk+JZ9sV7yK4fX1U
9u26BlDm16a4Z5ZC/yORoEFGE6w7v8sRUqiETNfPidcqaoKEh5VZfHmVMDVX
lbFKTROAupij0TxVsHJtpKsEaALbC2kG735WwfkcFYtcS02QIzxHt72oBp5f
/XA5MlIToMoVl/FX9bB1MMrWNV4T0JhY2D0TaYDyNVonD6VoAuWl9puMfg1w
wydViyVHE7h09iwdk26EKesn6BJqNYHvSsQRC68muDlEs+b5XBO0/7Kputbc
BO3rn82ceKkJxm8fhqJsz6GSP+trrjeaoGx0K1fk0XPYudmenjaF17dyLX1H
eQFVRq7H+M5rAnYac0ZPRgjTm6QCzyxrgpnzPg8zTSG8cDPMQXAL3wdqZVa2
Q0jzl1B8wKMFwE/rbxtnEXQaWxQNFtQCS2hKTdwXwR6YxWUnpgWGkI1fRjKC
94I310kKWmB8e7eTVzuC6rS1Lx8ZaYHHPSqz07LNMPPLhZqIQ1pgffrYn0TQ
DGlfcj9xMdMC6WoxZ++cboa9oV7xZGst4PlebDI8uBlqOIqF7LTXAiNunxNu
pTTDLKPeq/POWkCNzz9ioLAZujEonim9qgWUr/0OCOxuhn2TI4fv+GkB9nQ/
/qFPzVCrNUbfM0gLWJpOasYsNkOGiFlx1Rgt8INR0W7bLgq85JzOy5WoBbhp
a0itQhTYf+DAjh+p+DyKnu+nyRSYw1SwWJ2nBS7RUEqMjSlw++zJz6mPtUDk
u/Wc0BMU6N5BO3C9VAsgszgy6RwFDjwpb7WswuvTiuqSXChQN9q2XrtBCwTE
2raGeVFgnhtbsQDSAq/66F4eCqBApsMvsjdbtICeVAP52m0KfLdTKOx5H16v
6LXy5l0K1JvvxHUc26NbqM8yiwIfdvu5Bn3CfP/guHA+BTKXyFjbftUCoisW
TseKKNAz7v0xg1l83lM73GeeUeD7y+EGJCq2d8xb+sUqCtQ/pq5Gt6oFqpTe
6djWU2C+4oTUxIYWKJbuJYHnFLiTLXl3C402SN/J0x+P8P7xUT8BozYYMi0o
Jb3E9mINHmzaqQ2K1z0YdFooMCvWp1KLQxucuuv9fLCVAl/vvJxYxasNtLwj
4FobBf6NdvBQFtIGsZyH1rLaKVCZ2eposZg2YDktfqwbs22UmZyMtDbI7NOs
voU5kenAjnx5beC7bCdIwd9TIvZNi6hqg1cKZK8YvP4yo1rLfU1trNdh8dgr
ChQPJz/k26cN5AsXIKRQ4CkGsZDk/drAe50/Tx6f/3YY33k2U23w+JHqYWl8
vxq6XftijuLz5FdUleH7T92iF9x+UhuoGd0Z7qimQD7azfVblvg8kuo1V8sp
0DTk+7utc9qAWz7I9FkxBfrSzFT5O2gDZfvSOzcLKfBJ0GjSmos2GBi2ix3L
pcAPWwOeXu7aYCk2Hry7j+0Z2HVs8ao2MFO9/sz+33v+aZZ389MG6zvzP92O
x/bbLJ2xC9MGMhs8CSlB2H7+Ba2forSBtfdN8VvXKXDr1/38M3e0QYL3uRRm
D2yv9UjbE/fwed7u016yxvdftR8CZfh9znOvyqnh+3ufqWmqxvY4+LaPVZYC
w1aOp2g14u8ryjeT9uD7ftczU27F46piwTEM+PyLvO0iI9ogJ4nP72RfM/xw
mfXR/c/4PYuok5dfNkPmBbowvmltEGxIa6JW3QwvzS0RbMvaQAJ6EB1pzVBp
prN2a7sO+NG53qd6phnaOjff9WfVAY697+K7TJthwlTt1TVOHcDO1Mm8W6sZ
Lk/kKy3u0QFlLd4l73iaYfXnwMJPe3UAPTJ7utmDoO5H1bSm8zogdk9/wKQK
grb60q9LL+iAbqUg3wRBBMNzBRlyL+qAIyExv3/S/6+GOw+Hst3jAK6GkqVD
UXaibSpLWo0ZHrxKyNbY5SVLXhFZs1P2BmNGylJaKG8kESXLTynZjoZOllLW
5C1bQ0lF5zfXdc6fn+t7f3/P/dzPdT1/3o3QfZI/MCGUQhChxmn8ZQBe86/N
zDIoRMuh2Lc2sw2QLRq2aqgB8xzaeUmXepjVhWCSgjahsRC2ZP27BgoLTejG
A9pE7ARst3hZAVm3kkJ6h7UJL9k84bacCogvbrrs/lGbYDJmfju6V4Bbqfa7
aK42YUfhPulcvA/KD3Z6VgpSCbEJV1P5rfehoEn4rNw+KjHbBtwI4XuQO9Ke
N52G+SGTPyx6iiF1bHVDBJtKEMw0JenQYggfNxgSzMGcekHRR6oY7D/VblYp
RI+Ze9U43QYpbsld28dUYqj1+iHVySK4uIIBjeNUQulDkgx1+01gKpmOsnRp
BJ/btLSCfj7Y9blK8hvSCCKCeE8vzwMlZujhYGMa0fhNs+WHYh6U/75RYmtN
I4YU/DvzSLnAeb8YKHcK+ys9FTwGLoHYldv8t7LRnqUDfq/Z0Eev378xn0Yo
PQxqOe7Ihmsir7ySr6Pn6kS7R1igEbnc4V2Kz7MOUbT8lgkWjtYX1Z/SiNiq
HzIN6kzIlCZtrZlCP+hPSupPAYcuKbsdczhfTSahdkMKKKeopeZ9Ryc4m62x
TYaK7/bTUSQdgqh2OvhlKBG6e8ur9aV1iMayVt8x6XjIzWieqFRAj2Td7vc7
DycOD8hs2axD8CnNxY+2nANu9eqY1epoqRh3jfg4WJftfLjjDzQlXHytbjS8
ORoURjPWIWKPvvk1LxsFNwRSS8rM0cpnjk0uR4BmcNW/Mh3Q25yqfvaEgRVd
pM/aH/tc1Xr5l8EgI6Is9CIYc3/v+TUDQTDSdIB6MALz8SG5oelACNjjdk0m
EXOzaY09WwOAte6x12Ae5r/8jjCrfMG87N9zzdfR+m43+oV9QMR4OLrsNvqr
Z8BFP29IjBO8GFWJzvbmk/nzJBjIyyl51KC3jR6p++QBfDXqJaaAnmvfHH/e
HcJmbZ7ItqPNKN6aA66wn+FtSupCj3Fyp/NcgLstuvdTD3rzct8Cxxl8/iya
qhlBO/VvcjV3APLPR2evT6ALE7Xoe+1gPLuDlDKNrvsRralpAy6dc9J2P9Ab
dmvNhlqBvPfqIl0+XTzPe2G+YAFvBGQ1tq1CC+aIquiYwaXrarVrRdC7LhRY
qZoAnaZ/6Js4Omtk5UpTIxDvt+56txFNFZNoyTGEzqC/nJ7Lo8cqtSgbDMCo
lBmQRUYrSYaPaNJAwKhwKUIdbVFdX6mjBU9HHya77UOX89n7FO6DmJj29Sba
aJcOV7KbJlBlB69q6vH86LHQvBosVnPJMofRTIECDQ4Zqq1WVa04ypu3xJ6x
2wIB09LEP1Zovq4FX8YmUE9VbefYoRsHSHldcjC5Rc/mkTOaKG2y6dsIxU/o
wwXu6KGvtQRZAjyOe/kkefMc9yGuURyUFyMWTvvzbD5CyRWDwayMczYhvPme
2vEVYpCvcVNUJ5LnuILTAuvAvqP68pZzvPWfFEkZErDBq01FNJnnwdMGJlLw
ivS+bD4Nfe2t/I798sAs+KI1wEbP+vm+LtoER7UFnjfl8Obp2PYbbAGhXimL
kgI0Z0hOIpAMLwJ2vWUVoWMNfgTvVoP4tYRneAkvz5MJadgNeneOfXG9j27Z
dLX8772wbHgy8shD3vMl3Zz7D0DtcPjq3fVoqZ6FM6bacDYqnSXVxDvfwLsD
K3SB+6Cq+GMnrx8aVHvJAO5ZtO55+R9ef6rySbch+EwONFS/QQftZHB2GcEH
Ff7XCePoPv8rg9pH4QZsdPGdRE8+Sm+bMQdnx52f6Vy0u33HERdL6GNZrdi8
jM5nFBs50mE8lrNhWIgg+JJZ5ACuA+xQWLa8IYp+dk4lIscJfGt3prmJof1D
tDRMnGH+ayJpXBLtmh4zMO4CK0/RZj8poYN6SqMK3UHB+k7r/H60s8TBJa4P
nOD28ldroX2sR0+tPQ1FGQJEKP6u+YZmnnmo+sGuNpfqRT2CiP1H8fmzx/5A
0d14c9kU/e5nfp1kINiQ4yMF3dCMVPt6obOQ23z/YasH9n9Z+WqVnYV3boPc
VC/M2f6h+VZh4H6V8pfoafRlCebwlXAIWP/Fel0Yrl/oOsGlRkH60nF1uQyC
IAzSAwaN4uB514ER9Vq0vOYRn4JE2E6KUTZowPVvVpmTlhKBsbf5hM0TzGUZ
dfscksDqEn008gXmAr9CzNcnw3unM2Otr9CgKp4ekwILH++Mu03i+sNFYQYU
BjhIc7eGzmBu1g2W6QxoMNY6mcoliMYOoVnmMAPi7774WP4dvW7NUGpCGogF
jk0s8esRjQ8psZyn6UBelv98SV6PUEqgnRNOYgJD3WNniZIeEctxnLH/mwmz
LqWnGlT08PtkpEu1M6G6iTI5RsYDbVbZ+14kE/RTbKd270efIY/RUzKh6PFV
VUMtnPfL1mj6ViYITn7wtaPqES7cnqmJpkzoNAuajtbXI4YkNJk/f2aCo0Tm
TLsZ5i37LH3cWdBg2Kc+aIm5e0fEh0gWKIcq+nPpuJ9FdtSDLBZM9N+dlXLE
/Xc7Hzd/ygIT4a8au5yx/7l1jXQfC8qo1DO6rthP2L5j7xQLggravnicxP0H
mi05SLKhlyOuGeaN/TyVafftbKCstA9g+GJeON9ZR2EDn8dHbkUg5p85QceO
s8EtW21Pcwi+j6XjONOXDc0vggP7w3A+s/madBQbdizWVU5GogWD5KYusOF/
99UR/7+v7r/MdBMe
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
Ynw2/O9/jOj//2P8D8WITxI=
         "]]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJxN1nkw3GcYB/C1JDQoEqSIsEKso+5lrWtZWuOIa5VGDNlF3WwcYYtITMuq
uOqsCm01UpbRSEIwPzJKljQIMqLUOpcWQRoiqLbTiffZZ+adZz5/fJ/n+fMl
MOK8Q/E4HO7mf+//riv2+p9r9j24d3U+PymZmg7GtgS7mWzwZvvA3yJJYPrH
BeJikeAzIcoqEnRwQ7WRgywR3C8bWKg+QkVmpLyVSpYDp0g72k9jtsin72lf
4V22QU4PLGaeXbZCDqIrZD38goIscUGNiR23RFbs6QubwYE1TaIjD/fIyPaK
D1m2G2D2jHcmNgFej/2yGrsDHi1Yn8BcwLMiJVMzjuCXCRT+oS1Y0j9bYGsK
dlQnbGMq4LYW+snuNQvkb591unXng2frlEMdOWDNlNT0gSxw01mL5rEUMBZ1
V2aFIZQ/9tOorIVQflJ8tdQYHM4NE1XRB295a5ppEcD42ppSS0mhPKXMn8E3
h7z0dvzyJJg768OJHgeTsuU6kgfAH43nqXzVCs6tXzWVbQYPsV3cSu+A/QgS
6TXVQvtis2Zas4X22c/vkG+AN+XtZbA0sNlKjTbtKji189COxwJj+YH+7tFg
PKMrfjRM6F6SCsfvstC9EuzvpgOOvGlX5buN33ICc7+PDzlmBK7Iy/f8nUVC
zkrmWt9vNUOeKMfRGjxNkRVoy95Vr42Rlbfo53bYRsjmk/dp+iQD5P7nw4/s
LPWQ9QTv+7i6EpE5RRnUuQIt5CSHg2aXSg3ke2d8/0prUEP+pvtpriRXCebl
FjrnDpxCvqgQkW5VIYVcpv9HTEsLDnkUa7a2chd0H5nxZlty0HnJ7sgGpS9H
QjVFqEeupao2x+lLIa//yektlZVHnpXu5IhuKCHP7eWWXwpXQ2bG1niJczWQ
A39x3vdlaSHfOP60iEskIivRaPWGKnrI7Ys5wcSpD5FDqMG/no8yQt7oYVIS
h42RC9vGb/XpmyJHNmIOTfVmyJUZ9ekZ/iRknldhu8d75sj4g0UajQC2um05
bG4J9t9fKDFyAid65l/U9RLKf8600fYDF/1IVtcMPDIOpz4iLUpggpv35pdU
I8DWWu085TjwE4+bjaeTwCt1Fiy562CCR96BWCW45AfSqTUeWGPoxM7KEPjn
Xf6LpXHwkHvuLf4sWHx3RmdsF8x2y6F2EC2Qg7Z/i8nJAfc/5wRH5IP1H5B9
XErAe8llZKlacMmul2hhG3hwn1dRLgCT8G29tx3JyJIyXyv14SyRraZMyruC
KMh1da50l2kr5EJ1t4ViOxvk4pMd4fwqW2RB5oji3Akqct8zi3nDTjBR9JoG
DQPnmfUzPnkE9i6nL6Q9Bs9cYi0OjIHfLDcImGtgnUPV1XJVe5hnGKrXqA7e
DOZGYefAD3opa4s6YAeO37qxOThAvmjjyQUw5vTCkO8F1riqFv+KDl6ZbNr8
IACcWDO4FfoZeGJEziQ1EkzBf3olLwaMC11+dTcBzCwzMO1PBvc/TkqYTAXr
vu1qXUsDv/u/IP8Lcrc56w==
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->{{-35, 35}, {-0.1467528707059248, 1.1477005899158903`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -152.90421193686507`}, 
     ImageScaled[{0.5, 0.5}], {360., 291.2461179749811}], 
    InsetBox["p2", {576., -152.90421193686507`}, {
     Center, Center}, {360., 291.2461179749811}]}, {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.668800004654154*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.66879824244741*^9, 3.6687982424514112`*^9}, {
  3.668798741559058*^9, 3.6687987578799295`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6687987590371933`*^9, 3.668798759043174*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.668798241119108*^9, 3.668798241122055*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.668798740037781*^9, 3.668798740039795*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
YSvvetJRKUSGP1Wu7pjD87G6aHUiexsZxkobt+/D7rz5gfmyNBnap328VITn
7ybwLvZXIEO946N2I3i+vX8sQ1ciGY6dI3Jswda7fvWrhTYZbl9euC6D7w+b
vkiUlj4ZTpU3PZPH9+/9SKmkpAkZah0MuySC72+IxnPXn7vIcNzPQrgVx4PF
B6fVkb348/8yVZ3F8SIU9T27ez8Zpofx7xHaSwd1r5kG7niSIbpSqiGO4y0m
NCMoxZsMk7/Mal/aTQf2UgSB86fJMIPI9vwNjtfF02Z77cPJMLK8cDsJx3eb
8Ns5oygy/Gu37YHlTjpIbfW8phRLhvVGXs7mkA7UuKM7N66TYcnQSuI/Izrw
vd+288E9MrQxiosJx+uNhZ7VQ3pAhmuaLCM8eD0WGPg7N9eR4ZvbVvZp6nTQ
90LC9+V/ZNgYO63oroznYzQ8/ds7Mgz8oxzHg/NBn6K9hM9HfD08Y1vE6eCU
v9LdhREy9GbYPUMTpYP8tfeNf6bJUO1+NE8CP45HEdKoCIMubKpySHzJhMcP
cfrms+rCcUJ+k8I/GtAt/vaTwKULo1y158/8oQEfzTR2LVFdeCJjRLHzJw30
7p7XsFHThUXDI2Fx32kgN+rexSgXXXjVuSJQi0IDOi+i2Fk9dOGtISP13c04
33M5p187pgurzKNN9zyigY0clrs5AbpQWPuv2db7NHC8/mhPXawujDz3Uqwu
iwa0piQkftTowrMmIX0b3rgeaPws9X+sC6m1UY7dnjRwLLRbY6lFFyomjU9G
u9FANtP5nYwvdeFaVarlwz00sC754ZTEF114enl5hp9EA50OaY37tujBlm+r
76Z/U4Fz5Ilbdnx6ULwqI+IFjQomygyjdovoQfYjTS8SpnG/sz5ubi6rB6Wy
NPw7hvD+pGzHG70dejCybaek9GMqqF4bm5A6pQf1urnH7U9TgbFCY6f4GT34
TKnEusqLCl7tS7m/NVQPVp7QUKTi/fFUqf5ZgRg9aEw+f1sb9w+y+5LXWXL1
oEFbQUPB5vO7El2huU49qHP22fyh1EVA6OVcmerVg7ZjxTv1whdB7erXoYkB
Pbh6ST50/Ogi6N2TVPh1VA8O0nud/yMvAvbVEZV3q3rwR5dFwsmhBRBhl4Bz
gz4c910ye791ARxZHvZPSNCHXCLjTDzn50DH+0TPU6n6cJfcxI0THnNA7bGB
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
/3t5/wVSAwuI
         "]]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJxN1n0w23ccB/B4KNawomVD1XMXlXpOSNJGPGxznlqkq1FHPXQeSqlScqJW
t5HUCENYp2zNqjScVev5fnTmcS2KnhpLoiWsqIdVG3T2cFffj8/d5z73+uP9
/vtjFHbBL1Ieh8Pl/Lf/32+OKL7654pzJ+7dHM5LTmGwwdiqVJbJAq809/8t
lwxmfpqvrBgDPhihq6fCBNeUW7uoE8A96sE8w2EGcljqhmqKBjhVzc15CqMj
f3Dvo4t9Z48js4MLww/N0ZBDmFpZLV9RkVV8DMIxJQqydmf3OREObGp7PmZ7
0xHZWbslkb4MZon8MrFx8FL81+XYbfBI/tI45gGWyBVNitzAL5Oo4m06GB+Q
LaXbgd0MjdYxPXBTPVOzY9EB+fvHbV4deWCJQDfSjQM2TU1j92eBaw851I2m
grHYu/vmw3bl91SPqDvsyk8oLxTbgKOE5xT0iOBVP1N7MyOwfGVFMQW/K08t
CQgTkyGvtp4wNwEWSvw558fApGyN1pR+MCswYWSrC4wdHXqRiYHl5SwVlFrA
n4zl6l1rAHOrFuzU68CDLA+v4ts7XnHS9KmO0L0JPm2kwq4oB0t6u2urC8FR
8VmihmwwV4X1w1QQWPhjQsQea3Bpbt7JPxJJyFkpwmP3G+yRx/k415qTdsha
rnN+11/ZIOuuMk1es6yRyRP3XYkkS+SeJ0MPnCgWyBbS9/09PQnInIIMxnS+
GXKyy9s6jzJj5HsHT/2VXmOA/F3HIy5eqAN9XJ47t38/cqBWNJtWqopcQvwz
rr4ehzyC1R2jeUs7dhz2Zh0/4D7rtGPL4pfDkaZyjB1XMvTrLhBVkZdecLqK
1Q8gS9TaOArLOsjTm1z+mSgD5PD4Cl9loTFy8K/uW6cSzZCvKj0qEBIIyDqu
rlVWehbIzTM5oYTJo8gRjNCHh2OtkZc7w6mXhmyQeU1jN7qJdsgxdzCX2ip7
5LKMKnZGAAm5z5fXfOI9MjLtFmWITAHXbT6b1Y8GzwscEjW+BBudyH2rWAau
TzsrlqsA0wXkX7YF4IeD+J+2anaMwwVuSLJl9eB5k8aY9UbwZZ9r3mvt4KKb
pP2LfWDjwb2v5wfBP8vET2fHwIPe3BtiCVhZJjIflYFZXjmMVoIDcsj673E5
OeCeJ5zQ6DwwsdHR36MIvJlS4qhaCS6S+SrwmsADW32lfCmYJN/UdcvNERm/
71udbhwFmTZpy28PoSILBJ5MjykaMs/Q63mh03HkQs3WKPF1OrI0c1h7ei8D
ufuxwzOrNjBB4YqxKwbOte8J++wB2I/PfJ7eCxadSZzpHwW/mauRhi+Czbf1
F/j6ztBnFWlxxxC8EiqMxUzAjV3UxRlzsAvn9JINGRx0oGD5Nx8w9vFTK7Ev
2PiyQcIaEzw/UbvyYRD4UsXAauQX4PFhDdu0GDBV/vOLuXFgXOTc2t0kcHiJ
pV1PCrinNzlpIg18ZKO9YTEd/O7fQP4X5VY38w==
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->{{-35, 35}, {-0.14712272780391888`, 1.147273704468685}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
     GraphicsBox[{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
CGV3b4qQ8vvYO1pXH0IMTDLZZkiQ/geaJf9z
         "]], LineBox[CompressedData["
1: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
JATbRqPU+rdaYeXp6t7ODgnofnfvg2JYKxxzmi903joOT02w7CN3WoHrPrdB
40F5cOtf9eW61woik63c7QUnQcksU5cmjrjvt9EOPMkqwDBgwb0eT+TreajC
dQmDj+Z0CzNJrZBaOlevI6wK+YN1tf1Pifwp6i08N1Qh0OJqdFMqwavRheNX
VUF/iN+m5EUr2DVHbx/ZwuDg2ffiqdmELpZA/nwIg8Xh8O2YfOL+PN1rPGeU
oc5KoSeouBXmqV8VtfYqQvTownO3MuL+6fPqjwjKgbV1ise5KuJ+j/qSvb5L
g9iYkapeXSvUzzk2dmSLQden8qnDLcT9Mm9etedmgSfnXUo5Ogj2INsszX1r
uDTBHbr7TSv4SgTxO3pwIUX7brO1nlbY+rqhEqkujOimbh6a7if8pD1La94m
iUYcpNfffSDuqyLszlsNGZQ7PdOGjxLz+LYse4nLI3+nR4+Kxon9WbSezgs/
ifRmdV1Splth7fO7gPPKKojbeUv+3pdWsN3U0N7Pj6H5z4W0gQutwOE3krPc
gqGai/Yjl5aJ+f1+iNVQq6KoOba8sz9aoSnkWr/SLIasXNsCdH61wukzK4dv
2GNIdN5XX+5PK9A4emE3/6qgzUtHeYR3iH6pZq37QpXQ64Wxb+yUbcCcO1Tc
e1EBJbnFNlDStMEb63x9muoTyOWb2v1VujboyFx8pxUjheTdf56fZGwDfPF+
kwZJFO1Zfnmsl7UNSJULCfUmZDR01WoX4miDCQ+BslxpWpS9wtBXwN0G0ZaL
xfy12yo6q57/3RVoA6zK8eDCvcPA9Z+Qhr9wG9iVfRT8e+YYzP0YZHcVbQOB
OdHHs6EyUOV9Z9ZCog02+Dq3nsnLQ+TPkxVa0m0gYs1ntmh9Eix9lsJPyLaB
fFbT98/jyiDyK9VCSJHIbyaUaFUKsHHdVIRNpQ2Cb6Xo33PGoH1j9+9dam2Q
ei3j6dOHGCT6Vb1e0WwD8vKrETY7DJw3Lz0Z1yXmE9D8UfsEQDaA5/JbgzbY
cnkYwdOgDNRbPSfrjYnzFY8VHp84CYOBIQz55sT8Guum1szykPVXZuzJWWIe
+l883PYy4HPjS8EdG8LfhZHbT5WPgdbO4xu+9kQ/1F3REYGH4X92WXwp
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
c+0iL+EjVyd/6qEnEIW/EVtmCBP+B0yrn9M=
         "]], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None},
      PlotRange->
       NCache[{{(Rational[-1, 2]/Pi) Log[3], (Rational[1, 2]/Pi) 
          Log[3]}, {-11.671315942677639`, 
         12.313148852292002`}}, {{-0.1748495762830299, 
        0.1748495762830299}, {-11.671315942677639`, 12.313148852292002`}}],
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}},
  ContentSelectable->True,
  ImageSize->{804., Automatic},
  PlotRangePadding->{6, 5}]], "Input",
 CellChangeTimes->{{3.6671265841655397`*^9, 3.66712658983075*^9}, {
  3.6671272359900923`*^9, 3.667127260805792*^9}}],

Cell[BoxData["16830.288083`"], "Output",
 CellChangeTimes->{3.667124943528707*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "n_", "]"}], " ", ":=", " ", 
    FractionBox[
     RowBox[{"Log", "[", "n", "]"}], 
     RowBox[{"2", "\[Pi]"}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"id", "[", 
     RowBox[{"b_", ",", "d_"}], "]"}], " ", ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"S1hat", "[", 
        RowBox[{"d", ",", "b", ",", " ", 
         RowBox[{"x", "[", "5", "]"}]}], "]"}], " ", "\[GreaterEqual]", " ", 
       "0"}], " ", ",", "1.0", " ", ",", " ", 
      RowBox[{"-", "1.0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Shat0S1", "[", 
     RowBox[{"b_", ",", "d_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"2", "b"}], " ", "-", " ", 
     FractionBox["1", "d"]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Shat0S2", "[", 
     RowBox[{"b_", ",", "d_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"2", "b"}], " ", "+", " ", 
     FractionBox["1", "d"]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"digammaintegralS1", "[", 
     RowBox[{"b_", ",", "d_", ",", " ", "x_", ",", " ", "y_"}], "]"}], ":=", 
    " ", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"Gamma", "'"}], "[", 
           RowBox[{
            FractionBox["1", "4"], "+", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "r"}], "2"], "+", "x", "+", 
            RowBox[{"y", " ", "\[ImaginaryI]"}]}], " ", "]"}], 
          RowBox[{"Gamma", "[", 
           RowBox[{
            FractionBox["1", "4"], "+", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "r"}], "2"], "+", "x", "+", 
            RowBox[{"y", " ", "\[ImaginaryI]"}]}], " ", "]"}]], 
         RowBox[{"S1", "[", 
          RowBox[{"d", ",", "b", ",", "r"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"-", "200"}], ",", "200"}], "}"}]}], "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"Log", "[", "\[Pi]", "]"}], 
      RowBox[{"Shat0S1", "[", 
       RowBox[{"b", ",", "d"}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"digammaintegralS2", "[", 
     RowBox[{"b_", ",", "d_", ",", " ", "x_", ",", " ", "y_"}], "]"}], ":=", 
    " ", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"Gamma", "'"}], "[", 
           RowBox[{
            FractionBox["1", "4"], "+", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "r"}], "2"], "+", "x", "+", 
            RowBox[{"y", " ", "\[ImaginaryI]"}]}], " ", "]"}], 
          RowBox[{"Gamma", "[", 
           RowBox[{
            FractionBox["1", "4"], "+", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "r"}], "2"], "+", "x", "+", 
            RowBox[{"y", " ", "\[ImaginaryI]"}]}], " ", "]"}]], 
         RowBox[{"S2", "[", 
          RowBox[{"d", ",", "b", ",", "r"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"-", "200"}], ",", "200"}], "}"}]}], "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"Log", "[", "\[Pi]", "]"}], 
      RowBox[{"Shat0S2", "[", 
       RowBox[{"b", ",", "d"}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"id", "[", 
      RowBox[{"b", ",", "d"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", 
       FractionBox[
        RowBox[{"Log", "[", "5", "]"}], 
        RowBox[{"2", "\[Pi]"}]], ",", 
       FractionBox[
        RowBox[{"Log", "[", "7", "]"}], 
        RowBox[{"2", "\[Pi]"}]], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Log", "[", "7", "]"}], 
           RowBox[{"2", "\[Pi]"}]], "-", " ", 
          FractionBox[
           RowBox[{"Log", "[", "5", "]"}], 
           RowBox[{"2", "\[Pi]"}]]}], ")"}], "/", "40"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "17.5", ",", "23", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"23", "-", "17.5"}], ")"}], "/", "40"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"17.5", ",", "23"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"Log", "[", "5", "]"}], 
         RowBox[{"2", "\[Pi]"}]], ",", 
        FractionBox[
         RowBox[{"Log", "[", "7", "]"}], 
         RowBox[{"2", "\[Pi]"}]]}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"ColorFunction", "\[Rule]", "GrayLevel"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#1", "*", "#2"}], "-", " ", "2.5"}], " ", "&"}], ",", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", " ", 
        RowBox[{"digammaintegralS1", "[", 
         RowBox[{"x", ",", "y", ",", " ", "0", ",", " ", "0"}], "]"}]}], 
       "]"}]}], " ", "}"}]}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lighter", "[", "Red", "]"}], ",", 
      RowBox[{"Lighter", "[", "Green", "]"}]}], "}"}]}], ",", " ", 
   RowBox[{"Mesh", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"{", "0.", "}"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"TimeUsed", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6657646466014323`*^9, 3.6657647071426272`*^9}, {
  3.6658719078673606`*^9, 3.6658719502596393`*^9}, {3.6658719845226517`*^9, 
  3.6658719895263753`*^9}, {3.665872023962665*^9, 3.665872024739131*^9}, {
  3.6670549037678347`*^9, 3.667054953942728*^9}, {3.667055026821516*^9, 
  3.667055039084546*^9}, {3.6670550950049458`*^9, 3.6670552102097054`*^9}, {
  3.667055252338696*^9, 3.667055309913888*^9}, {3.667055354466243*^9, 
  3.66705540822036*^9}, {3.6671151787602367`*^9, 3.6671151823810883`*^9}, {
  3.6671153469869013`*^9, 3.667115349797357*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"t\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"195.7515645839867`\\\", \\\"}\\\"}]\
\\)\[NoBreak]. NIntegrate obtained \[NoBreak]\\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.002690197337748403`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"5.86596964123524`*^-8\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.667055437215996*^9, 3.6671152274348917`*^9, 
  3.6671153147291718`*^9, 3.6671153631502438`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"t\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"175.9761739589867`\\\", \\\"}\\\"}]\
\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.05822969734657432`\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"5.9188438108225765`*^-8\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.667055437215996*^9, 3.6671152274348917`*^9, 
  3.6671153147291718`*^9, 3.667115725336293*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"r\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"r\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"-\\\", \
\\\"121.77812083202662`\\\"}], \\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{RowBox[{\\\"41.019045475396446`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"+\\\", RowBox[{\\\"0.00007797678256953535`\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.000161417136238252`\\\"}]\\)\[NoBreak] for \
the integral and error estimates. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", \
ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.667055437215996*^9, 3.6671152274348917`*^9, 
  3.6671153147291718`*^9, 3.667117487797093*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"ncvb\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.667055437215996*^9, 3.6671152274348917`*^9, 
  3.6671153147291718`*^9, 3.667117487875081*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxl3X+01/MdwPGGEcsSjpnSqlM5KKqPUmbutzFm5EccSTQqtrPdaUdqRFKr
lJpaSCoqP+7UYivLj8SVu35IflRnjnsKzbHIiUxOk1R7fz738/i87+f4/tN5
nu59nbo9vt0fn9fn/W07aGjf6w9o0qTJ1oObNEl/zR53dq0c/uzE/70y5K2q
JH08GvuG9LEq9oPpY1vsdemjWbei96ePU2N3S+ddFvv6dN6I2DOzgbFfS+ct
j70vnfd+7K7pvAOTooek8zrGfiAdd37stem86th703lTY3dJ5z0de3A67+3Y
M9J5u2O/ms5rdVrR36TzqmKfms4bHHtQOm9C7PvTeQtir8k+gLH3pPN2xD4l
nXdU96KvS+f1iH1fOq9/7NXpuNtjf53Omxu7czqvLva16bytse9N5x3ao+hV
6bxOsXen8y6O3SmdNyz2L9N5M2JPT+c9H3tlOm9z7AaAp5c7eJxzQvueS0ZG
j5pHzaPmUfOoedQ8ah41j5pHzaPmUfOoedQ8ah41j5pHzaPmUfOoedQ8ah41
j5pHzaPmUfOoedQ8ah41j5pHzaPmUfOoedQ8ah5LHTyePLP2lvnTokfNo+ZR
86h51DxqHjWPmkfNo+ZR86h51DxqHjWPmkfNo+ZR86h51DxqHjWPmkfNo+ZR
86h51DxqHjWPmkfNo+ZR86h51DxqHjWPpQ4elzUd8Py0muhR86h51DxqHjWP
mkfNo+ZR86h51DxqHjWPmkfNo+ZR86h51DxqHjWPmkfNo+ZR86h51DxqHjWP
mkfNo+ZR86h51DxqHjWPmkfNY6mDx/Nv3bV79PLoUfOoedQ8ah41j5pHzaPm
UfOoedQ8ah41j5pHzaPmUfOoedQ8ah41j5pHzaPmUfOoedQ8ah41j5pHzaPm
UfOoedQ8ah41j5pHzWOpg8d3tv35jKEbokfNo+ZR86h51DxqHjWPmkfNo+ZR
86h51DxqHjWPmkfNo+ZR86h51DxqHjWPmkfNo+ZR86h51DxqHjWPmkfNo+ZR
86h51DxqHjWPpQ4ef3VV59sGfhw9ah41j5pHzaPmUfOoedQ8ah41j5pHzaPm
UfOoedQ8ah41j5pHzaPmUfOoedQ8ah41j5pHzaPmUfOoedQ8ah41j5pHzaPm
UfOoeSx18Lhr7ZoX+uyLHjWPmkfNo+ZR86h51DxqHjWPmkfNo+ZR86h51Dxq
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
mkfNo+ZR86h51DxqHjWPmkfNo+ZR86h51DxqHjWPmkfNo+ZR86h51DxqHjWP
mkfNo+ZR86h51DxqHjWPmkfNo+ZR86h5LHW6H95nQ/MOG6JHzaPmUfOoedTF
fnjexX543sV+eN7FfnjexX543sV+eN7FfnjexX543sV+eN7FfnjexX543sV+
eN7FfnjexX543sV+eN7FfnjexX543sV+eN7FfnjexX543sV+eN7FfnjexX54
3sV+eN7FfnjexX543sV+eN7FfnjexX543sV+eN7FfnjexX543sV+eN7Ffnje
xX54/HgvWPdm0vj1fHa2fj2+3krw0mv42tLrY5y9dnXp9QwWtF8Zz3sPnjbf
9UrpPO6On9cmjc83rrrmxaTxebdnv7UsaXy+Z9UFzyWNz3+c+8bS0nl6/Qc8
/e3zyVrdtmLa/f2yt6/d/vfS+VL1458qnedT3WlR6TyU/psXlM63qJ/6l9J5
AtUXPp40vt/6R8c+Wrp/duon80r3I9a//HDS+P6uYfPnlO7nqb5nVul+iwmj
Z5b2208cPiPu/4bnb8eb7yvtc1aPnF7al9s4btq395e2HTMz2bcsu347dc49
pf2RjTVTksbXy6e+dHfS+Ppn1aaJ8XpU+u+5e0LpesOJPxyfNP558LAz/1j6
+dqUIWPizyPCn3/X5NHx+8Ewb8qSUaWv33e+e1v8eiho3d5sZOnz2dRet5T+
v+i4KvjsdsRrJ/Udnp1/POXC14K36ZtmPjMpO8+4fv2apDLviJv6Hfdwdn7y
hCtXJZVRR1/33zuWZP7mbq1LKm2fX33yx6safI9ckVRajJi28fJN2XnMP2oR
vN7Xe/Wkuh3ZecpTFy1PKq2v+9dR3Q/KPDS7KHgdNPuAwQuPbfDz5bNJ5cOF
/1ncrnN2P3bdI8Frz4e3f39e7+z+6Y5HLk4q783ocFXNbzKvl12Z7pMtnrKl
bcN5e7Xrg8/jjtlffcrohnlzgs9PVs656sV7s99vPnRhUrm7/8ArLn2iYf7P
nkgqa886442PlmfzNratSSpP75n40Jj12fvXH/pYUrn5yY7/brc161575oe/
/8RLv3r164bnz465SWXR0M6rbmre4Onjh8L7Vz+1oHX77Hr41dtnJ5Vn+h/U
d33P7Hr/xq8eTCoDtl/wi0l9suv1dYcEr18cesPrPx2U+a1pGbxe+5MON+wf
0dCnB681lzc9fMXk7Pp7x/7Ba5dxfdpOmJftB9Q/FTxu6f7F5y0bPO4cFfxe
8kqTc/oszd5+14bg88suux//4L2G58+Bk5PKkg9atVi8M+u6vcFnlw6HLLum
aebp6gfvSiqfDT3twxuPz3zU1ASfPSf84NoTumVe+28JPh9pUz9xz7mZt2Gt
xwa/b4wdumFA5qt24J1J5bAJbZYu/H2D7zl3BE+fH3/KmPGZ52abb08qM7d+
2rX/rOzzbW2b4HX64mHdT/tbw/Pj+lvD8+Ws1SOb/3Nj1f8BV1L2ow==
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNnXX8FcXfR+/uvXft7haxBRtQQbHFwFYEGxUTMBATVBC7ERXFRLEVGzux
OxC7u7v1mfOb83nt88e83s7O7OzsnLnxvdx77NB/8NaDykajceyMjUYz5XKp
FKlwrHMjH2ulsrzZTqVLKjOkkk5p7JTKyqmskkonz+OcFVOpUpkmlRU8j/qq
qUzv+SvZPm0qXR1vplRWS2XmVGZJpWcqc6UydyprpDJrKrOlcn+V85yU3TyP
c1b3PPr1SGX2VOZIZU1zzlTWdrx5UlnHnDeVtWyfy/uZzrmu7Bypr2vf+VJZ
z5w/lQ1TWTCVhVLZyFw4lS1SWSKVJVPZOJVFUlk0lV62U9/EYx1S2SyVxVLp
mEpvc/FUNjcZa0vHWyqVnZ0r67qVx5ZOpZ8MWOPt5AqfDVJZwLmu79ypb5vK
svbb2jGWSWV7z2Mv7Oh4rMcOjbwnYNvHdup9Pca1N/WeuJ9dnCN75zjPYYzd
Gpk9DHc34d/fhOe+jbwP4LaHx9gLe6XSXc4PVPnY6JR7yxue+5icf5hrylru
53jwP0Cu8BxosjaDTNZssAnnA004H2TC82ATzoeYsB1ish6HmnAe4NyZ61CP
Mb/DnSN7589UXkzlpVSOkjF8hqWyjdyOlzd8jmzk/UG/4bbD/xgTniNce1iN
NDn/WNthc4TXZ6xd5QanUV6Hx/0Zqewph5PtB89TTHieYF/26UmNvA/od6rt
cD7NhO2ZjsfanGXC88Eqt5+b8kTHY6yzbYfzOSb7ZbQJ5zGp7C/n80w4n2/C
+RI5wecCj8H8QnnDeazHqI+TN5wvNjl/cioX2X6p48H28kbef7C9wmSNx5tw
u9KE84RUjpbz1SY8rzHhea0Jt+tMHlvXmyOcy0HO9QaPwfxGk71zkwnb22QJ
w4nyY71vMWF4q0m/2+0Lz0mNvCdgeIfHYPtQlXNMyrtSnm6/u+0L58tcJ9bo
Ho/B9hF5sPb3y/XcVB4wYXuzc2eu9zXyPqDfg7bD/CET5o86HmwfM1mnh23n
evd6/XO8DvuIPfS4bGH+ZCPvGzg/7T3A+RkTzq/ICT5P2Zd+z9oO/+dM+L8k
bzi/bHL+C6lc1cj74gmvz7Vf9BjnvOp14P+OLOEzVcas0xsmbF+zL/vi9Ube
E/R703aYv2XC/F3Hg+3DVc7zUr5tO9eb4ng3ul48v/Lc+n4qdzYy/w8bea/A
/zO5wvPjRmbP2n9iwvNTk36f2xe2Xzfy/oDnFx6D85cmPL8y6feNfWH+gXNh
Ht96jMfur7KByQ+uNZx/NGH4kXNnrt838p6g30+2sxd+NtkLv6fyvAz/MOH2
i+1c7zuvz1jPpTdg41O5MpW/GnlPsBf+aeT9BOd/TRj+Z7L2vHmbIs9pirwP
4FYU+Rh7oVnkfQDnssjHqLeLzBueVZGT85dP/90qcvsjVR7v/JTTF5krazlD
kRO2MxY5WaeZipywnbnICdtZipywnbXIyV6YrcgJ59mLnLCdo8gJW+bC3Jnr
nEU+Bue5ipzsi7mLnDBfoMgsYThvkXmz3vMVOWE4f5GTfgsWuS88O6T//k2G
CxX5GGwXLnLCcJEiJ3tnsSL3hfN06b/fa+Q16ljkY7yeL1dkHqz9kqn8Ldul
ipywnafIc2euS7gP6Ld0kdthvkyRE+adHA+2nU3Wadkit3O9xYt8fcbaI/33
6qmskcoKsoX5o1XeNxek7FJkrvBcOZVpi3xPq5jwX9WkX1f7zuS4cIVnN4/B
fzVzFq8/i/262xfmm6SyaJHXvofH4L9ukfnBrWeRecN5bZM1W892eK5vwn+j
IvOD21pF3jecv4HtMN/QpF8v+8J2U+cC2z29N+a7Q5EfG6xf7yIzZo03N+G2
hQnnLU04b2XCc2sTntuYcNvWZL9sZ8J5exPOK8oNZps5R+bR13nR/liVc2zK
HVOuJM+dTHjubMJzFxP+u5qw3c2E5+4mPPub8OzjvFiXvVwnGB6U/ijcKJVe
qVyd6sNSGZ7K3qmsKZN9TNjua8L2QNnAcD+PrZPKAe4JmO/vMeqDZA/bwSbn
n5/KQNsPcjw4DynynoPzoSZrOdSE7WEmbA83YXuECdsjTdgeZcL2aHMb73sb
2Q507uu7FtvK+RgTzsearOuoIvOD24gi7z84T65yXpjy+JT97HeCfWF7ivzg
dqLH4HySCeeTTfqdal/YHpLKxq7RaR7j+eNcebD2Z8p7QCpnmbA9zrkz1zOK
/Pih39m2w/wcE+ZjHA+255ms02jbud7pXp+xLpAnnMea7JcLTTiPS+Vg7+Ni
E+aXmDC/1IT5ZSbMLzdhfoUJ8/EmzK80YX6VCfNbXV/W9TYTDtfIG87XmnC+
zmTNrjfh/HiV86KUN6YcWWTON5nsi5tNmE804XyLyTwmOC/24N++p+D9xO3O
C+YPF/lxwrreKW/W+y4ThpNMmN9twvweE7b3mrC9z4Th/SZ75wET5g+aMGfv
8JzB88Idzot5POK84PyoCefJrI2cHzfh/IQJ5ydNOD9lwvlpE87PmHB+1oTz
Q86LdeE5htcZXoeelz3MPyzTuqRydyovyxi2r5iwfVM2MClSv9dTTk3lpSI/
J3LOE1VmPy7lq55H/Q0Zc/6UVG4o8l54y/HYa+8UeZ/B82N5wOE91xGe75vw
fNvzOOddz6PfB7bD+UMTzp84Hjw/NeH5ke33eD83OdfXnSP1z+wL889NmH8n
P7h9VeT9B+evTTh/m8pj9vvevrD9WX5w+8FjcP7RhPNPJv1+sS9syzLPlXX9
1WO8737Kdb845Z8pX5TPl+4D5veFc6f+Ryov2O939wT1vzyPvfBfKq/JjQ9I
p7g2f9vOHvnN63N+19RnxlRmSqVZ5jmyd56u8jmXpmyXmT0MqzIn/Kcpc8Jz
5jLvA7hNW+Zj7IXpy7wP4DxdmY9R55ofypNrf+Q+WqjM68h6z1Lm8eA/W5m5
wnP2MidrM0eZkzWbs8wJ27nKnLCdJ/33N7Kdt8zJXpivzAnn+cucsF2gzAnb
Gco8d+a6YJmPMb+FyzxHOF+a/vvQVIam0qHM6wufxcqccFumzGxgsmiZ9wH9
Opa5Hf6LlznhuVT6739S/pvK0mVOzl+izO2wWaTM12esVpm5wWnZMl+Hx/0q
ZV53OCxf5n7wXMGE53L2ZZ92dh/Qb0Xb4bySCdtVHY+16WLCc2XbuV4nx2Os
bu4v9shqJmyPTGXLVLZKZc0ys4ThGqnMWmbm3U2Y9zDpt5Z94bxemVnCcO1U
5i4z83VMmK9r0m99+8J5f/vRvoHH4LypLGHYq8y8We+NTRhuZjsMe5uLe09L
lpnhRmXe05y/ue0wfKbKeVmV75++cN7aZL9sY8JzWxNWfeQEzx1MeG5nO2vf
12Mw3Nl9ALed5ESdz+D5zJbPdvvZF847mvTb3vG43ibeN+uyi+PBf7cyP4/A
eXcTzv3N1VPZw4TtniZs9zJhO8BkL+xtwnnfVHrKdj8TZrt6fa69odwW8jrs
L/bQAbJljwyWMX0PNOFzkAnng004H2Jy30NM9sWhJvyHmvA/zITzs1XOy1OO
ck1Z+4HOhT14VJnZw/xoE+bDTJgPN2F7jAmTY032wnEme2GECf+RJmyPN5nH
EalsUeZ9yhrx/Mpz6wnOkf1ykoxZ41PlCs/TTHiebDv8T/cYbM9JZR+5nSVX
eA7yvmFwhn3hf6ZJv1Mcj+ud6FyYx2jHg/+YMj9uYXueybqeb3KdC0yYjzVh
fqEJ84tMmI8zYX6xCfNLTJif6/W5Nq+7vBeb4OsxyfuqK1Lb4a7xlWV+joPz
VSacb5ATfF5J5dpUrktlvOdxztXuA/hP8Dzq18ub86+xnX1xo+PB+eYy7zl4
3ikz+NzimsL2VhOGN3ke50z0PPrdZjtMbjfZC3c5HgwnmTC8w/bTvJ9jneu1
zpH63fZlX9ybytll3i8PuL6wfdCE7RPygMPDMobtQ7ZTf8RjcH5MxrCdbML2
cZOxnnQ8Xrdfda6s61MeuyyVl2TAGj9bZq7wub/Me5G53ufcqT+TyuX2e77K
Y4xP+ZznsRdedjzW44Uy7wnYPm879Rc9xrUf9Z64n9ecI3vnd89hjNdlD8Op
JvzfMOH5vvsAbm96jL3wtvsAzm95jPq78obneybnf+easpYfOB78P07lHnl+
YrI2n5qs2WcmnD834fyFCc8vTTh/ZcL2a5P1+MaE8zvOnbl+6zHm971zZO88
V+Xn5StSvlBlxlem/Dnl03L7S97w+bHM+4N+v9gO/19NeP7h2sPqT5Pzf7Md
Nj94fcaaIjc4/e11eNy3m3nd4cAXGabIs2jmhOc/9mWf/uc+oF/ZzO1wbjZz
wrZq5vFYm2maOeHZauZ2rvev4zHWtM3cDufpmjnZL9M3c8J5pvTfH8l55mZO
OM/SzAnnuZuZE3xmbeZjMJ+9mXnDebZmPkZ9zmbmDee5mjk5f83033M0c/s8
zTwebOdr5v0H2/mbOVnjBZo54fZilfOqlAul4z+VmfPCzZzwXKSZE56LNnPC
rUMzJ4+txZo54cxcvnBvdmzmYzBfvJmTvbNEMydsl21mljBcqpn5sd5LN3PC
cJlmTvotZ194rtDMewKGnTwG284mDJc36beifeE8bzOvE2u0ksdgu0Yz82Dt
V21mrjOk0jWVGZuZ7ZLNPHfmukoz7wP6dbMd5quZMO/ueLDtYbJOq9vO9Vb2
+tN5PfYRn1usJVuYr93M+wbO63oPcF7PhPMmzcwJPuvYl37r2w7/l6qcE6r8
mS+84byxyfkbprJgM++Lnl6fa2/kMc7Z1OvAf9tmZgmfLZqZMeu0pQnbzezL
vti8mfcE/bayHeZbmzDfzvFgu70J221s53q9HY+xeA3h/SXPX33sC/++7hX4
75pKF3nu2MzsWfudTHjubMJ/N/vCdk/3Bzx39xic+5vw3MOk3172hfkOzoV5
DPAYj92Xq8zm6pT7utZw3s+EYT/nzlz3aeY9Qb/9bWcvHGCyFwansoEMDzTh
NtB2rre312csPsvj33D4d5eDm3lPsBcOMdlTQ+XHeh9mwnC47GF1VSpHpXJ0
Koe6PzjnCPcEe+Fwz6M+TJacf6Tt7IVjHA/mxzUzS9bvZPnBZKRcWZvjTXge
63mcM8Lz6DfKdjifYML5FMeD56kmPE9KZRevx/1s7VyPco7UT7MvzE832SNn
yZg1PtuE21jZwGR0M/OG8zm2Uz/XY7A9T65we6XKeU3KC1IOcqwLHY9/w5ng
XFnXizwGz/EyYI0vSWWIfM5s5j3KXM9w7tQvlj39xjkG9Us9j71wpeOxHpc3
856A7WW2U7/CY1x7jPfE/VztHNk7T3sOY1wrexheZ8L/ehOet7kP4HaDx9gL
N7kP4Hyjx6jfksqJ8rzV5PyHUzm/mdfydseD/51yheddJmszyWTN7jbhfI8J
53tNeN5nwvl+E7YPmKzHgyacb3bu7M1Xq3zs2pSPOEf2znqt9DyfyvypTJYx
fB434facvOHzWDPvD/o9YTv8nzTh+YxrD6tnTc5/ynbYPOr1GesaucHpea/D
4/511x0OL9sPnq+Y8HzBvuzTl9wH9HvVdji/ZsJ2quOxNm+mMlGeU2znei86
HmO9ZTuc3zbZL++YcH4vlTvk/L4J5w9MOH8uJ/h86DGYfyxvOH/kMeqfyhvO
n5mcP0vi9Intr1V5vOtSftXM+w+2X5us8Tcm3L414fydCefvTXj+YMLzRxNu
P5k8tn424fyJc2euv3gM5r+a7J3fTNj+LUsY/iE/1vtPE4Z/mfT7x77wLFp5
T8DwX4/B9j8ThnxpmaRfM/33G3L+MpWHXKNWKx+D7YytzIO1n6aVub6byrSt
nLD93bkz16qV9wH9pmvldphP38oJ85laeTzYztzKyTrN0MrtXK/dytd/2+vd
7h6atZXZwnxKlffN9SnnbOV7gPNcrZxwXrCVOcFnjvTfX3ivc7dyO/znaeWE
P4/z7+W8QCsn58/byu3si9la+fpcm+eG79wjC7XydeC/ZCuzhE+HVmbMOi3W
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
Yfu8yTwecV7sUx5DPF/yfPqic2S/vCxj1vi1VK5vZ55TTHi+Yjv8X/cYbN+S
H9zelCv1u7xvGEy1L/zfMOn3YZXHuyvlS86FebztePB/t50ft7B9z2Rd3ze5
zgcmzD80Yf6RCfOPTZh/YsL8UxPmn5kwf8frc2321ort/PrxhfsA/l+a8P9e
rvD82nXnOe8bE/7fpTLZfj/YF+a/yBWeP3oM/j+Z8P/ZpN+v9oX5QlXuR/tv
HoP/R1VmNonvt8ubNf7LhPm/qbwq8/9MmPPec6qs/mjnPc35iD2myL+octKP
96lvyL9V5WRftKuc8OQ97Nuu63RVZgnD6aucMOQ97jsyn6HKx+A5S5WZwWrm
KrOkvnX676VTWSaVGavcF+YzVTnpN22Vx+N6f3vfrMusVR4P5rNX+TUetnNU
OWE7Z5Xzq1TmqnLCdu4qJ2znTf/9rWznq3KyF+avcsJ5gSonbBescsJstipf
n2v/LjfWeuEq82RfLFLlhPnisoRhhyrz5rzFqpywWqLK7dzrx1XOu12j/2TY
rcprxFoulco/7gXW8l/3Qscqj8f1Vq8yA9Zs2SqPAf/lTPbLSv6NwnovX+V9
AP8VTPivbDv8VzHh31V+zKmzf/dw/qq2sxe6mPRbzbkzp22dE3PZxvukvmmV
14i1WavKLGHYvcrrDvMeJsx72g7bdVKZp8ps168ySxguWmUOrPu6tsN8PZN+
azoe19uoyo9PeG7gGPDf0KRtM+fIem9cZd5cZxOTe+htO/w3N+G8lfzg1svr
cP4ntt+TypapLGm/NWTI/fM3MJ998nklf3/wdyd/W+K/wfuC/6Wv/PgbdPsq
/10Knz4mnHcw6dfPvuyFXeQHtx09Bv+dTPjvbNJvV/uyF06wH+27eYw9O0Bm
rPEeVd6X3NOeJmz3th3m+5iwPaDKzGDVv8p7iPP3S2Vtme9v0m+gfeE/yITh
YBOGB5pwPkR+cBtisgcPsh0+h3oM5keksoV8PpXrvVV+juH1hNePofaF/2Em
/Q52PK63l/fNuhzpeOyLo6v8/MhjYpjJY2W4uV0qx5iwPdaE7XEmbEeY7IWR
JpyPN2E7yoTZUV6fa+8uN9b6RHmyL04yYX66LGF4irw571QTVmfYzr2eabIX
+EkPHiN+S4ELCl8QLqGzbGcvnG2yF05zPK6HVwqnEB4hvg7YybH4p8TO1vFA
reLjIXX7n+sI59E0Pj6o441a1X64rrpYn9m5dMsfhfzvPLxJuK+62m8m26nj
sVrDe2jZl3nAh+c2HnuLNbI7CK8QXqu1G9l3FN4rHEN4rdayHt4r+uGyWtc6
HqgNGtl5dLIcWPdwXdFvftupz+V1GBeXFe4jXEi4pTZ0rPBhUe/YyH4j5rpo
IzuRcCR1cO7UF29k9xH9lmhkBxF1fFR4j/AaLeJ5XG/JRnYU0W8p26nP7n13
lxleo/BgkfzGhs/C+ayXz3xhhgOpb6N2Ue3WyI4hXDcnNmov1e5yo+8OMt/R
85f3WB/Z4ykKR9pO9sNVtWcju4xYdzwp+7m+B1iHE16jAbLfw2vjTjrZOfWw
fS/vk9yzUXuv9m7UTqsD5M11wqe1r/26eq/hedq1Ufu6dvEeYD7IscJvdbDr
ja8IbxG/WcJTdHSj9mEd1Ki9V+HBGuL5MMN9dLjMjrTO/hjqOXAa7rjM8RTv
n3Uc1cjeop3lc0KjdnKFo4sMd9dg7wE2xzVq3xUZfqxjvF4/xx7ZqD1ZI2Q7
wvN38prMY3PvA38R++NU58oYOHXw4eCwwn00Rv44kE6XN56icxu1E+qKRu3G
OrVR+7DCj3Wm5+/neaPlfbb9wnU1xnvGaXS+a4qD6BLXBvfRWNfsIuvhxjrP
NRvr+fAcZ7/wXo2T1WWOy/1fbn2I16FfOLnC0XWOcw0fFueEA2t8o/ZbXeMa
4yPCW8TemtDILqTwYYUf62rb4Hmd54/yvJvkhpso/FjX2y/8VhMbtRuLfuwz
nEa3Old8RDh/8FnhMsJ9FD4szuc39fg98H3ADD9S+LFudyx44x260zW4z3Hh
iVMoHFqT7HeW16Stt+s71LW83/PDh3W/nB5pZOcR3B61Dg98RPiJcBXhufle
zvR9SK6TG7UT6zHPv9TznpT34/aD2TOOCzOcSc+6rviIXpUHrqMX5POS9Svs
+4wsaX++UXuvXpLfK9bhMcVx4fO69eu8Dv0ucY7hx3rCucJ+queEA2uq3HAc
vSWbd6yHf+rjRvZc4fDBdwTDd+0Hv/cbuQ1WHzay/whOH1m/xzE+atQeK8YN
H9mDMvvMNtYUH9G3jdpjhfMoPFzh5XrTe3jQ9nBife5Y8PzK8x+X83eyxCkU
3qyv7feY1/ymUbuufmjUHqufGrVfie9vwwnH0W+N2j+Fk+gp+/4oW3xI4bj6
xbHCgfV7o/ZY/SNvvEThO/zTfuG0+k/G9P1bfviO8BrBAQcRTiLWCZcR7iN4
0875Y1yvB1w/2sODRTJWeK84H5Y4jRgX5xXuI5xIsMe1Qz/Yc03awt/E4/9l
5/hXo3Zg4UWCMa4jnEfhuqIeLiqcEuG6CvcVST9Yzul36MNvBQ+Y4aOgDkPG
oB5OK8ZlL3J97geu+I5oY43xFOELCqcV7iP2KHMMXxfJPcCW9vBjkYwVDizO
5555/mNcGOMjCocWidcJrlyTNp7jWOv33Qt4kFjHcKbcKmPcR8vKqZP1cFHh
MMJxhPcGB07Dvsu4D3ARhROrs+dP63kryXsF+4XTahWZ4Tvq4rrzG4YeRe2x
6lbUHqvVXN8unj+T7V1lvIb9YNndOjzXclxY9rQ+u9ehHz4u5oi7iT23onMN
71VPea9jPbxX68lmA+vhpeotY9xH4bva0H7w62UbrPAgbSKnzax3dAzq4bfa
3HXEOQSDcF1t4Zri/ulT1H4rXEjzOcdweq3rPYQPK/xYWzlW+LC28f77Om74
sMKPtZ39OntN2hb1PjYuau/VjkXtWhpe1N6rnYvae7VLUXuvdpUTzqIBRe3A
2k2u+IjCg9XfNvjhOtpTngOsh1vq0KL2Xu0tP/xG+7oW+1tnbQ6wzpoNtA7X
QdbDdTVIngdah+VB1rl/3EcHux5DrK/hHPcoagfWkKL2Xg0taq/TmUXtujqi
qF1XR8oDT9FxRe3GOryoHVhHFbUD6+ii9lsdI6vjrG8rE/qFb4t5hKcMfjiv
8CDhRGK98QOdaju+oxOK2m9FnX2JK2mk59M+qqi9VyfJ8hTrrMXpjsvanGF9
d69Dvx0d43i5nmk/WJ7tevGbFn4TwW8nYInvaLQsx1gPLxXeonAbPeI+oO85
MsY/FE6s8zz/YM+7SPYX2C/8VhcXtdPqUteU38RPKGqn1eVF7bS6oqh9WJcU
tQPrsqJ2XY0vatfVlbK6xnHDaXWNjCfYL5xc4ega61zDe3VtUXuvritqv9WN
Re23uqmoXVR3FrXfKnxXE+0Hy1ttgxNeo9vkdof10xzjjqJ2Wt3lOuIZeqyo
/VaTXFPcPw8VtdMKF9JI54iPCU8XibspHFjhxLrHscKBdZ/3/4jjhgMrnFgP
2O88r/lgUfutJhe13+rxonYqfVbUfqsni9pv9ZRs8BG9WNQ+rCeK2nv1dFF7
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
rz/hMqMfDjPacWDh9+L1htcrvFy8HlDHz8XzGnXcYby28VqHk4zxmFN403hM
4kfDT8U18I3Rl9fJ8JRxPn4yjjEnPGRcM/xnJP1wp+G4YixcaHP4uMGlRuLa
4jHPa8+KXo/XjG6es7p1xljDejjCeO3CQca68poZHjEYhLOMdcdVRjvPbbzf
udPnzZm8TtdW7Q7jNS28aeFR6+BrAg622ZzLjJ7HObjTeP1YrFX7yHjNDJ9a
R5/jVvY+p7OdejgomdMpPpeH/5LEbxh+BH4fGu4GfsM/g8f47Wj4GsLfQPJ7
fhwK/Kae396Hx4F+4X1gLFwI/E6d36vjJFjb+jw+N1DHtcBv8flNfjgXqIev
gfnhheD3mPgBZrEv18bFwG/2w83Qw/Pn9Jq0hQsJb044YvCJ4JPg952MGy4J
XAH4VPBshFuI5LdS4XPB9xHOF5wg4RBhLcPDwvm4Z/CQ4CUJXww+kcmOF34X
Mrwv5Net2j/CGod/hHr4L5j39PJh3uEuYR7hlME5Ej4a5hoOGu4hHDTUw9+B
0yEcH7gemMs8cuM9EN4ePEe818FfFI4oMrxWZDi3RntO+LBwJ93i2uN2wd2D
7wX/y96OTT/et+Ex4jcce3kedRxUuInw/4S7KlxWJM6jQ32/wmvVYfbFGRTO
LPxKQz3G+eHY4n7CsXV+q3as4N3AQYJjI3wqJA6O8G1d2Kq9MHAKLwz18MJQ
Dy8MdfjM3a7dMHO5Z9kL8/r4YI/wekkdPxL7CNcN+3F+X0vDC0M9fC7hdyHx
ueB9Yb64QcLbAmOcL/gkOAd/Ca4P3B94TOBPHZcM57EW+GBo55z4zRuvi3yP
AA8Pjyt+c4PbBsdN+DrD30mG45Pk+TU8nvTD44lDkXq4QXmew5vJ8zLPwTg+
eX/A+44N5Aq3cJ5+06y9qLwe4n+d6tjhh2UuN3ht6rg5GZvXWByx+ELf8Pny
Xd9j3mK/N5u1H/atZu2HpX6j15liP8ZjruE85bk8nLbhuCW51xHOiTme6PWY
C3/L3ux9XOfcOT98xPQ73nauHz5WXp/Dx0qd96e/Ww/fK6+3Lzgv2sIV+63z
+lsG4YrltT38sJwfPlnOecZrhi/2Z/vxWvie6xiOWtiEP/d/ba38vMbzcfib
qONnmrFde6RmaNf+pOl9zsYBxXn4gsInxetY+KSoh0+KevikqIdPinp4vngu
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
zv2XWrWv/1nX8iX7DfCanP9/LCnBNg==
           "]], 
          PolygonBox[CompressedData["
1:eJw1lDlQlEEQheff3X8wxVQTA0hd0iXFVKosAzEEUjGUVAyFxAO8FRUFwRvw
Bg88dj2RXVSUXRWwNJVULL9X3Qav9u1MT/893e/Npvbd27oyIYTtIAcWYgh9
kF5wFf4JtMM7/P9d0AhawQoogr9JCGvgFPwIqINXyfUYPhCNT4BH8MOgF94B
puH90fa09hB+FOQTy/EEfgy0JbY2A78BFqllHHyBHwc9icU8hR+KlrsApuA3
QUztzCJ8RDVl+RYowy+DZvY6wUf4wWhn68ED+BhYn7OYD/BL0c7+AhXVDnaQ
fzOowUej7enMPPyE1hKr8Znv/2R/2s8rn3i/13MGNDCQP8SX4INga8bWXsJP
gnJiOZ/Dh8Bv9orgLfyccsD3gNfws9G4cryCn48Wq5g38NPRvjUHXsAvgA1Z
y/kOfhG0ZG1t1vunWneBOe9Pfc7uNO/9LORsTf26Ek07Be/v9Wiz2w8+e/4t
nO0C7+HD0XK3+P9r0WKlQWlRNarWsutN8To74PWo/o1ZyznreutjlpOur/Fo
s5Imqq7PGnvrEtOr9NMZ7Iz0eUszInYv+AafjMY186/w26ontZjv8DvqZ2pr
Sz6vSmIeKfp8G+ltq89T+ldtNfeH9L6T2H2uZ81H3tKZkvujKbGYGde/Ysdc
X9KbeMX1IT/qbk3uJ/m3wWtc5vee9OVrK67/5mA9mPL79hA76vfX/dZSewOW
Xf9tqcX870c5tZgln5/ekgmft/Qgr+mNWfD+KnfZ+6f55FPLWXO96GzV/S7/
i9el5ucD8mewmuXX+9K73+mH+0e97nb9yw/ig+4P+UW85H6Qn1YzpiHpX++H
vpV3vcg/il11v6l/egu7/Xv/AKAd16M=
           "]]}]}, {}, {}, {}, {}}, {{}, {
        RGBColor[
         NCache[
          Rational[1, 3], 0.3333333333333333], 1, 
         NCache[
          Rational[1, 3], 0.3333333333333333]], 
        LineBox[CompressedData["
1:eJwNw2kyAmAAANDPH/dwpWZcwAHqLrKUbNlVyk4SWSuiyJp9yTm8N/P6BmKR
aE8Iod/B3hDKxj1wyEOHrTjikaMem/DEpKeOeWbKc8etOmHdSWtOeeG0l6Zt
OOOVs147Z9N5Wy5446K3Ltl22Tsz3pv1wZyPrvhk3o4Fn131xTVfXffNDd/d
9MMtP932yx2/3fXHor/u2bXkn/v+A3+TQnM=
         "], VertexColors -> 
         None]}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJzt0LENAkEQBMHDIQ8iIQdCQHqbrLEJAYcAkL7veKEqZ93Zvtwft+00xnie
x8fruu+utnfvrP90/O7O3rXa0fpVu1bTsaFjQ8eGjg0dGzo2dGzo2NCxoWND
x4aODR0bOjZ0bOjY0LGhY0PHho4NHRs6NnRs6Nj4t46/omNDx4aODR0bOjZ0
bOjY0LGhY0PHfVb307G9s/etdvSOcGxvEGAjxg==
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient"}, 
     PlotRange -> {{17.5, 23.}, {0.25614999936338806`, 0.30970121903484}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[
             SparseArray[
              Automatic, {201, 1}, 0., {
               1, {{0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 
                 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 
                 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
                 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 
                 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
                 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
                 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
                 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 
                 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
                 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
                 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 
                 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 
                 200}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
                 1}}}, CompressedData["
1:eJwt0jlMVFEUxvGxpYYWQ4c1tZ5SWqipTMRSTKywlVYoaLQgIZAYEzPBqBGN
GnBEhn32N/u8fV9sxtp5l/9NJrPdc873OzNzj54uP75TKBTKk8eL6eJDY/25
3D6/lMPZjWjp8BXvt+XNa3X4fEfipfzVLt/vy5S2t3Z/6i333sm9lc1f4/n3
3C/K/uRbbe+Aug+yoM5H6j9JaTw/qfhMny+yfFtIv69irOcXv9H3uzzL2639
oP9PKahzxJwjWVQFx8w7lrxqUsrckqgxWon5v+Vu3mb2hBwn8mQ1P3/Icyr5
reniKbnK8i+/Ni6T70weqIvn5DwX1W7jgryXcnWpDrmvZEY1vCb/tahrKzc4
Ksyp4Kkwr4Krytwqvirzazhr5KjhrZOnjrtOrgb+Bvka7KFJzib7aJK3xV5a
5G6xH438GnvScLRxtHG0cbRxdHB0cHRwdGVLObo4ujh6OHo4ejj6OPo4+jgG
OAY4BjiGOIY4hjhGOEY4Rjh05uh4dObpuHTm6vh05hs4DXIYeA3yGLgNcpn4
TfKZ/J4mOU32YZLXYi8WuS32Y5HfYk8WDhuHjcPGYeOwcdg4bBwODgeHg8PB
4eBwcLg4XBwuDheHi8PF4eHwcHg4PBweDg+Hj8PH4ePwcfg4fBw+jgBHgCPA
EeAIcAQ4QhwhjpD/ZYgjxBHiiHBEOCIcEY4IR4QjxhHjiHHEOGIcMY4YR4Ij
wZHgSHAkOBIcKY4UR4ojxZHiSHFkODIcGY4MR4Yjw/FX/gOtjRsg
                "]}], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -67.5}, 
                    Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -22.5}, 
                    Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 11.25}, 
                    Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 22.5}, 
                    Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 67.5}, 
                    Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-1.0\"", -1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-0.5\"", -0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"GrayLevel", "[", "#1", "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "1.`"}], ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.667055279264501*^9, 3.667055311979909*^9}, {
   3.667055361957487*^9, 3.667055382592146*^9}, 3.667061931976386*^9, 
   3.667115250743812*^9, 3.667115344328776*^9, 3.667117715069193*^9}],

Cell[BoxData["15157.138486`"], "Output",
 CellChangeTimes->{{3.667055279264501*^9, 3.667055311979909*^9}, {
   3.667055361957487*^9, 3.667055382592146*^9}, 3.667061931976386*^9, 
   3.667115250743812*^9, 3.667115344328776*^9, 3.667117715106143*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"id", "[", 
  RowBox[{"20.1", ",", 
   RowBox[{"x", "[", "7", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"id", "[", 
  RowBox[{"20.5", ",", " ", 
   RowBox[{"x", "[", "7", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6671238525470667`*^9, 3.6671238898337393`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.`"}]], "Output",
 CellChangeTimes->{3.667127785721436*^9}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.667127786185541*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S1hat", "[", 
  RowBox[{
   RowBox[{"x", "[", "7", "]"}], ",", " ", "20.32", ",", " ", 
   RowBox[{"x", "[", "5", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.667127783440145*^9, 3.66712778345129*^9}, {
  3.667127813685547*^9, 3.667127839948141*^9}, {3.6671278715637074`*^9, 
  3.667127923860899*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.05683740350097629`"}]], "Output",
 CellChangeTimes->{
  3.667127846020297*^9, {3.6671278765614033`*^9, 3.667127925834773*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S1hat", "[", 
  RowBox[{
   RowBox[{"x", "[", "7", "]"}], ",", " ", "20.5", ",", " ", 
   RowBox[{"x", "[", "5", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.667127774932199*^9, 3.667127778916411*^9}, {
   3.6671278531404133`*^9, 3.667127858387569*^9}, {3.667127903755829*^9, 
   3.6671279038906507`*^9}, 3.667129842347904*^9}],

Cell[BoxData["0.10691769269976614`"], "Output",
 CellChangeTimes->{3.667127859583912*^9, 3.667127915399478*^9, 
  3.667129844459285*^9}]
}, Open  ]],

Cell[BoxData["|"], "Input",
 CellChangeTimes->{3.66712984413486*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eta", "[", 
    RowBox[{"b_", ",", " ", "d_"}], "]"}], " ", ":=", 
   RowBox[{"digammaintegralS1", "[", 
    RowBox[{"b", ",", "d", ",", " ", "0", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.665793047060574*^9, 3.6657930738511443`*^9}, {
   3.6657931532864847`*^9, 3.6657932376894035`*^9}, {3.665793702600543*^9, 
   3.6657937429052505`*^9}, {3.6657944406946087`*^9, 
   3.6657944410852537`*^9}, {3.6657948040423756`*^9, 
   3.6657948097325134`*^9}, {3.6657948833524632`*^9, 3.665795074605178*^9}, {
   3.665795289921814*^9, 3.6657953315253134`*^9}, {3.66579544105389*^9, 
   3.665795441210143*^9}, {3.665795550703165*^9, 3.6657955584703364`*^9}, {
   3.665795726862441*^9, 3.6657959153920355`*^9}, {3.6657959517913456`*^9, 
   3.6657959754368076`*^9}, {3.665796008561425*^9, 3.665796110636531*^9}, {
   3.665796173724365*^9, 3.6657962018726*^9}, {3.6657978702260885`*^9, 
   3.6657978831645756`*^9}, {3.6658003380300817`*^9, 
   3.6658004723921685`*^9}, {3.66580071669342*^9, 3.6658007205961943`*^9}, {
   3.665806095986062*^9, 3.6658062501058764`*^9}, {3.665806289704954*^9, 
   3.665806290970725*^9}, 3.665806344269799*^9, {3.6658067745999374`*^9, 
   3.6658068093349457`*^9}, {3.6658068697678647`*^9, 
   3.6658069251182027`*^9}, {3.665807015063038*^9, 3.6658070616074085`*^9}, {
   3.665807097574898*^9, 3.6658071048720427`*^9}, {3.665807272885559*^9, 
   3.665807276785445*^9}, 3.6658073185829897`*^9, {3.665807361702962*^9, 
   3.665807469334553*^9}, {3.665807512946315*^9, 3.6658075328187847`*^9}, {
   3.665807580145148*^9, 3.6658075839893837`*^9}, 3.665807615920682*^9, {
   3.6658076731072807`*^9, 3.6658076904796762`*^9}, {3.6658077396077986`*^9, 
   3.6658077676467347`*^9}, 3.6658078304393816`*^9, {3.6658078737191496`*^9, 
   3.665807944606537*^9}, {3.6658079880234017`*^9, 3.6658079965744896`*^9}, {
   3.6658080314472713`*^9, 3.665808040080409*^9}, {3.6658080972790823`*^9, 
   3.665808165958908*^9}, 3.665808212222798*^9, {3.6658083708005233`*^9, 
   3.6658084646232333`*^9}, {3.665808506967326*^9, 3.6658085275909977`*^9}, {
   3.665808608583577*^9, 3.6658087389112186`*^9}, {3.6658089601595078`*^9, 
   3.6658089909994392`*^9}, {3.6658092207607737`*^9, 
   3.6658092369833164`*^9}, {3.665809507199417*^9, 3.665809547578124*^9}, {
   3.665809605479277*^9, 3.6658096447672157`*^9}, {3.665809686672015*^9, 
   3.6658096876386995`*^9}, {3.6658097501671467`*^9, 3.665809806575248*^9}, {
   3.665810316536425*^9, 3.665810321983307*^9}, {3.665810397984338*^9, 
   3.6658104256069794`*^9}, {3.6658104665670853`*^9, 3.665810474455694*^9}, {
   3.6658105297279963`*^9, 3.6658105405206594`*^9}, {3.665810602727893*^9, 
   3.6658106709433885`*^9}, 3.6658107265599174`*^9, {3.6658107590960584`*^9, 
   3.665810791063784*^9}, {3.665811014385547*^9, 3.665811061024695*^9}, {
   3.665811182792274*^9, 3.6658112001596174`*^9}, {3.6658112575604143`*^9, 
   3.665811290319713*^9}, {3.665811340607455*^9, 3.6658113407675767`*^9}, {
   3.665811373328726*^9, 3.665811383056631*^9}, {3.6658114130879917`*^9, 
   3.6658114170237894`*^9}, {3.665811459920276*^9, 3.6658114830236998`*^9}, {
   3.6658115206564655`*^9, 3.6658115468480825`*^9}, {3.66587119352039*^9, 
   3.6658712135041156`*^9}, {3.665871628810058*^9, 3.665871645887144*^9}, {
   3.6658718110211186`*^9, 3.665871811879444*^9}, 3.6658721436308966`*^9, {
   3.6671282253661833`*^9, 3.667128225620214*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eta", "[", 
  RowBox[{"20.0", ",", " ", 
   RowBox[{"x", "[", "7", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"eta", "[", 
  RowBox[{"20.5", ",", " ", 
   RowBox[{"x", "[", "7", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.667128242313003*^9, 3.667128287522505*^9}, 
   3.667129825357889*^9, {3.667132162592391*^9, 3.667132172677841*^9}}],

Cell[BoxData["1.126938107230231`"], "Output",
 CellChangeTimes->{{3.6671282582569036`*^9, 3.6671282896143312`*^9}, 
   3.6671298311483793`*^9, 3.6671321755558863`*^9}],

Cell[BoxData["2.218083957150675`"], "Output",
 CellChangeTimes->{{3.6671282582569036`*^9, 3.6671282896143312`*^9}, 
   3.6671298311483793`*^9, 3.6671321760488253`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Stot", "[", "t_", "]"}], " ", ":=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{" ", 
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "20.0", ",", " ", 
          RowBox[{"x", "[", "5", "]"}]}], "]"}], "-", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "20.32", ",", " ", 
          RowBox[{"x", "[", "5", "]"}]}], "]"}]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"S1hat", "[", 
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], ",", " ", "20.32", ",", " ", 
           RowBox[{"x", "[", "5", "]"}]}], "]"}]}], " ", 
        RowBox[{"S1", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "20.5", ",", "t"}], "]"}]}], " ",
        "+", " ", 
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "20.5", ",", " ", 
          RowBox[{"x", "[", "5", "]"}]}], "]"}], " ", 
        RowBox[{"S1", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "20.32", ",", "t"}], "]"}]}]}], 
      ")"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Stotfourier", "[", 
     RowBox[{"bmin_", ",", "b_", ",", "t_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     FractionBox["1", 
      RowBox[{" ", 
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
          RowBox[{"x", "[", "5", "]"}]}], "]"}], "-", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "bmin", ",", " ", 
          RowBox[{"x", "[", "5", "]"}]}], "]"}]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"S1hat", "[", 
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], ",", " ", "bmin", ",", " ", 
           RowBox[{"x", "[", "5", "]"}]}], "]"}]}], " ", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "b", ",", "t"}], "]"}]}], " ", 
       "+", " ", 
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
          RowBox[{"x", "[", "5", "]"}]}], "]"}], " ", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "bmin", ",", "t"}], "]"}]}]}], 
      ")"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"etatot", "[", 
    RowBox[{"bmin_", ",", "b_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{" ", 
      RowBox[{
       RowBox[{"S1hat", "[", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
         RowBox[{"x", "[", "5", "]"}]}], "]"}], "-", 
       RowBox[{"S1hat", "[", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], ",", " ", "bmin", ",", " ", 
         RowBox[{"x", "[", "5", "]"}]}], "]"}]}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "bmin", ",", " ", 
          RowBox[{"x", "[", "5", "]"}]}], "]"}]}], " ", 
       RowBox[{"eta", "[", 
        RowBox[{"b", ",", " ", 
         RowBox[{"x", "[", "7", "]"}]}], "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"S1hat", "[", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], ",", "b", ",", " ", 
         RowBox[{"x", "[", "5", "]"}]}], "]"}], " ", 
       RowBox[{"eta", "[", 
        RowBox[{"bmin", ",", " ", 
         RowBox[{"x", "[", "7", "]"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.667129057725806*^9, 3.667129336280155*^9}, {
   3.667129369302546*^9, 3.667129444923266*^9}, {3.667129495066215*^9, 
   3.6671295542910357`*^9}, 3.667129601668741*^9, {3.667129850974661*^9, 
   3.66712990047618*^9}, {3.667129949763781*^9, 3.6671300137295628`*^9}, {
   3.66713026711733*^9, 3.667130302541622*^9}, {3.6671321850975933`*^9, 
   3.6671322074504223`*^9}, {3.667153520482086*^9, 3.667153629789074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"etatot", "[", 
     RowBox[{"19.5", ",", "b"}], "]"}], "-", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], "*", 
     RowBox[{"Log", "[", "2", "]"}], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"19.5", ",", "b", ",", 
        RowBox[{"x", "[", "2", "]"}]}], "]"}], "]"}]}], " ", "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "3", "]"}], 
      RowBox[{"Sqrt", "[", "3", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"19.5", ",", "b", ",", 
        RowBox[{"x", "[", "3", "]"}]}], "]"}], "]"}]}], " ", "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Sqrt", "[", "4", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"19.5", ",", "b", ",", 
        RowBox[{"x", "[", "4", "]"}]}], "]"}], "]"}]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", "20.45", ",", " ", "22.0", ",", " ", "0.1"}], 
    "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6658752297911725`*^9, 3.6658753190127645`*^9}, {
   3.665875456549224*^9, 3.665875490072091*^9}, {3.6663520611042624`*^9, 
   3.666352068519629*^9}, {3.666352103809924*^9, 3.6663521460940104`*^9}, {
   3.666352295675872*^9, 3.6663523137457457`*^9}, 3.666353199662717*^9, 
   3.6664219913434467`*^9, {3.667128986909762*^9, 3.667129010173366*^9}, {
   3.667129466498901*^9, 3.667129466753518*^9}, {3.667129619220747*^9, 
   3.667129645054986*^9}, 3.66712973747094*^9, {3.667130016851665*^9, 
   3.667130086352104*^9}, {3.667130121807568*^9, 3.667130125568472*^9}, {
   3.667130207673492*^9, 3.667130208248394*^9}, {3.6671536236937447`*^9, 
   3.667153625804122*^9}, {3.667153658878549*^9, 3.667153688643343*^9}, 
   3.667153729373509*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{20.45, -1.8497629512264384`}, {20.55, -1.7162779386646463`}, {
     20.65, -1.5826476063770363`}, {20.75, -1.4455784257660285`}, {
     20.849999999999998`, -1.301970689061468}, {
     20.95, -1.1486906335711642`}, {21.05, -0.9823694346119207}, {
     21.15, -0.7991997823182326}, {21.25, -0.5947045763891379}, {
     21.349999999999998`, -0.3634502407773652}, {
     21.45, -0.09866950203925429}, {21.55, 0.20825511219521964`}, {21.65, 
     0.568530927068015}, {21.75, 0.9294206089261661}, {21.849999999999998`, 
     1.0926102945129224`}, {21.95, 1.078680523615688}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{20.45, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{20.45, 21.95}, {-1.8497629512264384`, 1.0926102945129224`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.667129654022829*^9, 3.667129753982402*^9, 
  3.667129925852952*^9, 3.667130100538558*^9, 3.6671301789617033`*^9, 
  3.667130210976132*^9, 3.667131657931038*^9, 3.667133991932501*^9, 
  3.6671539000835257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"etatot", "[", 
     RowBox[{"19", ",", "b"}], "]"}], "-", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], "*", 
     RowBox[{"Log", "[", "2", "]"}], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"19", ",", "b", ",", 
        RowBox[{"x", "[", "2", "]"}]}], "]"}], "]"}]}], " ", "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "3", "]"}], 
      RowBox[{"Sqrt", "[", "3", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"19", ",", "b", ",", 
        RowBox[{"x", "[", "3", "]"}]}], "]"}], "]"}]}], " ", "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Sqrt", "[", "4", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"19", ",", "b", ",", 
        RowBox[{"x", "[", "4", "]"}]}], "]"}], "]"}]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", "20.45", ",", " ", "22.0", ",", " ", "0.1"}], 
    "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.667154049645227*^9, {3.667154081163068*^9, 3.6671541348270206`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{20.45, -1.7785997098938724`}, {20.55, -1.574388550910582}, {
     20.65, -1.3971920529343453`}, {20.75, -1.2347157676576321`}, {
     20.849999999999998`, -1.0786665493797785`}, {
     20.95, -0.9228000743627416}, {21.05, -0.7618530207889702}, {
     21.15, -0.5908727016501408}, {21.25, -0.4047168090483716}, {
     21.349999999999998`, -0.2756273790841174}, {
     21.45, -0.12325333288361373`}, {21.55, 0.0645834331400692}, {21.65, 
     0.2971651192092936}, {21.75, 0.5874677592158304}, {21.849999999999998`, 
     0.7701336135462107}, {21.95, 0.7900008909197869}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{20.45, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{20.45, 21.95}, {-1.7785997098938724`, 0.7900008909197869}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6671543432122726`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"value", "[", 
    RowBox[{"bmin_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"etatot", "[", 
     RowBox[{"bmin", ",", "b"}], "]"}], "-", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], "*", 
     RowBox[{"Log", "[", "2", "]"}], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", 
        RowBox[{"x", "[", "2", "]"}]}], "]"}], "]"}]}], " ", "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "3", "]"}], 
      RowBox[{"Sqrt", "[", "3", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", 
        RowBox[{"x", "[", "3", "]"}]}], "]"}], "]"}]}], " ", "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Sqrt", "[", "4", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", 
        RowBox[{"x", "[", "4", "]"}]}], "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"S1hat", "[", 
    RowBox[{
     RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
     RowBox[{"x", "[", "5", "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", "18", ",", "22", ",", " ", "0.1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.6671297425785427`*^9, {3.667131816111856*^9, 3.6671318387575407`*^9}, {
   3.66714033367407*^9, 3.667140336460286*^9}, {3.667154686824128*^9, 
   3.667154711015151*^9}, {3.6671548700976267`*^9, 3.667154914664637*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{18.5, -0.06355589803302013}, {18.5, 0}}, {{
         18.6, -0.15315471759039223`}, {18.6, 0}}, {{
         18.7, -0.23879532715080456`}, {18.7, 0}}, {{
         18.8, -0.3182640895869058}, {18.8, 0}}, {{
         18.9, -0.38950689687292417`}, {18.9, 0}}, {{
         19., -0.45068226551637425`}, {19., 0}}, {{
         19.1, -0.5002089346132284}, {19.1, 0}}, {{
         19.2, -0.5368067406936801}, {19.2, 0}}, {{
         19.3, -0.5595297075339162}, {19.3, 0}}, {{
         19.4, -0.5677904972410643}, {19.4, 0}}, {{
         19.5, -0.5613755925763098}, {19.5, 0}}, {{
         19.6, -0.5404508157284513}, {19.6, 0}}, {{
         19.7, -0.5055570412284535}, {19.7, 0}}, {{
         19.8, -0.4575962152647817}, {19.8, 0}}, {{
         19.9, -0.39780804121499624`}, {19.9, 0}}, {{
         20., -0.32773793464500434`}, {20., 0}}, {{
         20.1, -0.24919707650282963`}, {20.1, 0}}, {{
         20.2, -0.16421559649282189`}, {20.2, 0}}, {{
         20.3, -0.07499009711291905}, {20.3, 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{18., 0.36254286327087476`}, {18., 0}}, {{18.1, 
         0.287831142379267}, {18.1, 0}}, {{18.2, 0.20567908554589195`}, {
         18.2, 0}}, {{18.3, 0.11821013906214847`}, {18.3, 0}}, {{18.4, 
         0.027685185091365343`}, {18.4, 0}}, {{20.4, 0.016173124757727052`}, {
         20.4, 0}}, {{20.5, 0.10691769269976614`}, {20.5, 0}}, {{20.6, 
         0.19489805815779393`}, {20.6, 0}}, {{20.7, 0.2778401290908301}, {
         20.7, 0}}, {{20.8, 0.3536000506716622}, {20.8, 0}}, {{20.9, 
         0.42021961924167256`}, {20.9, 0}}, {{21., 0.47597689778877705`}, {
         21., 0}}, {{21.1, 0.5194307230529431}, {21.1, 0}}, {{21.2, 
         0.5494579558942924}, {21.2, 0}}, {{21.3, 0.5652825103737538}, {
         21.3, 0}}, {{21.4, 0.5664954122815167}, {21.4, 0}}, {{21.5, 
         0.553065368218733}, {21.5, 0}}, {{21.6, 0.5253395724207001}, {
         21.6, 0}}, {{21.7, 0.4840347299364129}, {21.7, 0}}, {{21.8, 
         0.43021852936046306`}, {21.8, 0}}, {{21.9, 0.36528204329342956`}, {
         21.9, 0}}, {{22., 0.2909037697510535}, {22., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJwtkV1IU2Ech7dqSURREMIoyEEXpi3i/ejr5vylEkaDYFppxI6MskTD7aIu
6saMUUEfI2w0kWQLsg+wrROCSh3BPpZuk83ltiw5Z9aKhghjCq6C1nnfH/x5
7x4e3sfk6LSdXaXT6XaW7//LhkDvsPzO4ZTQ6yvPiKDjWuLYdHtCwNoQXDEU
9ocaJoRopDwrgseZhnWGQ2+EVm0I1jcT29XmPkHDdSGo3eCuwEeCssbzIWgJ
PZq/1zsuazgJgdFVfybtickaL4JgW+XmJqc9KWu4HII7gz+PDy6kZeaHIZyP
XyilvjCeEcMm76+aIb3CeBjDgwFXo9usMp4Vw0BRTD/7oTJeK4Zb1VtKJ2qz
jNeFwdl2uvBxWeV+GPpijd3iUZX7YZifmVhymxXuhyF0+VOgzvKV+2EIPn8/
++JihvsRqLe/vv5kJcn9CLy15b3B71Pcj8D46n2H1xjecT8Cw6/6N95GEvcj
sFYMVATvevj/ERgTuw8s2UdZDx8Bz0j+fHshzHpIZf7Nv8umcJz1iBA4mBe3
OvwzrEeOgL/oSirfPjOejkKP0hY7d2mO96UQ8el3m/sV3pfC9Eo2U31f5X0p
7JlUmyYrs7wvhV1PA39GqrLcj0LY698x9FLlfhTiC6cWe6Y4T6KwvSoa7SjN
cT8KdaZOq3RjlvtRGB12Ln5oSXG/vVC0nEzXPEwI/wAiYi3j
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{18., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{18., 22.}, {-0.5677904972410643, 0.5664954122815167}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6671549350812283`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"value", "[", 
   RowBox[{"19.2", ",", "21.44"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.66712974117367*^9, {3.667131842004167*^9, 3.667131848805026*^9}, {
   3.667131882189095*^9, 3.667131884651723*^9}, {3.667132026381111*^9, 
   3.667132030233132*^9}, {3.6671558375153017`*^9, 3.66715589746671*^9}, {
   3.6671559343745403`*^9, 3.6671559765001574`*^9}}],

Cell[BoxData["0.010545717424857992`"], "Output",
 CellChangeTimes->{
  3.667155889085343*^9, {3.667155920351039*^9, 3.667155987389825*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"value", "[", 
    RowBox[{"b", ",", "21.45"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", "18.5", ",", " ", "20.4", ",", " ", "0.05"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.667132042586154*^9, 3.667132079968443*^9}, {
   3.667132225629408*^9, 3.667132323691415*^9}, {3.667154726407445*^9, 
   3.667154729627143*^9}, {3.667154761217372*^9, 3.6671548115116453`*^9}, 
   3.667154959440288*^9, {3.6671550246581306`*^9, 3.6671551638278217`*^9}, {
   3.6671553814961863`*^9, 3.667155382270616*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{18.5, -3.366921068813494}, {18.5, 0}}, {{
         18.55, -2.500979951045038}, {18.55, 0}}, {{
         18.6, -1.7487598614285442`}, {18.6, 0}}, {{
         18.65, -1.0916176498098447`}, {18.65, 0}}, {{
         18.7, -0.6538817293497583}, {18.7, 0}}, {{
         18.75, -0.5354861687236914}, {18.75, 0}}, {{
         18.8, -0.4313635133341947}, {18.8, 0}}, {{
         18.85, -0.3394090261468792}, {18.85, 0}}, {{
         18.9, -0.25817367795781176`}, {18.9, 0}}, {{
         18.95, -0.18645537219887498`}, {18.95, 0}}, {{
         19., -0.12325333287028328`}, {19., 0}}, {{
         19.05, -0.0677325000880512}, {19.05, 0}}, {{
         19.1, -0.01919557226383639}, {19.1, 0}}, {{
         19.35, -0.010284846675000403`}, {19.35, 0}}, {{
         19.4, -0.03522959673227033}, {19.4, 0}}, {{
         19.45, -0.06465741162687733}, {19.45, 0}}, {{
         19.5, -0.09866950203925429}, {19.5, 0}}, {{
         19.55, -0.13741345809972105`}, {19.55, 0}}, {{
         19.6, -0.18108524016403338`}, {19.6, 0}}, {{
         19.65, -0.2299316857105248}, {19.65, 0}}, {{
         19.7, -0.2842583984972462}, {19.7, 0}}, {{
         19.75, -0.3444289318001371}, {19.75, 0}}, {{
         19.8, -0.41088284710088097`}, {19.8, 0}}, {{
         19.85, -0.48412432485610624`}, {19.85, 0}}, {{
         19.9, -0.5647706964366843}, {19.9, 0}}, {{
         19.95, -0.6535323500666321}, {19.95, 0}}, {{
         20., -0.7511709275176388}, {20., 0}}, {{
         20.05, -0.8589150484896149}, {20.05, 0}}, {{
         20.1, -0.9777015757347862}, {20.1, 0}}, {{
         20.15, -1.1090047570091974`}, {20.15, 0}}, {{
         20.2, -1.254492136584311}, {20.2, 0}}, {{
         20.25, -1.4162416067551207`}, {20.25, 0}}, {{
         20.3, -1.5962294402457962`}, {20.3, 0}}, {{
         20.35, -1.7983545259166802`}, {20.35, 0}}, {{
         20.4, -2.02549644117641}, {20.4, 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{19.15, 0.022939061441851205`}, {19.15, 0}}, {{19.2, 
         0.037977599191092615`}, {19.2, 0}}, {{19.25, 
         0.026332444791341225`}, {19.25, 0}}, {{19.3, 
         0.010232530528828443`}, {19.3, 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQYNRg5VymYBJe+5Dpw9AwQ9Rg6xrWePMTKxHJg1
EwSMHCS8rs17/ev3/jQQWGbk8HHbLEGX8o/7jUFgs5HDNa+EhJlvnuwHm3fA
yCFP9sjjzUoP94PNO2Pk4Bswd2vp7Nv7webdNHK4oH5x0YMdVyHmPTNyuCf8
8PGr1gsQ8z4bObT8fsB29O5xiHkMxg47WM+ebO/dDzGPB8hXO3jiVdhGiHmS
xg4Oc9J5GFdMhpinZuzQEHosKqx2ur0xBDjcsGM+eqZwsT3YOAdjhwWp50ue
fJtlDzbPB6he48L/U19a7MHmRQLNK35xwEKgFWJemrGDwe+F0nM5F0HcV2zs
MGNZYkxy7waI+xqMHRTY43vSnXZC3NcDtO+Yx6LD0w5C3DfT2CGnWlXirO5x
aPgZO7zJtTielncWGn5A83W9lL0ML0HDz9jhnW7FUnnua9DwA5rvsWnic+9b
0PAzdlgiP3f6k9/3oOFn7CD28u6/mUKPoOFn7GDkeHbNnpfQ+GAwcVgx982c
6ZwvoOFn4nDqcGamdc1raPiZOIi8WnAhxPM9NPxMHDQzlh+t3geNX2MTB4WG
3RFpQl8g5jmYOOz61vz1zYpvEPN8TBz4vdY8VO/6CTEv0sTh2HmzVP5jf6Dh
Z+LwVSmjytyE4QAA8pAleg==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{18.5, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{18.5, 20.4}, {-3.366921068813494, 0.037977599191092615`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.667132052272378*^9, 3.667132095359975*^9}, {
   3.667132239093553*^9, 3.66713233598554*^9}, 3.667154743664052*^9, {
   3.667154774355986*^9, 3.667154822896756*^9}, 3.667154972539003*^9, {
   3.667155035620288*^9, 3.667155089086556*^9}, 3.667155376915935*^9, 
   3.667155788080965*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(\\*RowBox[{\\\"9\\\"}]\\)\[NoBreak] recursive bisections in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"t\\\"}]\\)\[NoBreak] near \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"t\\\", \\\"}\\\"}]\\)\[NoBreak] = \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"115.23398645898669`\\\", \
\\\"}\\\"}]\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1.8649690217981135`*^-7\\\"}]\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"2.3079272712208743`*^-11\\\"}]\\)\[NoBreak] \
for the integral and error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.667140238354821*^9, 3.6671561436371202`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.667156139272469*^9, 3.667156139286656*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6671561359032383`*^9},
 NumberMarks->False],

Cell["With log(2)/2pi:", "Text",
 CellChangeTimes->{{3.6671561946034184`*^9, 3.667156207869252*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.667140273815309*^9, 3.667140313646405*^9}, {
   3.667140352207821*^9, 3.667140383235392*^9}, 3.66715615772906*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.667156160341728*^9, 3.667156160355427*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"id2", "[", 
    RowBox[{"b_", ",", "d_"}], "]"}], " ", ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"S1hat", "[", 
       RowBox[{"d", ",", "b", ",", " ", 
        RowBox[{"x", "[", "2", "]"}]}], "]"}], " ", "\[GreaterEqual]", " ", 
      "0"}], " ", ",", "1.0", " ", ",", " ", 
     RowBox[{"-", "1.0"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.667140424017462*^9, 3.667140425778179*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"id2", "[", 
    RowBox[{"b", ",", 
     RowBox[{"x", "[", "7", "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", "17", ",", "23", ",", "0.1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.667140442315394*^9, 3.6671404995369463`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{17., -1.}, {17., 0}}, {{17.1, -1.}, {17.1, 0}}, {{
         17.2, -1.}, {17.2, 0}}, {{17.3, -1.}, {17.3, 0}}, {{17.4, -1.}, {
         17.4, 0}}, {{17.5, -1.}, {17.5, 0}}, {{17.6, -1.}, {17.6, 0}}, {{
         17.7, -1.}, {17.7, 0}}, {{17.8, -1.}, {17.8, 0}}, {{17.9, -1.}, {
         17.9, 0}}, {{18., -1.}, {18., 0}}, {{18.1, -1.}, {18.1, 0}}, {{
         18.2, -1.}, {18.2, 0}}, {{18.3, -1.}, {18.3, 0}}, {{18.4, -1.}, {
         18.4, 0}}, {{18.5, -1.}, {18.5, 0}}, {{18.6, -1.}, {18.6, 0}}, {{
         18.7, -1.}, {18.7, 0}}, {{18.8, -1.}, {18.8, 0}}, {{18.9, -1.}, {
         18.9, 0}}, {{19., -1.}, {19., 0}}, {{19.1, -1.}, {19.1, 0}}, {{
         19.2, -1.}, {19.2, 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{19.3, 1.}, {19.3, 0}}, {{19.4, 1.}, {19.4, 0}}, {{19.5, 
         1.}, {19.5, 0}}, {{19.6, 1.}, {19.6, 0}}, {{19.7, 1.}, {19.7, 0}}, {{
         19.8, 1.}, {19.8, 0}}, {{19.9, 1.}, {19.9, 0}}, {{20., 1.}, {
         20., 0}}, {{20.1, 1.}, {20.1, 0}}, {{20.2, 1.}, {20.2, 0}}, {{20.3, 
         1.}, {20.3, 0}}, {{20.4, 1.}, {20.4, 0}}, {{20.5, 1.}, {20.5, 0}}, {{
         20.6, 1.}, {20.6, 0}}, {{20.7, 1.}, {20.7, 0}}, {{20.8, 1.}, {
         20.8, 0}}, {{20.9, 1.}, {20.9, 0}}, {{21., 1.}, {21., 0}}, {{21.1, 
         1.}, {21.1, 0}}, {{21.2, 1.}, {21.2, 0}}, {{21.3, 1.}, {21.3, 0}}, {{
         21.4, 1.}, {21.4, 0}}, {{21.5, 1.}, {21.5, 0}}, {{21.6, 1.}, {
         21.6, 0}}, {{21.7, 1.}, {21.7, 0}}, {{21.8, 1.}, {21.8, 0}}, {{21.9, 
         1.}, {21.9, 0}}, {{22., 1.}, {22., 0}}, {{22.1, 1.}, {22.1, 0}}, {{
         22.2, 1.}, {22.2, 0}}, {{22.3, 1.}, {22.3, 0}}, {{22.4, 1.}, {
         22.4, 0}}, {{22.5, 1.}, {22.5, 0}}, {{22.6, 1.}, {22.6, 0}}, {{22.7, 
         1.}, {22.7, 0}}, {{22.8, 1.}, {22.8, 0}}, {{22.9, 1.}, {22.9, 0}}, {{
         23., 1.}, {23., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxdzsENQiEQhOGNXXi0BFnAk9ECOFmCiVxtgTawDQqwAWyDsyX4fCRvM7MJ
If/lyxzuz9tjJyLn5f3/ecfr/L/vV11ub63rWX/6csk6r2e9foW8Sl4jr5M3
yBNH+xx66tBLDr3s0CvkVfIaeZ28QZ4o7VP0VNFLW1/mPuu5z3rus577rOc+
8gZ54tHbe/TUo5c8etmjV8ir5DXyOnmDPAm0L6CnAb0U0MsBvUJeJa+R18kb
5EmkfRE9jeiliF6O6BXyKnmNvE7eIE9OW/8AEJ4Dvg==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{17., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{17., 23.}, {-1., 1.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.667140557691123*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
/wHyn0lc\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.667140620319057*^9, 3.667140653172659*^9}, {
   3.667140886617275*^9, 3.667140886960438*^9}, 3.667156245895282*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.667156244562212*^9, 3.667156244572658*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"S1hat", "[", 
    RowBox[{
     RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
     RowBox[{"x", "[", "4", "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", "17", ",", "23", ",", " ", "0.1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.667594288288272*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{17., -0.30086792043216665`}, {17., 0}}, {{
         17.1, -0.4260869747149669}, {17.1, 0}}, {{
         17.2, -0.5431308790971028}, {17.2, 0}}, {{
         17.3, -0.649753940915203}, {17.3, 0}}, {{
         17.4, -0.7439104109667033}, {17.4, 0}}, {{
         17.5, -0.8237937326308932}, {17.5, 0}}, {{
         17.6, -0.8878712043433078}, {17.6, 0}}, {{
         17.7, -0.9349133850877207}, {17.7, 0}}, {{
         17.8, -0.9640176828543234}, {17.8, 0}}, {{
         17.9, -0.974625672160191}, {17.9, 0}}, {{18., -0.9665338098494766}, {
         18., 0}}, {{18.1, -0.9398973373670172}, {18.1, 0}}, {{
         18.2, -0.8952273062834404}, {18.2, 0}}, {{
         18.3, -0.8333807720715325}, {18.3, 0}}, {{
         18.4, -0.7555443509256358}, {18.4, 0}}, {{
         18.5, -0.6632114548948905}, {18.5, 0}}, {{
         18.6, -0.5581536388203892}, {18.6, 0}}, {{
         18.7, -0.4423866112271029}, {18.7, 0}}, {{
         18.8, -0.3181315629930626}, {18.8, 0}}, {{
         18.9, -0.18777254730254833`}, {18.9, 0}}, {{
         19., -0.053810743156384164`}, {19., 0}}, {{
         21.4, -0.12664396567067104`}, {21.4, 0}}, {{
         21.5, -0.25897624405759245`}, {21.5, 0}}, {{
         21.6, -0.3863399714812823}, {21.6, 0}}, {{
         21.7, -0.5062913129335223}, {21.7, 0}}, {{
         21.8, -0.6165286496388063}, {21.8, 0}}, {{
         21.9, -0.7149367448152317}, {21.9, 0}}, {{
         22., -0.7996273315196153}, {22., 0}}, {{22.1, -0.8689753467099903}, {
         22.1, 0}}, {{22.2, -0.9216501144338383}, {22.2, 0}}, {{
         22.3, -0.9566408809119692}, {22.3, 0}}, {{
         22.4, -0.9732762104580859}, {22.4, 0}}, {{
         22.5, -0.971236870585711}, {22.5, 0}}, {{
         22.6, -0.9505592020451945}, {22.6, 0}}, {{
         22.7, -0.9116481551272837}, {22.7, 0}}, {{
         22.8, -0.8552421087438099}, {22.8, 0}}, {{
         22.9, -0.782426113042172}, {22.9, 0}}, {{23., -0.6945973414042123}, {
         23., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{19.1, 0.081183536092204}, {19.1, 0}}, {{19.2, 
         0.21462015682121005`}, {19.2, 0}}, {{19.3, 0.34393886138213137`}, {
         19.3, 0}}, {{19.4, 0.4666583909391395}, {19.4, 0}}, {{19.5, 
         0.5804240937819786}, {19.5, 0}}, {{19.6, 0.6830531039561633}, {
         19.6, 0}}, {{19.7, 0.7725762249648824}, {19.7, 0}}, {{19.8, 
         0.8472757140324809}, {19.8, 0}}, {{19.9, 0.9057182422107326}, {
         19.9, 0}}, {{20., 0.9467823977315081}, {20., 0}}, {{20.1, 
         0.9696802048994834}, {20.1, 0}}, {{20.2, 0.9739722458368181}, {
         20.2, 0}}, {{20.3, 0.95957609397749}, {20.3, 0}}, {{20.4, 
         0.9267678986474216}, {20.4, 0}}, {{20.5, 0.8761770893093881}, {
         20.5, 0}}, {{20.6, 0.8087743011055153}, {20.6, 0}}, {{20.7, 
         0.7258527535301188}, {20.7, 0}}, {{20.8, 0.6290034392595459}, {
         20.8, 0}}, {{20.9, 0.5200845993641993}, {20.9, 0}}, {{21., 
         0.40118606984827}, {21., 0}}, {{21.1, 0.27458918484009676`}, {
         21.1, 0}}, {{21.2, 0.1427230036360476}, {21.2, 0}}, {{21.3, 
         0.008117703998358346}, {21.3, 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJw102tIU3EYBvAxLbUPaqWhZJKiTiLNcy2N2isomi2tULHSRGGGze6Elyz2
QcmRfvFGioTpDG8V3mKlMFHS5a3S1JnX2dyczg0Lk7Ag8//2wuF8Og8/eJ7j
lXrrolQoEAhObT//3uQoMP5uzJeFjqkrK7bPnQJJd/o5Yfi0mtk5CvQ3pcLY
FJ16eGj7JBRktoz3aQb06rSdo0AWpGEPjRjVO3FyCrzKFM15iSskr4KCuDl+
/na6meS1UaCVtWR/XFkjeUMU+AtKq05OWUiegQKRMivAO8hK8gQ0pNj+itGu
WdBHw9PJ1tLa/Rb00RAvSu5qqzOjjwY97StybFpBHw3PDV0JsoBl9NFwT1ob
Yhe8hD4aPJ09dklndOijoV301eJ0fgZ9NARfUeWGJX5BHw3N3gtRFnsN+hh4
keFkdilqQh8Do5cequ5o2sXEx4DKJjqpOWtQTHwMnM5I8nGzmRATHwPV7Lyo
c3ZWTHwMhMaWFI4XL4qJj4GzitnA4uklktfGQGV+bt+6apnkDW1/Pxu9ofNY
JXkGBiLXO0aVW2aSJ2DBtBZXsUdiIXnuLEQYfvQ/s7Oij4WfZYuT/Ues6GPB
3rbDrG23oI+FsScbfq71a+hjQTImVCgdzOhjQf6nRpmjM6GPhc3vvUXHQozo
Y8HoeWB08LAefSwczA+4X6BcQB8Hl7fS4u1fTqGPA+fowLy54s/o4+B1tjxW
HdaDPg4uxBR8sKmWo4+D6khp2RzXjf1yIHjf6La35BP2y0FiacOZwbda7JeD
2ELThIJZwH45MMxci6p89w375eCuK7+7d8GA/fKw2dDpWFhuwn55cBvQp9aN
rOL+eOjxfpDi/wj3LOFBvY+KH67CPafxUF/U5efii3uW83BDlZOQ7GJFHw+J
4W+8tq7jntt4KE/O7D5x9P//wcNjq6HV5+oq+niIeaXLrXEwoe84RNiJWJ8Q
g/ovc9G7gQ==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{17., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{17., 23.}, {-0.974625672160191, 0.9739722458368181}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.667594315972898*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.667156242969707*^9, 3.667156242984705*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"S1hat", "[", 
    RowBox[{
     RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
     RowBox[{"x", "[", "2", "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", "17", ",", "23", ",", " ", "0.1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.667140689754643*^9, 3.66714069406841*^9}, {
  3.6671407626519547`*^9, 3.6671407899699783`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{17., -2.9099434097496317`}, {17., 0}}, {{
         17.1, -2.904518238250153}, {17.1, 0}}, {{
         17.2, -2.8851438793732074`}, {17.2, 0}}, {{
         17.3, -2.8519134291426904`}, {17.3, 0}}, {{
         17.4, -2.8049865268334306`}, {17.4, 0}}, {{
         17.5, -2.744588586808191}, {17.5, 0}}, {{
         17.6, -2.6710097145152405`}, {17.6, 0}}, {{
         17.7, -2.5846033112856857`}, {17.7, 0}}, {{
         17.8, -2.4857843770149954`}, {17.8, 0}}, {{
         17.9, -2.3750275137859886`}, {17.9, 0}}, {{18., -2.2528646527647}, {
         18., 0}}, {{18.1, -2.119882486774326}, {18.1, 0}}, {{
         18.2, -1.9767196653018826`}, {18.2, 0}}, {{
         18.3, -1.8240637213014435`}, {18.3, 0}}, {{
         18.4, -1.6626477720251869`}, {18.4, 0}}, {{
         18.5, -1.4932469977223601`}, {18.5, 0}}, {{
         18.6, -1.3166749216145661`}, {18.6, 0}}, {{
         18.7, -1.133779504076608}, {18.7, 0}}, {{18.8, -0.945439071160788}, {
         18.8, 0}}, {{18.9, -0.7525580990861623}, {18.9, 0}}, {{
         19., -0.5560628713634813}, {19., 0}}, {{19.1, -0.356897033108013}, {
         19.1, 0}}, {{19.2, -0.15601705955997658`}, {19.2, 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{19.3, 0.04561233527007506}, {19.3, 0}}, {{19.4, 
         0.247022830753013}, {19.4, 0}}, {{19.5, 0.44724714905480706`}, {
         19.5, 0}}, {{19.6, 0.6453236999467561}, {19.6, 0}}, {{19.7, 
         0.8403011985696073}, {19.7, 0}}, {{19.8, 1.031243234141482}, {
         19.8, 0}}, {{19.9, 1.217232767583943}, {19.9, 0}}, {{20., 
         1.3973765363496446`}, {20., 0}}, {{20.1, 1.5708093454992185`}, {
         20.1, 0}}, {{20.2, 1.736698223871757}, {20.2, 0}}, {{20.3, 
         1.8942464267184982`}, {20.3, 0}}, {{20.4, 2.0426972632642677`}, {
         20.4, 0}}, {{20.5, 2.1811327229566695`}, {20.5, 0}}, {{20.6, 
         2.309501950894444}, {20.6, 0}}, {{20.7, 2.4265743487931473`}, {
         20.7, 0}}, {{20.8, 2.5319926320322352`}, {20.8, 0}}, {{20.9, 
         2.625250482039323}, {20.9, 0}}, {{21., 2.7058999895715856`}, {
         21., 0}}, {{21.1, 2.7735538062929956`}, {21.1, 0}}, {{21.2, 
         2.8278870063603265`}, {21.2, 0}}, {{21.3, 2.868638647198418}, {
         21.3, 0}}, {{21.4, 2.8956130227080585`}, {21.4, 0}}, {{21.5, 
         2.908680602909782}, {21.5, 0}}, {{21.6, 2.9077786554460756`}, {
         21.6, 0}}, {{21.7, 2.8929115458312475`}, {21.7, 0}}, {{21.8, 
         2.864150715316951}, {21.8, 0}}, {{21.9, 2.8216343362446974`}, {
         21.9, 0}}, {{22., 2.7655666467547557`}, {22., 0}}, {{22.1, 
         2.696216968137222}, {22.1, 0}}, {{22.2, 2.613918409715224}, {
         22.2, 0}}, {{22.3, 2.5190662666677466`}, {22.3, 0}}, {{22.4, 
         2.412116120489094}, {22.4, 0}}, {{22.5, 2.293581648697078}, {
         22.5, 0}}, {{22.6, 2.1640321569673384`}, {22.6, 0}}, {{22.7, 
         2.0240898434821784`}, {22.7, 0}}, {{22.8, 1.8744268099993269`}, {
         22.8, 0}}, {{22.9, 1.715761833473804}, {22.9, 0}}, {{23., 
         1.5488569138177894`}, {23., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJwt0WtIU2Ecx/Gjc2d2s5sSoxuzosuL7FytKPazBCOWRtqk0iLBRVGkJlRk
ajesqKggQ4k0Kqdh6yKZvrAtKy2bWpCaaaUpmgoi6nTNS5n/5weHh/Pmy+fh
McQd3RHvzXHcxonv/0kT0G6bdfB6mM6RnTUxvYBpMT/9kjfoHNLkBFSZErdX
+Osc1c6JmQREZHSNvvzEOyyTEzBeXlRxJ4F3TObSBRgzDjV3D2qplyVgq2FX
9Pq9WuoVCShuWJse+tiHek4Bm9P29/z6paFeh4CBlPrDfpyGepyI3LNBnd+1
3swn4vYJbuC8i2M+EUnhZc4HuX/t5BPxbtCZEBs0ZiefiMavjVfkbI+dfCLi
A14PmduH7eQTse3taIl+tstOPhGWZas9riX91HOKaG3ZlzAlpJd6HSLuh42V
DPr/ph4nYUZdS0zox1bq6SVMD4mwWhrqqSdJKKlRB2Pdb5hPAt97jUvfbTWS
T0LU5dJniXdrjeSTENaUfeZ5TrORfBISYyLbTue1G8kn4UbhF7O9rdtIPgnS
q+pOd1of9TokzN/Cz/5wcoB6nIzMBWVp1j1D1NPLuFXa7/EN/EM9SUZlTf7c
8x9GqGeSMTVwZ3Rd+DjzyZCrHhUkRnMgn4znhZeLXUleIJ+MuEUFK5pPeoN8
MiJ9e2pzDmpAPhmfouJ2XwjxAflkhJkNkec4LfU4BZHWj+22h1rq6RVscsZ6
NqzhqScpKKvxXXcuh6eeSYE8x/bZ3c9Tz6LAvXbuyuBVOuZTkOrHmT2hOuZT
kLm6INmwWcd8CsSM0RrbUh3zKUipzW+s7GK9jon/i03aFzd55lPxpNx1oHUx
z3wq7l3Ll77d0DKfioULDX7hXT7Mp6J0z7g6fTm7r0XF1Y2xlzQmDfOpeNry
Y2fILm/mUxFoPjKvL8KL+VQU7pvpYxY45lMRE3BqOG9sjL2viuM9y23lx0bY
+wbjampf0KL3buM/raCdMg==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{17., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{17., 23.}, {-2.9099434097496317`, 2.908680602909782}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.667140718919752*^9, 
  3.6671408110417347`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
/g9FZ2I1\
\>"]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6671406908061934`*^9, 3.667140697155699*^9}, {
   3.6671407419485207`*^9, 3.667140742811384*^9}, 3.667140798105369*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Stotfourier", "[", 
      RowBox[{"bmin_", ",", "b_", ",", "t_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      FractionBox["1", 
       RowBox[{" ", 
        RowBox[{
         RowBox[{"S1hat", "[", 
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
           RowBox[{"x", "[", "2", "]"}]}], "]"}], "-", 
         RowBox[{"S1hat", "[", 
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], ",", " ", "bmin", ",", " ", 
           RowBox[{"x", "[", "2", "]"}]}], "]"}]}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"S1hat", "[", 
           RowBox[{
            RowBox[{"x", "[", "7", "]"}], ",", "bmin", ",", " ", 
            RowBox[{"x", "[", "2", "]"}]}], "]"}]}], " ", 
         RowBox[{"S1hat", "[", 
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], ",", "b", ",", "t"}], "]"}]}], " ", 
        "+", " ", 
        RowBox[{
         RowBox[{"S1hat", "[", 
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
           RowBox[{"x", "[", "2", "]"}]}], "]"}], " ", 
         RowBox[{"S1hat", "[", 
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], ",", "bmin", ",", "t"}], "]"}]}]}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"etatot", "[", 
      RowBox[{"bmin_", ",", "b_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      FractionBox["1", 
       RowBox[{" ", 
        RowBox[{
         RowBox[{"S1hat", "[", 
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
           RowBox[{"x", "[", "2", "]"}]}], "]"}], "-", 
         RowBox[{"S1hat", "[", 
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], ",", " ", "bmin", ",", " ", 
           RowBox[{"x", "[", "2", "]"}]}], "]"}]}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"S1hat", "[", 
           RowBox[{
            RowBox[{"x", "[", "7", "]"}], ",", " ", "bmin", ",", " ", 
            RowBox[{"x", "[", "2", "]"}]}], "]"}]}], " ", 
         RowBox[{"eta", "[", 
          RowBox[{"b", ",", " ", 
           RowBox[{"x", "[", "7", "]"}]}], "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"S1hat", "[", 
          RowBox[{
           RowBox[{"x", "[", "7", "]"}], ",", "b", ",", " ", 
           RowBox[{"x", "[", "2", "]"}]}], "]"}], " ", 
         RowBox[{"eta", "[", 
          RowBox[{"bmin", ",", " ", 
           RowBox[{"x", "[", "7", "]"}]}], "]"}]}]}], ")"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.667140900297183*^9, 3.667141003742837*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.667140799776566*^9, 3.667140801377015*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"etatot", "[", 
     RowBox[{"17.5", ",", "b"}], "]"}], "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "3", "]"}], 
      RowBox[{"Sqrt", "[", "3", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"17.5", ",", "b", ",", 
        RowBox[{"x", "[", "3", "]"}]}], "]"}], "]"}]}], " ", "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Sqrt", "[", "4", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"17.5", ",", "b", ",", 
        RowBox[{"x", "[", "4", "]"}]}], "]"}], "]"}]}], "-", "  ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "5", "]"}], 
      RowBox[{"Sqrt", "[", "5", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"17.5", ",", "b", ",", 
        RowBox[{"x", "[", "5", "]"}]}], "]"}], "]"}]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", "19.2", ",", " ", "22.0", ",", " ", "0.1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "None"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.66714104335787*^9, 3.667141125230919*^9}, {
  3.667146259206285*^9, 3.667146267325835*^9}, {3.667148781957691*^9, 
  3.667148789196928*^9}, {3.6671488439545593`*^9, 3.667148873241934*^9}, {
  3.667152757550708*^9, 3.667152793373938*^9}, {3.667153297496607*^9, 
  3.667153320485914*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQbQwBDjpTr8seW8R94OwZIPAxdgiqmRms5MZ1IA0M
jB22/tryWmU3xwEGEGgwdrgm8iP7Dxv7gZlgYOzgwFkUv1iP9QDYtM3GDo/D
z3A8NWOGmHfG2EFl/t7sJBVGiHnPjB3aBPxv837/ux9sHoOJQ8HX87qvGn7u
BxsnaeIgahTyQU/x+36I80wcns1uuNN/+Ot+iPtMHLjW7HLQNfqyH+I+E4cG
Cd/Ss7mfIOY1mDhsMLWJtyz+ADFvponDbqPnbw9Hf4KYt9nEwWbl66nLA79A
zDtj4nBjn8ct19TvEPOemThcY9jKvVH7F9R9pg73hL09m+f9gbrP1EHknOfr
uu3/oO4zdbhq2mbuZsEADT9Th5AjmyVvP2SAhp+pQ0PI1EcTQhmh4Wfq8HNS
vH3zBMYDs8AGmjocf8R88mM/IzT8TB0WrznMNimAERp+pg7vzlw7f/E81Lxn
pg69rUyi9VwMEPMYzBz+vGS7tu/X3/0ABqbRlw==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{19.2, -3.4544794398704166`},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{19.2, 22.}, {-3.4544794398704166`, -1.0281308860897802`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.667144296289966*^9, 3.6671476336630917`*^9, 
  3.6671516554784527`*^9, 3.667153084473638*^9, 
  3.667153558852805*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
3x7/IiCQ9C9sZxMZ\
\>"]]
}, Open  ]],

Cell["", "Text"],

Cell["\<\
With log(3)/2pi:


\
\>", "Text",
 CellChangeTimes->{{3.667156227427557*^9, 3.667156259756626*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"id3", "[", 
     RowBox[{"b_", ",", "d_"}], "]"}], " ", ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"S1hat", "[", 
        RowBox[{"d", ",", "b", ",", " ", 
         RowBox[{"x", "[", "3", "]"}]}], "]"}], " ", "\[GreaterEqual]", " ", 
       "0"}], " ", ",", "1.0", " ", ",", " ", 
      RowBox[{"-", "1.0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.66715626686795*^9, 3.667156278775948*^9}, 
   3.667156366798394*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"id3", "[", 
    RowBox[{"b", ",", 
     RowBox[{"x", "[", "7", "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", "17", ",", "23", ",", "0.1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.667152653824397*^9, 3.6671526881706753`*^9}, 
   3.667156179830904*^9, 3.667156289665222*^9, 3.667156348939189*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{17., -1.}, {17., 0}}, {{17.1, -1.}, {17.1, 0}}, {{
        17.2, -1.}, {17.2, 0}}, {{17.3, -1.}, {17.3, 0}}, {{17.4, -1.}, {
        17.4, 0}}, {{17.5, -1.}, {17.5, 0}}, {{17.6, -1.}, {17.6, 0}}, {{
        17.7, -1.}, {17.7, 0}}, {{17.8, -1.}, {17.8, 0}}, {{17.9, -1.}, {
        17.9, 0}}, {{18., -1.}, {18., 0}}, {{18.1, -1.}, {18.1, 0}}, {{
        21.1, -1.}, {21.1, 0}}, {{21.2, -1.}, {21.2, 0}}, {{21.3, -1.}, {
        21.3, 0}}, {{21.4, -1.}, {21.4, 0}}, {{21.5, -1.}, {21.5, 0}}, {{
        21.6, -1.}, {21.6, 0}}, {{21.7, -1.}, {21.7, 0}}, {{21.8, -1.}, {
        21.8, 0}}, {{21.9, -1.}, {21.9, 0}}, {{22., -1.}, {22., 0}}, {{
        22.1, -1.}, {22.1, 0}}, {{22.2, -1.}, {22.2, 0}}, {{22.3, -1.}, {
        22.3, 0}}, {{22.4, -1.}, {22.4, 0}}, {{22.5, -1.}, {22.5, 0}}, {{
        22.6, -1.}, {22.6, 0}}, {{22.7, -1.}, {22.7, 0}}, {{22.8, -1.}, {
        22.8, 0}}, {{22.9, -1.}, {22.9, 0}}, {{23., -1.}, {23., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{18.2, 1.}, {18.2, 0}}, {{18.3, 1.}, {18.3, 0}}, {{18.4, 1.}, {
        18.4, 0}}, {{18.5, 1.}, {18.5, 0}}, {{18.6, 1.}, {18.6, 0}}, {{18.7, 
        1.}, {18.7, 0}}, {{18.8, 1.}, {18.8, 0}}, {{18.9, 1.}, {18.9, 0}}, {{
        19., 1.}, {19., 0}}, {{19.1, 1.}, {19.1, 0}}, {{19.2, 1.}, {
        19.2, 0}}, {{19.3, 1.}, {19.3, 0}}, {{19.4, 1.}, {19.4, 0}}, {{19.5, 
        1.}, {19.5, 0}}, {{19.6, 1.}, {19.6, 0}}, {{19.7, 1.}, {19.7, 0}}, {{
        19.8, 1.}, {19.8, 0}}, {{19.9, 1.}, {19.9, 0}}, {{20., 1.}, {
        20., 0}}, {{20.1, 1.}, {20.1, 0}}, {{20.2, 1.}, {20.2, 0}}, {{20.3, 
        1.}, {20.3, 0}}, {{20.4, 1.}, {20.4, 0}}, {{20.5, 1.}, {20.5, 0}}, {{
        20.6, 1.}, {20.6, 0}}, {{20.7, 1.}, {20.7, 0}}, {{20.8, 1.}, {
        20.8, 0}}, {{20.9, 1.}, {20.9, 0}}, {{21., 1.}, {21., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxd0cEJAjEQheHBLvZoCToxnkQLyMkSBHO1hbQR20gBNhDbyNkSXHdkh/cG
lvBfPh7s9va43jcicpq/32u3u9j7eT3rfJO3Luf97vMl77yc9/IU8ip5jbxO
3iBP9rRvj56ufbZ93rbP2/Z52z5v20deJ2+QJ4repOipopcUvazoFfIqeY28
Tt4gTwLtC+hpQC8F9HJAr5BXyWvkdfIGeXKgfWv//6+37fO2fd62z9v2kdfI
6+QN8iSiN0X0NKKXIno5olfIq+Q18jp5gzw5rv0FPJcIPg==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{17., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{17., 23.}, {-1., 1.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.667156310767096*^9, 3.667156358862253*^9, 
  3.6671563927585707`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"S1hat", "[", 
    RowBox[{
     RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
     RowBox[{"x", "[", "3", "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", "17", ",", "23", ",", " ", "0.1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.667570859740453*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{17., -1.5121744797528838`}, {17., 0}}, {{
         17.1, -1.4498452070412122`}, {17.1, 0}}, {{
         17.2, -1.3700345374829266`}, {17.2, 0}}, {{
         17.3, -1.2737048058554696`}, {17.3, 0}}, {{
         17.4, -1.1620175239099368`}, {17.4, 0}}, {{
         17.5, -1.0363193750033592`}, {17.5, 0}}, {{
         17.6, -0.8981259737591193}, {17.6, 0}}, {{
         17.7, -0.7491035924438043}, {17.7, 0}}, {{
         17.8, -0.5910490683923361}, {17.8, 0}}, {{
         17.9, -0.4258681386956778}, {17.9, 0}}, {{
         18., -0.2555524588134403}, {18., 0}}, {{
         18.1, -0.08215559338072742}, {18.1, 0}}, {{
         21.1, -0.16246353566700697`}, {21.1, 0}}, {{
         21.2, -0.3346954458935916}, {21.2, 0}}, {{
         21.3, -0.5028919209166107}, {21.3, 0}}, {{
         21.4, -0.6650249610504563}, {21.4, 0}}, {{
         21.5, -0.8191396693567612}, {21.5, 0}}, {{
         21.6, -0.963377822393482}, {21.6, 0}}, {{
         21.7, -1.0960002760369596`}, {21.7, 0}}, {{
         21.8, -1.2154079351045826`}, {21.8, 0}}, {{
         21.9, -1.3201610350505846`}, {21.9, 0}}, {{
         22., -1.4089965025866402`}, {22., 0}}, {{
         22.1, -1.4808431859763143`}, {22.1, 0}}, {{
         22.2, -1.5348347715642323`}, {22.2, 0}}, {{
         22.3, -1.5703202301608452`}, {22.3, 0}}, {{
         22.4, -1.586871668142279}, {22.4, 0}}, {{22.5, -1.584289488020169}, {
         22.5, 0}}, {{22.6, -1.5626047959648877`}, {22.6, 0}}, {{
         22.7, -1.5220790280311183`}, {22.7, 0}}, {{
         22.8, -1.4632007986542768`}, {22.8, 0}}, {{
         22.9, -1.386680010116003}, {22.9, 0}}, {{
         23., -1.2934339662770582`}, {23., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{18.2, 0.09223175003657769}, {18.2, 0}}, {{18.3, 
         0.26550692666543063`}, {18.3, 0}}, {{18.4, 0.4355807071364609}, {
         18.4, 0}}, {{18.5, 0.6004024679899855}, {18.5, 0}}, {{18.6, 
         0.7579849158044287}, {18.6, 0}}, {{18.7, 0.9064280480567979}, {
         18.7, 0}}, {{18.8, 1.043942061446654}, {18.8, 0}}, {{18.9, 
         1.1688689307394535`}, {18.9, 0}}, {{19., 1.2797023996392263`}, {
         19., 0}}, {{19.1, 1.375106140558726}, {19.1, 0}}, {{19.2, 
         1.4539298664052172`}, {19.2, 0}}, {{19.3, 1.5152231985907512`}, {
         19.3, 0}}, {{19.4, 1.5582471254725516`}, {19.4, 0}}, {{19.5, 
         1.5824829116275685`}, {19.5, 0}}, {{19.6, 1.587638351953914}, {
         19.6, 0}}, {{19.7, 1.5736512941599041`}, {19.7, 0}}, {{19.8, 
         1.5406954719598722`}, {19.8, 0}}, {{19.9, 1.4891530513205657`}, {
         19.9, 0}}, {{20., 1.4196606788866468`}, {20., 0}}, {{20.1, 
         1.3330511499468105`}, {20.1, 0}}, {{20.2, 1.2303687260958047`}, {
         20.2, 0}}, {{20.3, 1.1128514613575755`}, {20.3, 0}}, {{20.4, 
         0.9819162749598265}, {20.4, 0}}, {{20.5, 0.8391418683729078}, {
         20.5, 0}}, {{20.6, 0.6862496913632617}, {20.6, 0}}, {{20.7, 
         0.5250831869950384}, {20.7, 0}}, {{20.8, 0.35758556589380275`}, {
         20.8, 0}}, {{20.9, 0.18577637720021456`}, {20.9, 0}}, {{21., 
         0.011727159510769237`}, {21., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJw103lI03EYx/E1RAuFUgk1M61ACRH5nVpke4aUlakViSUUOo8UE9OIMg1D
ChRLcqhrm7B/yjJs09bs0mZZCDlNkhIbHnjMK293aWrL79MDYwy2Ny/4fbZX
knM2TSgQCCIcr3/v5CjQBToP9FM2vULuOB8Ket2PjzykrXpm8yjw8OyKr5s2
6zsNjjtFQejdSye9k5f16ZtHwaGgSY1KtqjfzN2hQFizpmqrnCc9OQVZ+Sp1
Xstv0tNSIJUZvZ/ZxknPQMGNXEnz4OQw6Zko2NnlfPWK2Eh6Aho2XMRaW2I3
+mhIWmzdF7hVhz4aWs9vXy+qeS0iPhoKZ9607VjvFhEfDQrjiunBkFFEfDS8
vF9+uIgfEREfDU5vXaoyxRMi4qPB49H31OtbZkjP4Pj+6RjZH+086ZlocJdk
T2i0i6QnYKBfSB2sy18mPR8GrE9HonMEFtJjGCjg1JboSCv6GKi+LFYnHrGh
jwFpn6a0ctaGPgbidOvyvjN29DEQGWW7aU23o48BV/n7lfoQO/oYSFFKoxtq
sWdi4ECFJFDaY0UfC91tWr/ZJgv6WFh9Hpsbcs6MPhaKH2/bI9MsoY+FRsnt
+IiuBfSxkKFwVRuz5tDHgmdTsBv8mkIfC/7X6iY/msfQx0Jowi1xQecQ+lgI
P/apQj38E32OzwPh7L32dvRxkLhR/SrDqQR9HHxrjphSdHzG58tB/HR5Xm3W
D9wfB8Ux4YYGryHcHweRJQnZw1FjuD8OdnUkpKXyU7g/DlZHfd+t9czi/jgo
/DJYFVa6gPvjIDb4hCwubwn3x8GL2ZyQZH8z7o+HJ8r6KVGZBffHg+vFUVVJ
4///Bw+63V/H1eU29PHwQenmuzXAjj4eWqb7ynpS7OjjIcUraE50wY4+HoSD
S8PZAjv6eIjbby7NScSegQe/cGXE0Uwr+hy/z+1N6g21oC8MTAFl3eONy/q/
lTfB1g==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{17., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{17., 23.}, {-1.586871668142279, 1.587638351953914}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.667570943480949*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.667156177509254*^9, 3.6671561775239363`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.667152713986216*^9, 3.667152723538005*^9}, 
   3.667156175214713*^9, {3.667156465696637*^9, 3.667156499291175*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Stotfourier", "[", 
     RowBox[{"bmin_", ",", "b_", ",", "t_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     FractionBox["1", 
      RowBox[{" ", 
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "bmin", ",", " ", 
          RowBox[{"x", "[", "3", "]"}]}], "]"}], "-", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
          RowBox[{"x", "[", "3", "]"}]}], "]"}]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "bmin", ",", " ", 
          RowBox[{"x", "[", "3", "]"}]}], "]"}], " ", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "b", ",", "t"}], "]"}]}], " ", 
       "-", " ", 
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
          RowBox[{"x", "[", "3", "]"}]}], "]"}], " ", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "bmin", ",", "t"}], "]"}]}]}], 
      ")"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"etatot", "[", 
     RowBox[{"bmin_", ",", "b_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     FractionBox["1", 
      RowBox[{" ", 
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "bmin", ",", " ", 
          RowBox[{"x", "[", "3", "]"}]}], "]"}], "-", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", 
          RowBox[{"x", "[", "3", "]"}]}], "]"}]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "bmin", ",", " ", 
          RowBox[{"x", "[", "3", "]"}]}], "]"}], " ", 
        RowBox[{"eta", "[", 
         RowBox[{"b", ",", " ", 
          RowBox[{"x", "[", "7", "]"}]}], "]"}]}], " ", "-", " ", 
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "b", ",", " ", 
          RowBox[{"x", "[", "3", "]"}]}], "]"}], " ", 
        RowBox[{"eta", "[", 
         RowBox[{"bmin", ",", " ", 
          RowBox[{"x", "[", "7", "]"}]}], "]"}]}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"etaplot", "[", 
    RowBox[{"bmin_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"etatot", "[", 
     RowBox[{"bmin", ",", "b"}], "]"}], "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Sqrt", "[", "2", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", 
        RowBox[{"x", "[", "2", "]"}]}], "]"}], "]"}]}], " ", "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Sqrt", "[", "4", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", 
        RowBox[{"x", "[", "4", "]"}]}], "]"}], "]"}]}], "-", "  ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "5", "]"}], 
      RowBox[{"Sqrt", "[", "5", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", 
        RowBox[{"x", "[", "5", "]"}]}], "]"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.667156506749539*^9, 3.667156513344347*^9}, 
   3.6675708781646433`*^9, {3.667571148135563*^9, 3.6675712167131987`*^9}, {
   3.6675714994507017`*^9, 3.667571569612322*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.667156475317342*^9, 3.667156481794374*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"etaplot", "[", 
    RowBox[{"18.87", ",", "b"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", "21.12", ",", " ", "21.13", ",", " ", "0.001"}], "}"}], 
   ",", 
   RowBox[{"Filling", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "None"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.667571238457996*^9, 3.667571285839464*^9}, {
   3.6675715788868523`*^9, 3.6675715933387403`*^9}, {3.667572264651321*^9, 
   3.667572279408739*^9}, 3.667572351515025*^9, {3.667592473463097*^9, 
   3.667592525801016*^9}, {3.667593381954805*^9, 3.667593415490049*^9}, {
   3.667593812853876*^9, 3.667593871299007*^9}, {3.667593902379012*^9, 
   3.6675939077420464`*^9}, 3.667594005385467*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{21.12, -0.0098837369442627}, {
     21.121000000000002`, -0.007749260749896125}, {
     21.122, -0.005617231971575487}, {21.123, -0.0034876403097543474`}, {
     21.124000000000002`, -0.0013604756935976514`}, {21.125, 
     0.0007642717322620118}, {21.126, 0.0028866119526995693`}, {
     21.127000000000002`, 0.005006554463684809}, {21.128, 
     0.007124110361969249}, {21.129, 0.009239285121184437}, {
     21.130000000000003`, 0.011352097966088825`}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{21.12, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{21.12, 21.130000000000003`}, {-0.0098837369442627, 
   0.011352097966088825`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.667571455220429*^9, 3.667571740185542*^9, 
  3.6675723345100594`*^9, 3.66757257577887*^9, 3.667592534900674*^9, 
  3.667593259722088*^9, 3.667593789388908*^9, 3.667593894240498*^9, 
  3.667593970970755*^9, 3.667594111906394*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"etaplot", "[", 
  RowBox[{"18.87", ",", "21.125"}], "]"}]], "Input",
 CellChangeTimes->{{3.6675941668898706`*^9, 3.667594168790704*^9}}],

Cell[BoxData["0.0007642717322620118`"], "Output",
 CellChangeTimes->{3.667594179375367*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"etaplotKS", "[", 
    RowBox[{"bmin_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"etatot", "[", 
     RowBox[{"bmin", ",", "b"}], "]"}], "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Sqrt", "[", "2", "]"}]], 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{"7", "/", "64"}], ")"}]}], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", 
        RowBox[{"x", "[", "2", "]"}]}], "]"}], "]"}]}], " ", "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Sqrt", "[", "4", "]"}]], 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{"14", "/", "64"}], ")"}]}], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", 
        RowBox[{"x", "[", "4", "]"}]}], "]"}], "]"}]}], "-", "  ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "5", "]"}], 
      RowBox[{"Sqrt", "[", "5", "]"}]], 
     RowBox[{"5", "^", 
      RowBox[{"(", 
       RowBox[{"7", "/", "64"}], ")"}]}], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", 
        RowBox[{"x", "[", "5", "]"}]}], "]"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.667594616113021*^9, 3.667594639616309*^9}, {
  3.667594701609974*^9, 3.667594723769417*^9}, {3.667594801380476*^9, 
  3.667594802204895*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"etaplotKS", "[", 
    RowBox[{"18.87", ",", "b"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", "21", ",", " ", "22.6", ",", " ", "0.1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "None"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.667594759117197*^9, 3.667594774931451*^9}, {
  3.667594806439313*^9, 3.6675948066871643`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{21., -0.6796282870952459}, {21.1, -0.3695853927395599}, {
     21.2, -0.10116555876797095`}, {21.3, 0.03533705546039967}, {21.4, 
     0.09531892231711625}, {21.5, 0.1704649779337451}, {21.6, 
     0.2592140554023428}, {21.7, 0.36090880808308434`}, {21.8, 
     0.4749310285833518}, {21.9, 0.49845191102641734`}, {22., 
     0.48299619217365397`}, {22.1, 0.4856759365711525}, {22.2, 
     0.5074829936199261}, {22.3, 0.5499162618797417}, {22.4, 
     0.6150177179785725}, {22.5, 0.7054435272751702}, {22.6, 
     0.8245761283099388}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{21., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{21., 22.6}, {-0.6796282870952459, 0.8245761283099388}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6675948123018513`*^9, 3.6675949668345346`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"etaplotKS", "[", 
  RowBox[{"18.87", ",", "21.245"}], "]"}]], "Input",
 CellChangeTimes->{{3.667595096781982*^9, 3.667595116592477*^9}, {
  3.667595147810848*^9, 3.6675952341320047`*^9}}],

Cell[BoxData["0.009628246441440336`"], "Output",
 CellChangeTimes->{
  3.667595127222254*^9, {3.667595160253593*^9, 3.667595246056168*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"etaplotKS", "[", 
    RowBox[{"bmin", ",", "21.245"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"bmin", ",", "18.2", ",", " ", "21", ",", " ", "0.1"}], "}"}], 
   ",", 
   RowBox[{"Filling", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "None"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.667595273962447*^9, 3.6675953108491583`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQbQwGRg4vhUN2P5nEc+DsGSDwMXJwS//xO2LOy/1p
YGDk4L2MxUXg5IP9DCDQYOTQY/LXW/rE1f0zwcDIQcOc17l1y6n9YOM2Gzks
+Pjd7ozxnv1g884YOTSwOGlYBi2EmPfMyIGhvnbP82XV9mDzGIwdGJYo/px0
vhRinqSxw4FEP9vpmVMg5hkbO0zYHn6S5+oiiHk+xg4LXrM+uNuwBuo+Y4cN
bMExaZM3Q91n7FBhvFKlL3Yn1H1A8+bmbuWcvR/qPmOHlGeWv3eqHIa6z9ih
5ODLOYc2H4O6z9hhxqTX3wqqTkHMYzBxqOi7M4Wr4hzUfSYOQUy3eT+EX4S6
z8RBbVtyDNeEy1D3mTjIRExht3pyFeo+EweTK8f7H0XcgLrPxEGAe6p54Ktb
+2eBDTRx2KPs9rBh3l2o+0wcoqQ6JhyyfAB1n4nDlUV9P622PYS6z8ThiGOW
9lXXx1D3mTpkHQrJ+fPyyX4ASs/WFg==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{18.2, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{18.2, 21.}, {-1.2278537099123707`, 0.006750970096476072}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.667595597319407*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"etaplotUN", "[", 
    RowBox[{"bmin_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"etatot", "[", 
     RowBox[{"bmin", ",", "b"}], "]"}], "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Sqrt", "[", "2", "]"}]], 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", 
        RowBox[{"x", "[", "2", "]"}]}], "]"}], "]"}]}], " ", "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Sqrt", "[", "4", "]"}]], "2", 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", 
        RowBox[{"x", "[", "4", "]"}]}], "]"}], "]"}]}], "-", "  ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "5", "]"}], 
      RowBox[{"Sqrt", "[", "5", "]"}]], 
     RowBox[{"5", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", 
        RowBox[{"x", "[", "5", "]"}]}], "]"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.667595728841386*^9, 3.667595766792321*^9}, {
  3.667595838161171*^9, 3.66759583833286*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"etaplotUN", "[", 
    RowBox[{"19.7", ",", "b"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", "21.5", ",", " ", "22", ",", " ", "0.02"}], "}"}], ",", 
   
   RowBox[{"Filling", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "None"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.667595948589425*^9, 3.6675959487552357`*^9}, {
   3.667596168605392*^9, 3.6675961857184467`*^9}, {3.6675964547744913`*^9, 
   3.667596482213244*^9}, 3.667596678893777*^9, {3.667596964111341*^9, 
   3.667597003640827*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJwlkVsow1EYwJdIlFySRKNFuWfiW4w5X2pN4cFI0qSUJS+2JCKXBxQPppBQ
csu9PfBC4tQ8kNsubEOslijmQURy/3/86uu8/c7vfEdSXa+u8RKJRBHC0PlH
J6CqKm3+4+OGd3uK16O6Ad/kQamS/Wvu75zRKfoAHxvF/Uljbm4wvcRrDICx
I+OJ4WcuHmpUuVuGAN9bXdKQjgs+NkoATs/JNhYTHTyahBOAXpL7rkmHlc/q
FIIS8HNYPNgWcMATNIJxAbBWn+wIbDBx0oUaAS29w8lZm2s8nVgDnJzalpsP
u7gQJwgBT8WfV9bvFUY23RbgrUXe3jTA2Q7lmQCblVpzZNEeyyfdLmBPcIay
0nbMjg4JQKVeby9dsjE1Ca2ADXEWqfnJzui5/k7Am1XfYmPeOaO8+EvA9pjc
TEvZGSOdyi3cf8Q9RoWTaYlbQG9Xjl+/1MEeaH0eQHXUj6Egxc70FPgI6FMh
e8rMPmWvlPcCWF43+NVZcsJaSfcOWHgyd7fVbGP/HyLDCc1zmGzZyn4BOWXJ
mQ==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{21.5, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{21.5, 22.}, {-0.6870096459851788, 0.3946948806104003}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.667595944999942*^9, 3.667596094661034*^9, 
  3.66759643294944*^9, 3.667596671844788*^9, 3.667596925806205*^9, 
  3.6675972309336443`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"etaplotUN", "[", 
  RowBox[{"19.7", ",", "21.705"}], "]"}]], "Input",
 CellChangeTimes->{{3.667597251175043*^9, 3.667597259372995*^9}}],

Cell[BoxData["0.006552628332459731`"], "Output",
 CellChangeTimes->{3.66759727100804*^9}]
}, Open  ]],

Cell["\<\
New approach with putting together p = 2 and p = 4:

\
\>", "Text",
 CellChangeTimes->{{3.6686806895994387`*^9, 3.668680718535434*^9}}],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pol", "[", 
    RowBox[{"d_", ",", "b_", ",", "y_"}], "]"}], " ", ":=", " ", 
   RowBox[{"2", "*", 
    RowBox[{
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Sqrt", "[", "4", "]"}]], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"S1hat", "[", 
        RowBox[{"d", ",", "b", ",", 
         RowBox[{"x", "[", "2", "]"}]}], "]"}], 
       RowBox[{"Sqrt", "[", "2", "]"}], "y"}], " ", "+", 
      RowBox[{
       RowBox[{"S1hat", "[", 
        RowBox[{"d", ",", "b", ",", 
         RowBox[{"x", "[", "4", "]"}]}], "]"}], 
       RowBox[{"y", "^", "2"}]}]}], " ", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.668680754192324*^9, 3.66868093918481*^9}, {
   3.668681432120328*^9, 3.6686814378795676`*^9}, {3.66868220188582*^9, 
   3.6686822109168234`*^9}, 3.668683989607395*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gain", "[", 
    RowBox[{"d_", ",", "b_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"S1hat", "[", 
       RowBox[{"d", ",", "b", ",", 
        RowBox[{"x", "[", "2", "]"}]}], "]"}], "^", "2"}], 
     RowBox[{"2", 
      RowBox[{"S1hat", "[", 
       RowBox[{"d", ",", "b", ",", 
        RowBox[{"x", "[", "4", "]"}]}], "]"}]}]], "2", "*", 
    FractionBox[
     RowBox[{"Log", "[", "2", "]"}], 
     RowBox[{"Sqrt", "[", "4", "]"}]]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.668680944473897*^9, 3.668680975438221*^9}, {
   3.6686811011717777`*^9, 3.6686811045126224`*^9}, {3.6686811361671925`*^9, 
   3.6686811741743307`*^9}, {3.6686812046476583`*^9, 3.668681215113842*^9}, {
   3.6686813408450747`*^9, 3.668681347126647*^9}, 3.6686816065663214`*^9, {
   3.6686817876595373`*^9, 3.6686818138527184`*^9}, {3.668682136363565*^9, 
   3.6686821440114374`*^9}, {3.66868217457918*^9, 3.6686821918129983`*^9}, {
   3.6686822272214108`*^9, 3.6686822957969284`*^9}, {3.6686823432930794`*^9, 
   3.6686823720686207`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"loss", "[", 
     RowBox[{"d_", ",", "b_"}], "]"}], " ", ":=", " ", 
    RowBox[{"MaxValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "*", 
         FractionBox[
          RowBox[{"Log", "[", "2", "]"}], 
          RowBox[{"Sqrt", "[", "4", "]"}]], 
         RowBox[{"S1hat", "[", 
          RowBox[{"d", ",", "b", ",", 
           RowBox[{"x", "[", "4", "]"}]}], "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", "t", "]"}], "+", 
            FractionBox[
             RowBox[{"S1hat", "[", 
              RowBox[{"d", ",", "b", ",", 
               RowBox[{"x", "[", "2", "]"}]}], "]"}], 
             RowBox[{
              RowBox[{"Sqrt", "[", "2", "]"}], 
              RowBox[{"S1hat", "[", 
               RowBox[{"d", ",", "b", ",", 
                RowBox[{"x", "[", "4", "]"}]}], "]"}]}]]}], ")"}], "^", 
          "2"}]}], ",", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "<", " ", "t", "\[LessEqual]", " ", 
         "\[Pi]"}]}], "}"}], ",", "t"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.668682388692768*^9, 3.6686823988827353`*^9}, {
   3.668682449235261*^9, 3.6686825670339727`*^9}, {3.6686826336671104`*^9, 
   3.6686826534443035`*^9}, {3.6686827024826756`*^9, 
   3.6686827594225297`*^9}, {3.6686831483768787`*^9, 
   3.6686832187178745`*^9}, {3.668684318056582*^9, 3.668684336152707*^9}, {
   3.6686843677806377`*^9, 3.668684369807373*^9}, 3.668684456691163*^9, {
   3.6686845480954957`*^9, 3.6686845591046934`*^9}, {3.6686846673638477`*^9, 
   3.6686847010237722`*^9}, 3.6686847361315956`*^9, 3.6686849096188564`*^9, {
   3.6686849842303667`*^9, 3.668685020889918*^9}, {3.668685065683079*^9, 
   3.668685142275075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gain", "[", 
   RowBox[{
    RowBox[{"x", "[", "7", "]"}], ",", "21.08"}], "]"}], " ", "-", " ", 
  RowBox[{"loss", "[", 
   RowBox[{
    RowBox[{"x", "[", "7", "]"}], ",", "21.08"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.66868152900038*^9, 3.66868152927734*^9}, 
   3.668681609758046*^9, {3.6686827752578*^9, 3.6686827842340345`*^9}, 
   3.6686854416813307`*^9, {3.6686854796656756`*^9, 3.6686854805294657`*^9}, {
   3.6686855506577945`*^9, 3.668685557792862*^9}, {3.668685795160031*^9, 
   3.668685797376094*^9}}],

Cell[BoxData[
 RowBox[{"-", "2.9147984403935094`"}]], "Output",
 CellChangeTimes->{3.668685443999653*^9, 3.6686854835772085`*^9, 
  3.668685560171788*^9, 3.6686858006643143`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"-", "2"}], "*", 
   FractionBox[
    RowBox[{"Log", "[", "2", "]"}], 
    RowBox[{"Sqrt", "[", "4", "]"}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"S1hat", "[", 
        RowBox[{
         RowBox[{"x", "[", "7", "]"}], ",", "21.08", ",", 
         RowBox[{"x", "[", "2", "]"}]}], "]"}], "]"}], 
      RowBox[{"Sqrt", "[", "2", "]"}]}], " ", "+", 
     RowBox[{"Abs", "[", 
      RowBox[{"S1hat", "[", 
       RowBox[{
        RowBox[{"x", "[", "7", "]"}], ",", "21.08", ",", 
        RowBox[{"x", "[", "4", "]"}]}], "]"}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.668681756315742*^9, 3.668681756330697*^9}, {
   3.66868279639505*^9, 3.668682804729001*^9}, {3.6686829592330527`*^9, 
   3.6686830928909235`*^9}, {3.668684063451687*^9, 3.6686840847260838`*^9}, {
   3.6686844612448034`*^9, 3.668684473701149*^9}, {3.6686854633773303`*^9, 
   3.6686855021290607`*^9}, {3.668685565586871*^9, 3.6686855710261555`*^9}, 
   3.668685765352049*^9, {3.6686858044561157`*^9, 3.6686858059671764`*^9}}],

Cell[BoxData[
 RowBox[{"-", "2.9147984403935134`"}]], "Output",
 CellChangeTimes->{{3.6686850858597393`*^9, 3.668685146227399*^9}, {
   3.668685465991991*^9, 3.6686855048563814`*^9}, 3.668685572634063*^9, 
   3.6686857670666513`*^9, 3.6686858075915327`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eta", "[", 
     RowBox[{"b", ",", 
      RowBox[{"x", "[", "5", "]"}]}], "]"}], "-", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "3", "]"}], 
      RowBox[{"Sqrt", "[", "3", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"S1hat", "[", 
       RowBox[{
        RowBox[{"x", "[", "5", "]"}], ",", "b", ",", 
        RowBox[{"x", "[", "3", "]"}]}], "]"}], "]"}]}], "+", 
    RowBox[{"gain", "[", 
     RowBox[{
      RowBox[{"x", "[", "5", "]"}], ",", "b"}], "]"}], "-", 
    RowBox[{"loss", "[", 
     RowBox[{
      RowBox[{"x", "[", "5", "]"}], ",", "b"}], "]"}]}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "19.0", ",", "21.3", ",", "0.1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6686811788977904`*^9, 3.6686811837257824`*^9}, {
   3.668681350901207*^9, 3.668681419517974*^9}, {3.668681485711207*^9, 
   3.6686815423700294`*^9}, 3.6686836417115116`*^9, {3.668686509417869*^9, 
   3.6686865256530914`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQHGDt9XJx58cprnwKyZQCBp7GCkbP8xTYr7gDEE
OExnyG1a7sB54OwZIPAxdrj8O1bjijX7gTQwMHaQ9tmychIn6wGwcQ3GDqod
yy/8aWSBmDfT2CGPpSdc/R8LxLzNxg47rwu+UHFmhZh3xthB4ZaOooMvK8S8
Z8YODIdd9tdIQs1jMHFw3qj+eP5SqHmSJg6/ItOWmn5ghrrPxEHOm+vR5B9M
UPeZODjovtK7tY8R6j4TBwaL77/fOTNA3WfisDgp4MJnob/7Ie4zcbh4hmnv
NuWf+yHuM3HYsN3LyfnAl/0Q95k46Pko9r29/34/xH0mDgf0Z+5eUPZ0P8R9
pg4RK8NCzdZfgZgnaepwYMPtrJb2ZfYQ95k6OHCnlHvFnrCHuA/Ir/MNUDt/
xh4AFJmkqA==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{19., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{19., 21.3}, {-3.599557410042958, 0.22507170601874016`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6686865680826087`*^9}]
}, Open  ]],

Cell[BoxData["\n"], "Input",
 CellChangeTimes->{{3.668681592872423*^9, 3.66868159578232*^9}, 
   3.66868364829423*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eta", "[", 
     RowBox[{"b", ",", 
      RowBox[{"x", "[", "7", "]"}]}], "]"}], "-", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "3", "]"}], 
      RowBox[{"Sqrt", "[", "3", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"S1hat", "[", 
       RowBox[{
        RowBox[{"x", "[", "7", "]"}], ",", "b", ",", 
        RowBox[{"x", "[", "3", "]"}]}], "]"}], "]"}]}], "+", 
    RowBox[{"gain", "[", 
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], ",", "b"}], "]"}], "-", 
    RowBox[{"loss", "[", 
     RowBox[{
      RowBox[{"x", "[", "7", "]"}], ",", "b"}], "]"}], " ", "-", " ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "5", "]"}], 
      RowBox[{"Sqrt", "[", "5", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"S1hat", "[", 
       RowBox[{
        RowBox[{"x", "[", "7", "]"}], ",", "b", ",", 
        RowBox[{"x", "[", "5", "]"}]}], "]"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "19.0", ",", "21.3", ",", "0.1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6686838552167764`*^9, 3.6686838948488646`*^9}, {
  3.668683927817939*^9, 3.668683957952107*^9}, {3.6686858783769107`*^9, 
  3.6686859388863897`*^9}, {3.6686864983128605`*^9, 3.6686865023362937`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQHGDmtV+uca/eU9MGsmEEgaOwhyLQi2FOU9YAwB
Dg9Kg3guXOY+cPYMEPgYO1RP712k8pLrQBoYGDscPlr9Oo2L5wDYuAZjhyv+
Ed9f7uWBmDfT2KEnJuRi+j8eiHmbjR0YU+W+Lj7BAzHvjLHDFPugohJpHoh5
z4wdmH87Ma/5zgUxj8HEwSFlxfFX8ZxQ95k4eIiLb18VyQ51n4mD0ms7hnmv
WKDuM3HIPh58pUmKCeo+EweXyrdfepf/2w9xn4lDzDGB7Q3vfu+HuA/Ivxiq
kTnlx36I+0wcTmx6t9Rlypf9EPeZOMzYE/ss/u77/RD3mTj84HfuuOL9FGIe
g6lDAlOI28dflyDmSZo6PPipUhiRfBlinrGpg8OK2bOkdS9DzPMxdWBYEbf8
iPeF/QB/FaqO
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{19., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{19., 21.3}, {-3.7486316975888117`, 0}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6686841468407197`*^9, 3.6686851990774126`*^9, 
  3.668686004732623*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.668683643981838*^9, 3.668683643990344*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6686852303942347`*^9, 3.668685255410269*^9}, {
   3.6686855855229497`*^9, 3.6686856569635935`*^9}, 3.6686858618005457`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Stotfourier", "[", 
     RowBox[{"bmin_", ",", "b_", ",", "delta_", ",", "t_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{
     FractionBox["1", 
      RowBox[{" ", 
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "bmin", ",", "delta"}], 
         "]"}], "-", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", "delta"}], 
         "]"}]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "bmin", ",", "delta"}], "]"}], 
        " ", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "b", ",", "t"}], "]"}]}], " ", 
       "-", " ", 
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", "delta"}], 
         "]"}], " ", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "bmin", ",", "t"}], "]"}]}]}], 
      ")"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"etatot", "[", 
     RowBox[{"bmin_", ",", "b_", ",", " ", "delta_"}], "]"}], " ", ":=", " ", 
    
    RowBox[{
     FractionBox["1", 
      RowBox[{" ", 
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "bmin", ",", "delta"}], 
         "]"}], "-", 
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "b", ",", " ", "delta"}], 
         "]"}]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", " ", "bmin", ",", "delta"}], 
         "]"}], " ", 
        RowBox[{"eta", "[", 
         RowBox[{"b", ",", " ", 
          RowBox[{"x", "[", "7", "]"}]}], "]"}]}], " ", "-", " ", 
       RowBox[{
        RowBox[{"S1hat", "[", 
         RowBox[{
          RowBox[{"x", "[", "7", "]"}], ",", "b", ",", " ", "delta"}], "]"}], 
        " ", 
        RowBox[{"eta", "[", 
         RowBox[{"bmin", ",", " ", 
          RowBox[{"x", "[", "7", "]"}]}], "]"}]}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gaincomb", "[", 
     RowBox[{"bmin_", ",", "b_", ",", "delta_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Stotfourier", "[", 
        RowBox[{"bmin", ",", "b", ",", "delta", ",", " ", 
         RowBox[{"x", "[", "2", "]"}]}], "]"}], "^", "2"}], 
      RowBox[{"2", 
       RowBox[{"Stotfourier", "[", 
        RowBox[{"bmin", ",", "b", ",", "delta", ",", 
         RowBox[{"x", "[", "4", "]"}]}], "]"}]}]], "2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "2", "]"}], 
      RowBox[{"Sqrt", "[", "4", "]"}]]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"losscomb", "[", 
     RowBox[{"bmin_", ",", "b_", ",", "delta_"}], "]"}], " ", ":=", " ", 
    RowBox[{"MaxValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "*", 
         FractionBox[
          RowBox[{"Log", "[", "2", "]"}], 
          RowBox[{"Sqrt", "[", "4", "]"}]], 
         RowBox[{"Stotfourier", "[", 
          RowBox[{"bmin", ",", "b", ",", "delta", ",", 
           RowBox[{"x", "[", "4", "]"}]}], "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", "t", "]"}], "+", 
            FractionBox[
             RowBox[{"Stotfourier", "[", 
              RowBox[{"bmin", ",", "b", ",", "delta", ",", 
               RowBox[{"x", "[", "2", "]"}]}], "]"}], 
             RowBox[{
              RowBox[{"Sqrt", "[", "2", "]"}], 
              RowBox[{"Stotfourier", "[", 
               RowBox[{"bmin", ",", "b", ",", "delta", ",", 
                RowBox[{"x", "[", "4", "]"}]}], "]"}]}]]}], ")"}], "^", 
          "2"}]}], ",", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "<", " ", "t", "\[LessEqual]", " ", 
         "\[Pi]"}]}], "}"}], ",", "t"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"etaplot5", "[", 
    RowBox[{"bmin_", ",", "b_", ",", "delta_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"etatot", "[", 
     RowBox[{"bmin", ",", "b", ",", "delta"}], "]"}], " ", "-", "  ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "5", "]"}], 
      RowBox[{"Sqrt", "[", "5", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", "delta", ",", 
        RowBox[{"x", "[", "5", "]"}]}], "]"}], "]"}]}], "+", 
    RowBox[{"gaincomb", "[", 
     RowBox[{"bmin", ",", "b", ",", "delta"}], "]"}], " ", "-", " ", 
    RowBox[{"losscomb", "[", 
     RowBox[{"bmin", ",", "b", ",", "delta"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6686862367029753`*^9, 3.6686862610666485`*^9}, {
   3.6686862917595067`*^9, 3.6686863538487577`*^9}, {3.6686863852604303`*^9, 
   3.6686864693033657`*^9}, {3.6686902516703167`*^9, 
   3.6686903341254325`*^9}, {3.668690364290903*^9, 3.6686904461386786`*^9}, 
   3.668690476898462*^9, {3.668690511484128*^9, 3.668690554083327*^9}, {
   3.6686906104659815`*^9, 3.668690629907342*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"etaplot3", "[", 
    RowBox[{"bmin_", ",", "b_", ",", "delta_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"etatot", "[", 
     RowBox[{"bmin", ",", "b", ",", "delta"}], "]"}], " ", "-", "  ", 
    RowBox[{"2", "*", 
     FractionBox[
      RowBox[{"Log", "[", "3", "]"}], 
      RowBox[{"Sqrt", "[", "3", "]"}]], 
     RowBox[{"Abs", "[", 
      RowBox[{"Stotfourier", "[", 
       RowBox[{"bmin", ",", "b", ",", "delta", ",", 
        RowBox[{"x", "[", "3", "]"}]}], "]"}], "]"}]}], "+", 
    RowBox[{"gaincomb", "[", 
     RowBox[{"bmin", ",", "b", ",", "delta"}], "]"}], " ", "-", " ", 
    RowBox[{"losscomb", "[", 
     RowBox[{"bmin", ",", "b", ",", "delta"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.668690485995248*^9, 3.6686905956996126`*^9}}],

Cell[BoxData[{
 RowBox[{"S1hat", "[", 
  RowBox[{
   RowBox[{"x", "[", "7", "]"}], ",", " ", "18.87", ",", " ", 
   RowBox[{"x", "[", "5", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"S1hat", "[", 
  RowBox[{
   RowBox[{"x", "[", "7", "]"}], ",", " ", "21", ",", " ", 
   RowBox[{"x", "[", "5", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.66869065748627*^9, 3.6686906598117733`*^9}, {
  3.6686912549822416`*^9, 3.668691274574312*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.36911198181720656`"}]], "Output",
 CellChangeTimes->{3.6686912776025085`*^9, 3.668691323534583*^9}],

Cell[BoxData["0.47597689780582386`"], "Output",
 CellChangeTimes->{3.6686912776025085`*^9, 3.6686913239347057`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"etaplot3", "[", 
  RowBox[{"18.87", ",", "20.979", ",", 
   RowBox[{"x", "[", "5", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6686913362237806`*^9, 3.6686913496237135`*^9}, {
  3.6686914183089256`*^9, 3.668691426182048*^9}, {3.6686914595586348`*^9, 
  3.668691461543565*^9}, {3.6686914990053988`*^9, 3.668691601220463*^9}}],

Cell[BoxData["0.0007300026193765019`"], "Output",
 CellChangeTimes->{
  3.668691364849789*^9, 3.668691437415213*^9, 3.6686914718801365`*^9, {
   3.6686915101118994`*^9, 3.6686916127246156`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gaincomb", "[", 
   RowBox[{"18.87", ",", "21", ",", 
    RowBox[{"x", "[", "5", "]"}]}], "]"}], " ", "-", " ", 
  RowBox[{"losscomb", "[", 
   RowBox[{"18.87", ",", "21", ",", 
    RowBox[{"x", "[", "5", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.668691685100967*^9, 3.6686917006701183`*^9}, {
  3.668691805348608*^9, 3.668691818365592*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.7435497857079758`"}]], "Output",
 CellChangeTimes->{3.668691706707306*^9, 3.6686918294966316`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"losscomb", "[", 
  RowBox[{"18.87", ",", "21", ",", 
   RowBox[{"x", "[", "5", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6686917161009817`*^9, 3.668691716892959*^9}}],

Cell[BoxData["4.60784267189345`"], "Output",
 CellChangeTimes->{3.6686917334990807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"2", "*", 
    FractionBox[
     RowBox[{"Log", "[", "2", "]"}], 
     RowBox[{"Sqrt", "[", "2", "]"}]], 
    RowBox[{"Abs", "[", 
     RowBox[{"Stotfourier", "[", 
      RowBox[{"18.87", ",", "21", ",", 
       RowBox[{"x", "[", "5", "]"}], ",", 
       RowBox[{"x", "[", "2", "]"}]}], "]"}], "]"}]}], "+", "  ", 
   RowBox[{"2", "*", 
    FractionBox[
     RowBox[{"Log", "[", "2", "]"}], 
     RowBox[{"Sqrt", "[", "4", "]"}]], 
    RowBox[{"Abs", "[", 
     RowBox[{"Stotfourier", "[", 
      RowBox[{"18.87", ",", "21", ",", 
       RowBox[{"x", "[", "5", "]"}], ",", 
       RowBox[{"x", "[", "4", "]"}]}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6686917480930986`*^9, 3.66869179433321*^9}}],

Cell[BoxData["0.7435497857079749`"], "Output",
 CellChangeTimes->{3.6686917991692457`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6686913115735097`*^9, 3.6686913203007975`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"etaplot3", "[", 
    RowBox[{"18.87", ",", "b", ",", " ", 
     RowBox[{"x", "[", "5", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "20.8", ",", "21.5", ",", "0.005"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.668690700304146*^9, 3.668690715432166*^9}, {
  3.66870962585289*^9, 3.6687096281713953`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0038500000000000006`],
     AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0038500000000000006`],
     AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1: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
sNxO9j+k3RXE
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{20.8, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{20.8, 21.5}, {-0.15365929047548688`, 0.5533934986682427}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.668690900804624*^9, 3.6687110563618946`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"etaplot3", "[", 
  RowBox[{"18.87", ",", "20.979", ",", " ", 
   RowBox[{"x", "[", "5", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.668711813996231*^9, 3.668711816604148*^9}}],

Cell[BoxData["0.0007300026193765019`"], "Output",
 CellChangeTimes->{3.668711827669632*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.66869047960944*^9, 3.6686904796154475`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"etaplot5", "[", 
    RowBox[{"18.87", ",", "b", ",", " ", 
     RowBox[{"x", "[", "3", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "20.8", ",", "21.5", ",", "0.05"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6686910404870253`*^9, 3.668691045110801*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{20.8, -0.9084145662766221}, {20.85, -0.725045389338463}, {
     20.900000000000002`, -0.5635670791183562}, {
     20.95, -0.41887120169826986`}, {21., -0.28727105074421555`}, {
     21.05, -0.1660371051221743}, {21.1, -0.05310317789636265}, {
     21.150000000000002`, 0.05312573094555617}, {21.2, 0.1539027377281541}, {
     21.25, 0.2502283101697538}, {21.3, 0.3429132331327116}, {21.35, 
     0.43262395380784824`}, {21.400000000000002`, 0.5199158232218744}, {21.45,
      0.6052578892501979}, {21.5, 0.6890516790652741}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{20.8, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{20.8, 21.5}, {-0.9084145662766221, 0.6890516790652741}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6686911880926957`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.668690478160604*^9, 3.6686904781686*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.668686925462418*^9, 3.6686869562913485`*^9}, {
   3.6686899247472315`*^9, 3.6686899842022095`*^9}, {3.6686900671553144`*^9, 
   3.6686900904189477`*^9}, 3.6686906541216145`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.668690655274946*^9, 3.668690655279935*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6686906562458715`*^9, 3.6686906562498636`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6686814504832726`*^9, 3.6686814809738264`*^9}}],

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"etaplot", "[", 
    RowBox[{"18.87", ",", "b"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "20.8", ",", "21.5", ",", "0.05"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.668681478453533*^9, 3.6686814784815264`*^9}, 
   3.6686864947603025`*^9, {3.668686564836689*^9, 3.6686866077977467`*^9}, {
   3.668686844205838*^9, 3.6686868638451347`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{20.8, -0.9084145662766221}, {20.85, -0.725045389338463}, {
     20.900000000000002`, -0.5635670791183562}, {
     20.95, -0.41887120169826986`}, {21., -0.28727105074421555`}, {
     21.05, -0.1660371051221725}, {21.1, -0.053103177896344}, {
     21.150000000000002`, 0.05312573094555617}, {21.2, 0.1539027377281541}, {
     21.25, 0.2502283103587297}, {21.3, 0.3429132331327116}, {21.35, 
     0.4326239538081742}, {21.400000000000002`, 0.5199158232218744}, {21.45, 
     0.6052578892501979}, {21.5, 0.6890516790652741}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{20.8, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{20.8, 21.5}, {-0.9084145662766221, 0.6890516790652741}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.668686825287253*^9, 3.668686996955965*^9}]
},
WindowSize->{1664, 967},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 134, 3, 31, "Input"],
Cell[695, 25, 779, 24, 56, "Input"],
Cell[1477, 51, 7213, 207, 631, "Input"],
Cell[8693, 260, 241, 6, 52, "Input"],
Cell[CellGroupData[{
Cell[8959, 270, 1900, 53, 89, "Input"],
Cell[10862, 325, 77, 1, 31, "Output"],
Cell[10942, 328, 54955, 915, 201, "Output"]
}, Open  ]],
Cell[65912, 1246, 144, 2, 31, InheritFromParent],
Cell[66059, 1250, 94, 1, 31, InheritFromParent],
Cell[66156, 1253, 92, 1, 31, InheritFromParent],
Cell[66251, 1256, 92, 1, 31, InheritFromParent],
Cell[CellGroupData[{
Cell[66368, 1261, 135203, 2242, 279, "Input"],
Cell[201574, 3505, 82, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201693, 3511, 6502, 184, 464, "Input"],
Cell[208198, 3697, 1056, 18, 21, "Message"],
Cell[209257, 3717, 1044, 18, 21, "Message"],
Cell[210304, 3737, 1191, 20, 21, "Message"],
Cell[211498, 3759, 638, 13, 21, "Message"],
Cell[212139, 3774, 40302, 711, 370, "Output"],
Cell[252444, 4487, 248, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252729, 4495, 298, 7, 52, "Input"],
Cell[253030, 4504, 89, 2, 31, "Output"],
Cell[253122, 4508, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253231, 4514, 328, 7, 31, "Input"],
Cell[253562, 4523, 157, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253756, 4531, 354, 7, 31, "Input"],
Cell[254113, 4540, 136, 2, 31, "Output"]
}, Open  ]],
Cell[254264, 4545, 68, 1, 31, "Input"],
Cell[254335, 4548, 3432, 51, 31, "Input"],
Cell[CellGroupData[{
Cell[257792, 4603, 373, 8, 52, "Input"],
Cell[258168, 4613, 167, 2, 31, "Output"],
Cell[258338, 4617, 167, 2, 31, "Output"]
}, Open  ]],
Cell[258520, 4622, 4276, 117, 164, "Input"],
Cell[CellGroupData[{
Cell[262821, 4743, 1920, 43, 77, "Input"],
Cell[264744, 4788, 3346, 81, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268127, 4874, 1246, 34, 77, "Input"],
Cell[269376, 4910, 3157, 78, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272570, 4993, 1619, 44, 70, "Input"],
Cell[274192, 5039, 5713, 122, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279942, 5166, 416, 8, 52, "Input"],
Cell[280361, 5176, 139, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280537, 5183, 595, 12, 31, "Input"],
Cell[281135, 5197, 5983, 131, 227, "Output"],
Cell[287121, 5330, 1050, 19, 21, "Message"]
}, Open  ]],
Cell[288186, 5352, 92, 1, 31, "Input"],
Cell[288281, 5355, 91, 2, 31, "Input"],
Cell[288375, 5359, 100, 1, 30, "Text"],
Cell[288478, 5362, 163, 2, 31, "Input"],
Cell[288644, 5366, 92, 1, 31, "Input"],
Cell[288739, 5369, 472, 13, 31, "Input"],
Cell[CellGroupData[{
Cell[289236, 5386, 329, 9, 31, "Input"],
Cell[289568, 5397, 10520, 199, 232, 4920, 105, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[300103, 5599, 164, 2, 31, "Input"],
Cell[300270, 5603, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[300387, 5608, 361, 10, 31, "Input"],
Cell[300751, 5620, 6964, 145, 236, "Output"]
}, Open  ]],
Cell[307730, 5768, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[307847, 5773, 437, 11, 31, "Input"],
Cell[308287, 5786, 13831, 254, 244, 6865, 138, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[322133, 6043, 168, 2, 31, "Input"],
Cell[322304, 6047, 2783, 76, 147, "Input"],
Cell[325090, 6125, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[325207, 6130, 1543, 38, 77, "Input"],
Cell[326753, 6170, 6190, 130, 242, 3110, 78, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[332958, 6303, 16, 0, 30, "Text"],
Cell[332977, 6305, 109, 6, 87, "Text"],
Cell[333089, 6313, 547, 16, 52, "Input"],
Cell[CellGroupData[{
Cell[333661, 6333, 399, 10, 31, "Input"],
Cell[334063, 6345, 4982, 106, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339082, 6456, 361, 10, 31, "Input"],
Cell[339446, 6468, 6969, 144, 227, "Output"]
}, Open  ]],
Cell[346430, 6615, 94, 1, 31, "Input"],
Cell[346527, 6618, 164, 2, 31, "Input"],
Cell[346694, 6622, 3841, 107, 164, "Input"],
Cell[350538, 6731, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[350655, 6736, 770, 15, 31, "Input"],
Cell[351428, 6753, 3269, 81, 217, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354734, 6839, 160, 3, 31, "Input"],
Cell[354897, 6844, 91, 1, 31, "Output"]
}, Open  ]],
Cell[355003, 6848, 1509, 43, 86, "Input"],
Cell[CellGroupData[{
Cell[356537, 6895, 467, 10, 31, "Input"],
Cell[357007, 6907, 3140, 78, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360184, 6990, 211, 4, 31, "Input"],
Cell[360398, 6996, 139, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360574, 7003, 429, 10, 31, "Input"],
Cell[361006, 7015, 3125, 79, 226, "Output"]
}, Open  ]],
Cell[364146, 7097, 1374, 39, 48, "Input"],
Cell[CellGroupData[{
Cell[365545, 7140, 598, 13, 31, "Input"],
Cell[366146, 7155, 3272, 82, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369455, 7242, 159, 3, 31, "Input"],
Cell[369617, 7247, 89, 1, 31, "Output"]
}, Open  ]],
Cell[369721, 7251, 145, 5, 68, "Text"],
Cell[369869, 7258, 26, 0, 31, "Input"],
Cell[369898, 7260, 855, 23, 48, "Input"],
Cell[370756, 7285, 1101, 25, 49, "Input"],
Cell[371860, 7312, 1834, 44, 70, "Input"],
Cell[CellGroupData[{
Cell[373719, 7360, 553, 12, 31, "Input"],
Cell[374275, 7374, 178, 3, 31, "Output"]
}, Open  ]],
Cell[374468, 7380, 1116, 26, 69, InheritFromParent],
Cell[375587, 7408, 257, 4, 31, "Output"],
Cell[CellGroupData[{
Cell[375869, 7416, 1081, 28, 48, "Input"],
Cell[376953, 7446, 3043, 78, 227, "Output"]
}, Open  ]],
Cell[380011, 7527, 118, 2, 52, InheritFromParent],
Cell[CellGroupData[{
Cell[380154, 7533, 1368, 36, 48, "Input"],
Cell[381525, 7571, 3075, 79, 229, "Output"]
}, Open  ]],
Cell[384615, 7653, 92, 1, 31, InheritFromParent],
Cell[384710, 7656, 172, 2, 31, "Input"],
Cell[384885, 7660, 5537, 154, 323, "Input"],
Cell[390425, 7816, 807, 20, 48, "Input"],
Cell[391235, 7838, 444, 10, 52, InheritFromParent],
Cell[391682, 7850, 130, 2, 31, "Output"],
Cell[391815, 7854, 115, 1, 31, "Output"],
Cell[CellGroupData[{
Cell[391955, 7859, 352, 6, 31, "Input"],
Cell[392310, 7867, 194, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392541, 7875, 384, 9, 31, "Input"],
Cell[392928, 7886, 129, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393094, 7893, 196, 4, 31, "Input"],
Cell[393293, 7899, 88, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393418, 7905, 760, 21, 48, "Input"],
Cell[394181, 7928, 90, 1, 31, "Output"]
}, Open  ]],
Cell[394286, 7932, 96, 1, 31, InheritFromParent],
Cell[CellGroupData[{
Cell[394407, 7937, 443, 10, 31, "Input"],
Cell[394853, 7949, 4961, 109, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399851, 8063, 203, 4, 31, "Input"],
Cell[400057, 8069, 91, 1, 64, "Output"]
}, Open  ]],
Cell[400163, 8073, 93, 1, 31, InheritFromParent],
Cell[CellGroupData[{
Cell[400281, 8078, 394, 9, 31, "Input"],
Cell[400678, 8089, 3109, 77, 225, "Output"]
}, Open  ]],
Cell[403802, 8169, 90, 1, 31, InheritFromParent],
Cell[403895, 8172, 245, 3, 52, "Input"],
Cell[404143, 8177, 92, 1, 31, InheritFromParent],
Cell[404238, 8180, 96, 1, 31, InheritFromParent],
Cell[404337, 8183, 96, 1, 31, "Input"],
Cell[404436, 8186, 475, 10, 31, InheritFromParent],
Cell[404914, 8198, 3125, 77, 225, "Output"]
}
]
*)

(* End of internal cache information *)
